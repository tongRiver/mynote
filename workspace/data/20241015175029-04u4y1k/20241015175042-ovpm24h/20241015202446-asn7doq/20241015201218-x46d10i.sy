{"ID":"20241015201218-x46d10i","Spec":"1","Type":"NodeDocument","Properties":{"icon":"heima.jpg","id":"20241015201218-x46d10i","title":"SpringBootWeb登录认证详解","type":"doc","updated":"20241019222641"},"Children":[{"ID":"20241015201219-w7i1dg3","Type":"NodeHeading","HeadingLevel":1,"Properties":{"id":"20241015201219-w7i1dg3","updated":"20241015201219"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"# ","Properties":{"id":""}},{"Type":"NodeText","Data":"案例-登录认证"}]},{"ID":"20241015201220-ulxss6z","Type":"NodeParagraph","Properties":{"id":"20241015201220-ulxss6z","updated":"20241015201220"},"Children":[{"Type":"NodeText","Data":"在前面的课程中，我们已经实现了部门管理、员工管理的基本功能，但是大家会发现，我们并没有登录，就直接访问到了Tlias智能学习辅助系统的后台。 这是不安全的，所以我们今天的主题就是登录认证。 最终我们要实现的效果就是用户必须登录之后，才可以访问后台系统中的功能。"}]},{"ID":"20241015201221-j3plt6o","Type":"NodeParagraph","Properties":{"id":"20241015201221-j3plt6o","updated":"20241015201221"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105085212629","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105085212629-20241015202541-kkudx1t.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201222-3d21kf2","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015201222-3d21kf2","updated":"20241015201222"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. 登录功能"}]},{"ID":"20241015201223-px0a5wv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201223-px0a5wv","updated":"20241015201223"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.1 需求"}]},{"ID":"20241015201224-5tjvu1k","Type":"NodeParagraph","Properties":{"id":"20241015201224-5tjvu1k","updated":"20241015201224"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105085404855","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105085404855-20241015202541-75k24kf.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201225-w4u3qvr","Type":"NodeParagraph","Properties":{"id":"20241015201225-w4u3qvr","updated":"20241015201225"},"Children":[{"Type":"NodeText","Data":"在登录界面中，我们可以输入用户的用户名以及密码，然后点击 \"登录\" 按钮就要请求服务器，服务端判断用户输入的用户名或者密码是否正确。如果正确，则返回成功结果，前端跳转至系统首页面。"}]},{"ID":"20241015201226-dmwly11","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201226-dmwly11","updated":"20241015201226"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.2 接口文档"}]},{"ID":"20241015201227-69m4pub","Type":"NodeParagraph","Properties":{"id":"20241015201227-69m4pub","updated":"20241015201227"},"Children":[{"Type":"NodeText","Data":"我们参照接口文档来开发登录功能"}]},{"ID":"20241015201228-9sfje23","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201228-9sfje23","updated":"20241015201228"},"Children":[{"ID":"20241015201229-dgk3gz6","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201229-dgk3gz6","updated":"20241015201229"},"Children":[{"ID":"20241015201230-v77vr5g","Type":"NodeParagraph","Properties":{"id":"20241015201230-v77vr5g","updated":"20241015201230"},"Children":[{"Type":"NodeText","Data":"基本信息"}]},{"ID":"20241015201231-b6r5iuh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201231-b6r5iuh","updated":"20241015201231"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"请求路径：/login\n\n请求方式：POST\n\n接口描述：该接口用于员工登录Tlias智能学习辅助系统，登录完毕后，系统下发JWT令牌。 \n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201232-0iwpqva","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201232-0iwpqva","updated":"20241015201232"},"Children":[{"ID":"20241015201233-gygatdj","Type":"NodeParagraph","Properties":{"id":"20241015201233-gygatdj","updated":"20241015201233"},"Children":[{"Type":"NodeText","Data":"请求参数"}]},{"ID":"20241015201234-hmn86qj","Type":"NodeParagraph","Properties":{"id":"20241015201234-hmn86qj","updated":"20241015201234"},"Children":[{"Type":"NodeText","Data":"参数格式：application/json"}]},{"ID":"20241015201235-ocrfi7s","Type":"NodeParagraph","Properties":{"id":"20241015201235-ocrfi7s","updated":"20241015201235"},"Children":[{"Type":"NodeText","Data":"参数说明："}]},{"ID":"20241015201236-zdpqxtn","Type":"NodeTable","Data":"| 名称     | 类型   | 是否必须 | 备注   |\n| -------- | ------ | -------- | ------ |\n| username | string | 必须     | 用户名 |\n| password | string | 必须     | 密码   |","TableAligns":[0,0,0,0],"Properties":{"id":"20241015201236-zdpqxtn","updated":"20241015201236"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"备注"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"username"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用户名"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"password"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"密码"}]}]}]},{"ID":"20241015201237-j4tukm0","Type":"NodeParagraph","Properties":{"id":"20241015201237-j4tukm0","updated":"20241015201237"},"Children":[{"Type":"NodeText","Data":"请求数据样例："}]},{"ID":"20241015201238-6po59sr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201238-6po59sr","updated":"20241015201238"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n\t\"username\": \"jinyong\",\n    \"password\": \"123456\"\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201239-upgwmfx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201239-upgwmfx","updated":"20241015201239"},"Children":[{"ID":"20241015201240-labx2yw","Type":"NodeParagraph","Properties":{"id":"20241015201240-labx2yw","updated":"20241015201240"},"Children":[{"Type":"NodeText","Data":"响应数据"}]},{"ID":"20241015201241-eazqpjq","Type":"NodeParagraph","Properties":{"id":"20241015201241-eazqpjq","updated":"20241015201241"},"Children":[{"Type":"NodeText","Data":"参数格式：application/json"}]},{"ID":"20241015201242-61pukvv","Type":"NodeParagraph","Properties":{"id":"20241015201242-61pukvv","updated":"20241015201242"},"Children":[{"Type":"NodeText","Data":"参数说明："}]},{"ID":"20241015201243-t68ey13","Type":"NodeTable","Data":"| 名称 | 类型   | 是否必须 | 默认值 | 备注                     | 其他信息 |\n| ---- | ------ | -------- | ------ | ------------------------ | -------- |\n| code | number | 必须     |        | 响应码, 1 成功 ; 0  失败 |          |\n| msg  | string | 非必须   |        | 提示信息                 |          |\n| data | string | 必须     |        | 返回的数据 , jwt令牌     |          |","TableAligns":[0,0,0,0,0,0],"Properties":{"id":"20241015201243-t68ey13","updated":"20241015201243"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认值"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"备注"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"其他信息"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"code"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"number"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"响应码, 1 成功 ; 0  失败"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"msg"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"非必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"提示信息"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"data"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"返回的数据 , jwt令牌"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]}]},{"ID":"20241015201244-h9w7tyt","Type":"NodeParagraph","Properties":{"id":"20241015201244-h9w7tyt","updated":"20241015201244"},"Children":[{"Type":"NodeText","Data":"响应数据样例："}]},{"ID":"20241015201245-yrdrvd4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201245-yrdrvd4","updated":"20241015201245"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n  \"code\": 1,\n  \"msg\": \"success\",\n  \"data\": \"eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoi6YeR5bq4IiwiaWQiOjEsInVzZXJuYW1lIjoiamlueW9uZyIsImV4cCI6MTY2MjIwNzA0OH0.KkUc_CXJZJ8Dd063eImx4H9Ojfrr6XMJ-yVzaWCVZCo\"\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}]},{"ID":"20241015201246-h6mbuql","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201246-h6mbuql","updated":"20241015201246"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.3 思路分析"}]},{"ID":"20241015201247-tq9voul","Type":"NodeParagraph","Properties":{"id":"20241015201247-tq9voul","updated":"20241015201247"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105175310401","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105175310401-20241015202541-95mqx95.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201248-82szi84","Type":"NodeParagraph","Properties":{"id":"20241015201248-82szi84","updated":"20241015201248"},"Children":[{"Type":"NodeText","Data":"登录服务端的核心逻辑就是：接收前端请求传递的用户名和密码 ，然后再根据用户名和密码查询用户信息，如果用户信息存在，则说明用户输入的用户名和密码正确。如果查询到的用户不存在，则说明用户输入的用户名和密码错误。"}]},{"ID":"20241015201249-scd5l1o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201249-scd5l1o","updated":"20241015201249"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.4 功能开发"}]},{"ID":"20241015201250-m1skl2o","Type":"NodeParagraph","Properties":{"id":"20241015201250-m1skl2o","updated":"20241015201250"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"LoginController"}]},{"ID":"20241015201251-m4yoh2i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201251-m4yoh2i","updated":"20241015201251"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@RestController\npublic class LoginController {\n\n    @Autowired\n    private EmpService empService;\n\n    @PostMapping(\"/login\")\n    public Result login(@RequestBody Emp emp){\n        Emp e = empService.login(emp);\n\t    return  e != null ? Result.success():Result.error(\"用户名或密码错误\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201252-4vc3jks","Type":"NodeParagraph","Properties":{"id":"20241015201252-4vc3jks","updated":"20241015201252"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"EmpService"}]},{"ID":"20241015201253-1pb8341","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201253-1pb8341","updated":"20241015201253"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public interface EmpService {\n\n    /**\n     * 用户登录\n     * @param emp\n     * @return\n     */\n    public Emp login(Emp emp);\n\n    //省略其他代码...\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201254-vyj276q","Type":"NodeParagraph","Properties":{"id":"20241015201254-vyj276q","updated":"20241015201254"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"EmpServiceImpl"}]},{"ID":"20241015201255-5uhmzu9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201255-5uhmzu9","updated":"20241015201255"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Slf4j\n@Service\npublic class EmpServiceImpl implements EmpService {\n    @Autowired\n    private EmpMapper empMapper;\n\n    @Override\n    public Emp login(Emp emp) {\n        //调用dao层功能：登录\n        Emp loginEmp = empMapper.getByUsernameAndPassword(emp);\n\n        //返回查询结果给Controller\n        return loginEmp;\n    }   \n    \n    //省略其他代码...\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201256-uylj5wc","Type":"NodeParagraph","Properties":{"id":"20241015201256-uylj5wc","updated":"20241015201256"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"EmpMapper"}]},{"ID":"20241015201257-j5glqng","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201257-j5glqng","updated":"20241015201257"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Mapper\npublic interface EmpMapper {\n\n    @Select(\"select id, username, password, name, gender, image, job, entrydate, dept_id, create_time, update_time \" +\n            \"from emp \" +\n            \"where username=#{username} and password =#{password}\")\n    public Emp getByUsernameAndPassword(Emp emp);\n    \n    //省略其他代码...\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201258-w345b7x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201258-w345b7x","updated":"20241015201258"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1.5 测试"}]},{"ID":"20241015201259-27v30qj","Type":"NodeParagraph","Properties":{"id":"20241015201259-27v30qj","updated":"20241015201259"},"Children":[{"Type":"NodeText","Data":"功能开发完毕后，我们就可以启动服务，打开postman进行测试了。"}]},{"ID":"20241015201260-cm9afau","Type":"NodeParagraph","Properties":{"id":"20241015201260-cm9afau","updated":"20241015201260"},"Children":[{"Type":"NodeText","Data":"发起POST请求，访问：http://localhost:8080/login"}]},{"ID":"20241015201261-aoq620i","Type":"NodeParagraph","Properties":{"id":"20241015201261-aoq620i","updated":"20241015201261"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20220907132229245","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20220907132229245-20241015202541-n14av4t.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201262-0in5jkw","Type":"NodeParagraph","Properties":{"id":"20241015201262-0in5jkw","updated":"20241015201262"},"Children":[{"Type":"NodeText","Data":"postman测试通过了，那接下来，我们就可以结合着前端工程进行联调测试。"}]},{"ID":"20241015201263-8hviyim","Type":"NodeParagraph","Properties":{"id":"20241015201263-8hviyim","updated":"20241015201263"},"Children":[{"Type":"NodeText","Data":"先退出系统，进入到登录页面："}]},{"ID":"20241015201264-13yq3nt","Type":"NodeParagraph","Properties":{"id":"20241015201264-13yq3nt","updated":"20241015201264"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105193104848","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105193104848-20241015202541-eer7csp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201265-zzm8h93","Type":"NodeParagraph","Properties":{"id":"20241015201265-zzm8h93","updated":"20241015201265"},"Children":[{"Type":"NodeText","Data":"在登录页面输入账户密码："}]},{"ID":"20241015201266-kiyxn8z","Type":"NodeParagraph","Properties":{"id":"20241015201266-kiyxn8z","updated":"20241015201266"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105085212629","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105085212629-20241015202541-iivyk5f.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201267-hnxp2ic","Type":"NodeParagraph","Properties":{"id":"20241015201267-hnxp2ic","updated":"20241015201267"},"Children":[{"Type":"NodeText","Data":"登录成功之后进入到后台管理系统页面："}]},{"ID":"20241015201268-um5mlql","Type":"NodeParagraph","Properties":{"id":"20241015201268-um5mlql","updated":"20241015201268"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105192918098","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105192918098-20241015202541-zutv10r.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201269-tpka6um","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015201269-tpka6um","updated":"20241015201269"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. 登录校验"}]},{"ID":"20241015201270-q4v6sxd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201270-q4v6sxd","updated":"20241015201270"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.1 问题分析"}]},{"ID":"20241015201271-f928ix9","Type":"NodeParagraph","Properties":{"id":"20241015201271-f928ix9","updated":"20241015201271"},"Children":[{"Type":"NodeText","Data":"我们已经完成了基础登录功能的开发与测试，在我们登录成功后就可以进入到后台管理系统中进行数据的操作。"}]},{"ID":"20241015201272-x6we63z","Type":"NodeParagraph","Properties":{"id":"20241015201272-x6we63z","updated":"20241015201272"},"Children":[{"Type":"NodeText","Data":"但是当我们在浏览器中新的页面上输入地址："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"http://localhost:9528/#/system/dept"},{"Type":"NodeText","Data":"，发现没有登录仍然可以进入到后端管理系统页面。"}]},{"ID":"20241015201273-qhk7l60","Type":"NodeParagraph","Properties":{"id":"20241015201273-qhk7l60","updated":"20241015201273"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20220907133329021","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20220907133329021-20241015202541-bvr7eyw.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201274-il1sfu2","Type":"NodeParagraph","Properties":{"id":"20241015201274-il1sfu2","updated":"20241015201274"},"Children":[{"Type":"NodeText","Data":"而真正的登录功能应该是：登陆后才能访问后端系统页面，不登陆则跳转登陆页面进行登陆。"}]},{"ID":"20241015201275-m8x0aqz","Type":"NodeParagraph","Properties":{"id":"20241015201275-m8x0aqz","updated":"20241015201275"},"Children":[{"Type":"NodeText","Data":"为什么会出现这个问题？其实原因很简单，就是因为针对于我们当前所开发的部门管理、员工管理以及文件上传等相关接口来说，我们在服务器端并没有做任何的判断，没有去判断用户是否登录了。所以无论用户是否登录，都可以访问部门管理以及员工管理的相关数据。所以我们目前所开发的登录功能，它只是徒有其表。而我们要想解决这个问题，我们就需要完成一步非常重要的操作：登录校验。"}]},{"ID":"20241015201276-pi8vh9p","Type":"NodeParagraph","Properties":{"id":"20241015201276-pi8vh9p","updated":"20241015201276"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105180811717","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105180811717-20241015202541-oobxl6u.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201277-wh83sdk","Type":"NodeParagraph","Properties":{"id":"20241015201277-wh83sdk","updated":"20241015201277"},"Children":[{"Type":"NodeText","Data":"什么是登录校验？"}]},{"ID":"20241015201278-r764f8r","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201278-r764f8r","updated":"20241015201278"},"Children":[{"ID":"20241015201279-2hc8tco","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201279-2hc8tco","updated":"20241015201279"},"Children":[{"ID":"20241015201280-obice4k","Type":"NodeParagraph","Properties":{"id":"20241015201280-obice4k","updated":"20241015201280"},"Children":[{"Type":"NodeText","Data":"所谓登录校验，指的是我们在服务器端接收到浏览器发送过来的请求之后，首先我们要对请求进行校验。先要校验一下用户登录了没有，如果用户已经登录了，就直接执行对应的业务操作就可以了；如果用户没有登录，此时就不允许他执行相关的业务操作，直接给前端响应一个错误的结果，最终跳转到登录页面，要求他登录成功之后，再来访问对应的数据。"}]}]}]},{"ID":"20241015201281-wd37ikl","Type":"NodeParagraph","Properties":{"id":"20241015201281-wd37ikl","updated":"20241015201281"},"Children":[{"Type":"NodeText","Data":"了解完什么是登录校验之后，接下来我们分析一下登录校验大概的实现思路。"}]},{"ID":"20241015201282-ewznny5","Type":"NodeParagraph","Properties":{"id":"20241015201282-ewznny5","updated":"20241015201282"},"Children":[{"Type":"NodeText","Data":"首先我们在宏观上先有一个认知："}]},{"ID":"20241015201283-5ezawmr","Type":"NodeParagraph","Properties":{"id":"20241015201283-5ezawmr","updated":"20241015201283"},"Children":[{"Type":"NodeText","Data":"前面在讲解HTTP协议的时候，我们提到HTTP协议是无状态协议。什么又是无状态的协议？"}]},{"ID":"20241015201284-0cefnjz","Type":"NodeParagraph","Properties":{"id":"20241015201284-0cefnjz","updated":"20241015201284"},"Children":[{"Type":"NodeText","Data":"所谓无状态，指的是每一次请求都是独立的，下一次请求并不会携带上一次请求的数据。而浏览器与服务器之间进行交互，基于HTTP协议也就意味着现在我们通过浏览器来访问了登陆这个接口，实现了登陆的操作，接下来我们在执行其他业务操作时，服务器也并不知道这个员工到底登陆了没有。因为HTTP协议是无状态的，两次请求之间是独立的，所以是无法判断这个员工到底登陆了没有。"}]},{"ID":"20241015201285-zfgkk4k","Type":"NodeParagraph","Properties":{"id":"20241015201285-zfgkk4k","updated":"20241015201285"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105194710533","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105194710533-20241015202541-ejtokqb.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201286-cqujwah","Type":"NodeParagraph","Properties":{"id":"20241015201286-cqujwah","updated":"20241015201286"},"Children":[{"Type":"NodeText","Data":"那应该怎么来实现登录校验的操作呢？具体的实现思路可以分为两部分："}]},{"ID":"20241015201287-rxk6a8d","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201287-rxk6a8d","updated":"20241015201287"},"Children":[{"ID":"20241015201288-k51tvdr","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201288-k51tvdr","updated":"20241015201288"},"Children":[{"ID":"20241015201289-njcgb3g","Type":"NodeParagraph","Properties":{"id":"20241015201289-njcgb3g","updated":"20241015201289"},"Children":[{"Type":"NodeText","Data":"在员工登录成功后，需要将用户登录成功的信息存起来，记录用户已经登录成功的标记。"}]}]},{"ID":"20241015201290-gdpky4h","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201290-gdpky4h","updated":"20241015201290"},"Children":[{"ID":"20241015201291-gg11554","Type":"NodeParagraph","Properties":{"id":"20241015201291-gg11554","updated":"20241015201291"},"Children":[{"Type":"NodeText","Data":"在浏览器发起请求时，需要在服务端进行统一拦截，拦截后进行登录校验。"}]}]}]},{"ID":"20241015201292-tro738x","Type":"NodeBlockquote","Properties":{"id":"20241015201292-tro738x","updated":"20241015201292"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201293-m9n4gxq","Type":"NodeParagraph","Properties":{"id":"20241015201293-m9n4gxq","updated":"20241015201293"},"Children":[{"Type":"NodeText","Data":"想要判断员工是否已经登录，我们需要在员工登录成功之后，存储一个登录成功的标记，接下来在每一个接口方法执行之前，先做一个条件判断，判断一下这个员工到底登录了没有。如果是登录了，就可以执行正常的业务操作，如果没有登录，会直接给前端返回一个错误的信息，前端拿到这个错误信息之后会自动的跳转到登录页面。"}]},{"ID":"20241015201294-d7f4wc2","Type":"NodeParagraph","Properties":{"id":"20241015201294-d7f4wc2","updated":"20241015201294"},"Children":[{"Type":"NodeText","Data":"我们程序中所开发的查询功能、删除功能、添加功能、修改功能，都需要使用以上套路进行登录校验。此时就会出现：相同代码逻辑，每个功能都需要编写，就会造成代码非常繁琐。"}]},{"ID":"20241015201295-i4wyrcb","Type":"NodeParagraph","Properties":{"id":"20241015201295-i4wyrcb","updated":"20241015201295"},"Children":[{"Type":"NodeText","Data":"为了简化这块操作，我们可以使用一种技术：统一拦截技术。"}]},{"ID":"20241015201296-rtn84vk","Type":"NodeParagraph","Properties":{"id":"20241015201296-rtn84vk","updated":"20241015201296"},"Children":[{"Type":"NodeText","Data":"通过统一拦截的技术，我们可以来拦截浏览器发送过来的所有的请求，拦截到这个请求之后，就可以通过请求来获取之前所存入的登录标记，在获取到登录标记且标记为登录成功，就说明员工已经登录了。如果已经登录，我们就直接放行(意思就是可以访问正常的业务接口了)。"}]}]},{"ID":"20241015201297-muw68ki","Type":"NodeParagraph","Properties":{"id":"20241015201297-muw68ki","updated":"20241015201297"},"Children":[{"Type":"NodeText","Data":"我们要完成以上操作，会涉及到web开发中的两个技术："}]},{"ID":"20241015201298-s8lb5z8","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201298-s8lb5z8","updated":"20241015201298"},"Children":[{"ID":"20241015201299-b175em3","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201299-b175em3","updated":"20241015201299"},"Children":[{"ID":"20241015201300-x1hh28q","Type":"NodeParagraph","Properties":{"id":"20241015201300-x1hh28q","updated":"20241015201300"},"Children":[{"Type":"NodeText","Data":"会话技术"}]}]},{"ID":"20241015201301-7k3te70","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201301-7k3te70","updated":"20241015201301"},"Children":[{"ID":"20241015201302-zbmpac2","Type":"NodeParagraph","Properties":{"id":"20241015201302-zbmpac2","updated":"20241015201302"},"Children":[{"Type":"NodeText","Data":"统一拦截技术"}]}]}]},{"ID":"20241015201303-m63h5w0","Type":"NodeParagraph","Properties":{"id":"20241015201303-m63h5w0","updated":"20241015201303"},"Children":[{"Type":"NodeText","Data":"而统一拦截技术现实方案也有两种："}]},{"ID":"20241015201304-of7a8cy","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201304-of7a8cy","updated":"20241015201304"},"Children":[{"ID":"20241015201305-g2qobac","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201305-g2qobac","updated":"20241015201305"},"Children":[{"ID":"20241015201306-5v1vbi4","Type":"NodeParagraph","Properties":{"id":"20241015201306-5v1vbi4","updated":"20241015201306"},"Children":[{"Type":"NodeText","Data":"Servlet规范中的Filter过滤器"}]}]},{"ID":"20241015201307-yk3jbgv","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201307-yk3jbgv","updated":"20241015201307"},"Children":[{"ID":"20241015201308-9h4mloq","Type":"NodeParagraph","Properties":{"id":"20241015201308-9h4mloq","updated":"20241015201308"},"Children":[{"Type":"NodeText","Data":"Spring提供的interceptor拦截器"}]}]}]},{"ID":"20241015201309-yc6bkth","Type":"NodeParagraph","Properties":{"id":"20241015201309-yc6bkth","updated":"20241015201309"},"Children":[{"Type":"NodeText","Data":"下面我们先学习会话技术，然后再学习统一拦截技术。"}]},{"ID":"20241015201310-6qxbjt9","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201310-6qxbjt9","updated":"20241015201310"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2 会话技术"}]},{"ID":"20241015201311-7sg6w6u","Type":"NodeParagraph","Properties":{"id":"20241015201311-7sg6w6u","updated":"20241015201311"},"Children":[{"Type":"NodeText","Data":"介绍了登录校验的大概思路之后，我们先来学习下会话技术。"}]},{"ID":"20241015201312-abh93pt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201312-abh93pt","updated":"20241015201312"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2.1 会话技术介绍"}]},{"ID":"20241015201313-kc5077i","Type":"NodeParagraph","Properties":{"id":"20241015201313-kc5077i","updated":"20241015201313"},"Children":[{"Type":"NodeText","Data":"什么是会话？"}]},{"ID":"20241015201314-e3ckb5y","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201314-e3ckb5y","updated":"20241015201314"},"Children":[{"ID":"20241015201315-usc4adv","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201315-usc4adv","updated":"20241015201315"},"Children":[{"ID":"20241015201316-mbe8pfx","Type":"NodeParagraph","Properties":{"id":"20241015201316-mbe8pfx","updated":"20241015201316"},"Children":[{"Type":"NodeText","Data":"在我们日常生活当中，会话指的就是谈话、交谈。"}]}]},{"ID":"20241015201317-p8nzlp3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201317-p8nzlp3","updated":"20241015201317"},"Children":[{"ID":"20241015201318-jd1902w","Type":"NodeParagraph","Properties":{"id":"20241015201318-jd1902w","updated":"20241015201318"},"Children":[{"Type":"NodeText","Data":"在web开发当中，会话指的就是浏览器与服务器之间的一次连接，我们就称为一次会话。"}]},{"ID":"20241015201319-qqyyva9","Type":"NodeBlockquote","Properties":{"id":"20241015201319-qqyyva9","updated":"20241015201319"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201320-3dnbs8e","Type":"NodeParagraph","Properties":{"id":"20241015201320-3dnbs8e","updated":"20241015201320"},"Children":[{"Type":"NodeText","Data":"在用户打开浏览器第一次访问服务器的时候，这个会话就建立了，直到有任何一方断开连接，此时会话就结束了。在一次会话当中，是可以包含多次请求和响应的。"}]},{"ID":"20241015201321-7vwjcto","Type":"NodeParagraph","Properties":{"id":"20241015201321-7vwjcto","updated":"20241015201321"},"Children":[{"Type":"NodeText","Data":"比如：打开了浏览器来访问web服务器上的资源（浏览器不能关闭、服务器不能断开）"}]},{"ID":"20241015201322-mknnvsu","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201322-mknnvsu","updated":"20241015201322"},"Children":[{"ID":"20241015201323-gthy199","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201323-gthy199","updated":"20241015201323"},"Children":[{"ID":"20241015201324-jgqdqg0","Type":"NodeParagraph","Properties":{"id":"20241015201324-jgqdqg0","updated":"20241015201324"},"Children":[{"Type":"NodeText","Data":"第1次：访问的是登录的接口，完成登录操作"}]}]},{"ID":"20241015201325-q19htad","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201325-q19htad","updated":"20241015201325"},"Children":[{"ID":"20241015201326-yzxbdke","Type":"NodeParagraph","Properties":{"id":"20241015201326-yzxbdke","updated":"20241015201326"},"Children":[{"Type":"NodeText","Data":"第2次：访问的是部门管理接口，查询所有部门数据"}]}]},{"ID":"20241015201327-l8aixi8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201327-l8aixi8","updated":"20241015201327"},"Children":[{"ID":"20241015201328-c08q8z8","Type":"NodeParagraph","Properties":{"id":"20241015201328-c08q8z8","updated":"20241015201328"},"Children":[{"Type":"NodeText","Data":"第3次：访问的是员工管理接口，查询员工数据"}]}]}]},{"ID":"20241015201329-cdgmznu","Type":"NodeParagraph","Properties":{"id":"20241015201329-cdgmznu","updated":"20241015201329"},"Children":[{"Type":"NodeText","Data":"只要浏览器和服务器都没有关闭，以上3次请求都属于一次会话当中完成的。"}]}]}]}]},{"ID":"20241015201330-f16sftj","Type":"NodeParagraph","Properties":{"id":"20241015201330-f16sftj","updated":"20241015201330"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105203827355","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105203827355-20241015202541-lr0nnet.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201331-g4ow2xv","Type":"NodeParagraph","Properties":{"id":"20241015201331-g4ow2xv","updated":"20241015201331"},"Children":[{"Type":"NodeText","Data":"需要注意的是：会话是和浏览器关联的，当有三个浏览器客户端和服务器建立了连接时，就会有三个会话。同一个浏览器在未关闭之前请求了多次服务器，这多次请求是属于同一个会话。比如：1、2、3这三个请求都是属于同一个会话。当我们关闭浏览器之后，这次会话就结束了。而如果我们是直接把web服务器关了，那么所有的会话就都结束了。"}]},{"ID":"20241015201332-57pnqlm","Type":"NodeParagraph","Properties":{"id":"20241015201332-57pnqlm","updated":"20241015201332"},"Children":[{"Type":"NodeText","Data":"知道了会话的概念了，接下来我们再来了解下会话跟踪。"}]},{"ID":"20241015201333-5p0l7by","Type":"NodeParagraph","Properties":{"id":"20241015201333-5p0l7by","updated":"20241015201333"},"Children":[{"Type":"NodeText","Data":"会话跟踪：一种维护浏览器状态的方法，服务器需要识别多次请求是否来自于同一浏览器，以便在同一次会话的多次请求间共享数据。"}]},{"ID":"20241015201334-y6bz3a4","Type":"NodeBlockquote","Properties":{"id":"20241015201334-y6bz3a4","updated":"20241015201334"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201335-qiwmfd2","Type":"NodeParagraph","Properties":{"id":"20241015201335-qiwmfd2","updated":"20241015201335"},"Children":[{"Type":"NodeText","Data":"服务器会接收很多的请求，但是服务器是需要识别出这些请求是不是同一个浏览器发出来的。比如：1和2这两个请求是不是同一个浏览器发出来的，3和5这两个请求不是同一个浏览器发出来的。如果是同一个浏览器发出来的，就说明是同一个会话。如果是不同的浏览器发出来的，就说明是不同的会话。而识别多次请求是否来自于同一浏览器的过程，我们就称为会话跟踪。"}]}]},{"ID":"20241015201336-qp8y2dq","Type":"NodeParagraph","Properties":{"id":"20241015201336-qp8y2dq","updated":"20241015201336"},"Children":[{"Type":"NodeText","Data":"我们使用会话跟踪技术就是要完成在同一个会话中，多个请求之间进行共享数据。"}]},{"ID":"20241015201337-qyc30s3","Type":"NodeBlockquote","Properties":{"id":"20241015201337-qyc30s3","updated":"20241015201337"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201338-fwvx3go","Type":"NodeParagraph","Properties":{"id":"20241015201338-fwvx3go","updated":"20241015201338"},"Children":[{"Type":"NodeText","Data":"为什么要共享数据呢？"}]},{"ID":"20241015201339-fa7r1zm","Type":"NodeParagraph","Properties":{"id":"20241015201339-fa7r1zm","updated":"20241015201339"},"Children":[{"Type":"NodeText","Data":"由于HTTP是无状态协议，在后面请求中怎么拿到前一次请求生成的数据呢？此时就需要在一次会话的多次请求之间进行数据共享"}]}]},{"ID":"20241015201340-oixn68o","Type":"NodeParagraph","Properties":{"id":"20241015201340-oixn68o","updated":"20241015201340"},"Children":[{"Type":"NodeText","Data":"会话跟踪技术有两种："}]},{"ID":"20241015201341-pk0l772","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201341-pk0l772","updated":"20241015201341"},"Children":[{"ID":"20241015201342-uz9ikw5","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201342-uz9ikw5","updated":"20241015201342"},"Children":[{"ID":"20241015201343-fpjdqm9","Type":"NodeParagraph","Properties":{"id":"20241015201343-fpjdqm9","updated":"20241015201343"},"Children":[{"Type":"NodeText","Data":"Cookie（客户端会话跟踪技术）"}]},{"ID":"20241015201344-3tm1xx6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201344-3tm1xx6","updated":"20241015201344"},"Children":[{"ID":"20241015201345-gqiteb2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201345-gqiteb2","updated":"20241015201345"},"Children":[{"ID":"20241015201346-zd9gly8","Type":"NodeParagraph","Properties":{"id":"20241015201346-zd9gly8","updated":"20241015201346"},"Children":[{"Type":"NodeText","Data":"数据存储在客户端浏览器当中"}]}]}]}]},{"ID":"20241015201347-ohpn65l","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201347-ohpn65l","updated":"20241015201347"},"Children":[{"ID":"20241015201348-f8ei8jp","Type":"NodeParagraph","Properties":{"id":"20241015201348-f8ei8jp","updated":"20241015201348"},"Children":[{"Type":"NodeText","Data":"Session（服务端会话跟踪技术）"}]},{"ID":"20241015201349-0ln157g","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201349-0ln157g","updated":"20241015201349"},"Children":[{"ID":"20241015201350-s05upd3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201350-s05upd3","updated":"20241015201350"},"Children":[{"ID":"20241015201351-e7a3mfi","Type":"NodeParagraph","Properties":{"id":"20241015201351-e7a3mfi","updated":"20241015201351"},"Children":[{"Type":"NodeText","Data":"数据存储在储在服务端"}]}]}]}]},{"ID":"20241015201352-cbdz1hq","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201352-cbdz1hq","updated":"20241015201352"},"Children":[{"ID":"20241015201353-375zgcr","Type":"NodeParagraph","Properties":{"id":"20241015201353-375zgcr","updated":"20241015201353"},"Children":[{"Type":"NodeText","Data":"令牌技术"}]}]}]},{"ID":"20241015201354-y7kctdn","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201354-y7kctdn","updated":"20241017233018"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2.2 会话跟踪方案"}]},{"ID":"20241015201355-y4q50fd","Type":"NodeParagraph","Properties":{"id":"20241015201355-y4q50fd","updated":"20241015201355"},"Children":[{"Type":"NodeText","Data":"上面我们介绍了什么是会话，什么是会话跟踪，并且也提到了会话跟踪 3 种常见的技术方案。接下来，我们就来对比一下这 3 种会话跟踪的技术方案，来看一下具体的实现思路，以及它们之间的优缺点。"}]},{"ID":"20241015201356-zpkze6y","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201356-zpkze6y","updated":"20241017233018"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2.2.1 方案一 - Cookie"}]},{"ID":"20241015201357-lqjc48c","Type":"NodeParagraph","Properties":{"id":"20241015201357-lqjc48c","updated":"20241015201357"},"Children":[{"Type":"NodeText","Data":"cookie 是客户端会话跟踪技术，它是存储在客户端浏览器的，我们使用 cookie 来跟踪会话，我们就可以在浏览器第一次发起请求来请求服务器的时候，我们在服务器端来设置一个cookie。"}]},{"ID":"20241015201358-jon2ay6","Type":"NodeParagraph","Properties":{"id":"20241015201358-jon2ay6","updated":"20241015201358"},"Children":[{"Type":"NodeText","Data":"比如第一次请求了登录接口，登录接口执行完成之后，我们就可以设置一个cookie，在 cookie 当中我们就可以来存储用户相关的一些数据信息。比如我可以在 cookie 当中来存储当前登录用户的用户名，用户的ID。"}]},{"ID":"20241015201359-6izky4l","Type":"NodeParagraph","Properties":{"id":"20241015201359-6izky4l","updated":"20241015201359"},"Children":[{"Type":"NodeText","Data":"服务器端在给客户端在响应数据的时候，会"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":"的将 cookie 响应给浏览器，浏览器接收到响应回来的 cookie 之后，会"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":"的将 cookie 的值存储在浏览器本地。接下来在后续的每一次请求当中，都会将浏览器本地所存储的 cookie "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":"地携带到服务端。"}]},{"ID":"20241015201360-y97g3hf","Type":"NodeParagraph","Properties":{"id":"20241015201360-y97g3hf","updated":"20241015201360"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112101901417","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112101901417-20241015202541-0r9h2kb.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201361-u2took9","Type":"NodeParagraph","Properties":{"id":"20241015201361-u2took9","updated":"20241015201361"},"Children":[{"Type":"NodeText","Data":"接下来在服务端我们就可以获取到 cookie 的值。我们可以去判断一下这个 cookie 的值是否存在，如果不存在这个cookie，就说明客户端之前是没有访问登录接口的；如果存在 cookie 的值，就说明客户端之前已经登录完成了。这样我们就可以基于 cookie 在同一次会话的不同请求之间来共享数据。"}]},{"ID":"20241015201362-3ziu7oi","Type":"NodeParagraph","Properties":{"id":"20241015201362-3ziu7oi","updated":"20241015201362"},"Children":[{"Type":"NodeText","Data":"我刚才在介绍流程的时候，用了 3 个自动："}]},{"ID":"20241015201363-h1ecljn","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201363-h1ecljn","updated":"20241015201363"},"Children":[{"ID":"20241015201364-pasl4rq","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201364-pasl4rq","updated":"20241015201364"},"Children":[{"ID":"20241015201365-ut2qvd2","Type":"NodeParagraph","Properties":{"id":"20241015201365-ut2qvd2","updated":"20241015201365"},"Children":[{"Type":"NodeText","Data":"服务器会 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":" 的将 cookie 响应给浏览器。"}]}]},{"ID":"20241015201366-47tksc9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201366-47tksc9","updated":"20241015201366"},"Children":[{"ID":"20241015201367-litki1b","Type":"NodeParagraph","Properties":{"id":"20241015201367-litki1b","updated":"20241015201367"},"Children":[{"Type":"NodeText","Data":"浏览器接收到响应回来的数据之后，会 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":" 的将 cookie 存储在浏览器本地。"}]}]},{"ID":"20241015201368-6bowq8g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201368-6bowq8g","updated":"20241015201368"},"Children":[{"ID":"20241015201369-5uzxr5o","Type":"NodeParagraph","Properties":{"id":"20241015201369-5uzxr5o","updated":"20241015201369"},"Children":[{"Type":"NodeText","Data":"在后续的请求当中，浏览器会 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"自动"},{"Type":"NodeText","Data":" 的将 cookie 携带到服务器端。"}]}]}]},{"ID":"20241015201370-lkqpjnx","Type":"NodeParagraph","Properties":{"id":"20241015201370-lkqpjnx","updated":"20241015201370"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"为什么这一切都是自动化进行的？"}]},{"ID":"20241015201371-acjcfb8","Type":"NodeParagraph","Properties":{"id":"20241015201371-acjcfb8","updated":"20241017233018"},"Children":[{"Type":"NodeText","Data":"是因为 cookie 它是 HTTP 协议当中所支持的技术，而各大浏览器厂商都支持了这一标准。在 HTTP 协议官方给我们提供了一个响应头和请求头："}]},{"ID":"20241015201372-b0qvhdf","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201372-b0qvhdf","updated":"20241015201372"},"Children":[{"ID":"20241015201373-ifdfr8r","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201373-ifdfr8r","updated":"20241015201373"},"Children":[{"ID":"20241015201374-hvcly3x","Type":"NodeParagraph","Properties":{"id":"20241015201374-hvcly3x","updated":"20241015201374"},"Children":[{"Type":"NodeText","Data":"响应头 Set-Cookie ：设置Cookie数据的"}]}]},{"ID":"20241015201375-x9ui0qf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201375-x9ui0qf","updated":"20241015201375"},"Children":[{"ID":"20241015201376-95td6ym","Type":"NodeParagraph","Properties":{"id":"20241015201376-95td6ym","updated":"20241015201376"},"Children":[{"Type":"NodeText","Data":"请求头 Cookie：携带Cookie数据的"}]}]}]},{"ID":"20241015201377-bmj8qnb","Type":"NodeParagraph","Properties":{"id":"20241015201377-bmj8qnb","updated":"20241015201377"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112101804878","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112101804878-20241015202541-didzfa3.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201378-n2i3by3","Type":"NodeParagraph","Properties":{"id":"20241015201378-n2i3by3","updated":"20241015201378"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"代码测试"}]},{"ID":"20241015201379-jw7l9k4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015201379-jw7l9k4","updated":"20241015201379"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Slf4j\n@RestController\npublic class SessionController {\n\n    //设置Cookie\n    @GetMapping(\"/c1\")\n    public Result cookie1(HttpServletResponse response){\n        response.addCookie(new Cookie(\"login_username\",\"itheima\")); //设置Cookie/响应Cookie\n        return Result.success();\n    }\n\t\n    //获取Cookie\n    @GetMapping(\"/c2\")\n    public Result cookie2(HttpServletRequest request){\n        Cookie[] cookies = request.getCookies();\n        for (Cookie cookie : cookies) {\n            if(cookie.getName().equals(\"login_username\")){\n                System.out.println(\"login_username: \"+cookie.getValue()); //输出name为login_username的cookie\n            }\n        }\n        return Result.success();\n    }\n}    \n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201380-3umpnbg","Type":"NodeParagraph","Properties":{"id":"20241015201380-3umpnbg","updated":"20241015201380"},"Children":[{"Type":"NodeText","Data":"A. 访问c1接口，设置Cookie，http://localhost:8080/c1"}]},{"ID":"20241015201381-0tbltl0","Type":"NodeParagraph","Properties":{"id":"20241015201381-0tbltl0","updated":"20241015201381"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112105410076","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112105410076-20241015202541-6js5qqt.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201382-2ugfrkt","Type":"NodeParagraph","Properties":{"id":"20241015201382-2ugfrkt","updated":"20241015201382"},"Children":[{"Type":"NodeText","Data":"我们可以看到，设置的cookie，通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"响应头Set-Cookie"},{"Type":"NodeText","Data":"响应给浏览器，并且浏览器会将Cookie，存储在浏览器端。"}]},{"ID":"20241015201383-hrx2797","Type":"NodeParagraph","Properties":{"id":"20241015201383-hrx2797","updated":"20241015201383"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112105538131","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112105538131-20241015202541-8tth36n.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201384-33wk29g","Type":"NodeParagraph","Properties":{"id":"20241015201384-33wk29g","updated":"20241015201384"},"Children":[{"Type":"NodeText","Data":"B. 访问c2接口 http://localhost:8080/c2，此时浏览器会自动的将Cookie携带到服务端，是通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"请求头Cookie"},{"Type":"NodeText","Data":"，携带的。"}]},{"ID":"20241015201385-bvl5jzf","Type":"NodeParagraph","Properties":{"id":"20241015201385-bvl5jzf","updated":"20241015201385"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112105658486","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112105658486-20241015202541-g7otrsg.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201386-1t9zf8s","Type":"NodeParagraph","Properties":{"id":"20241015201386-1t9zf8s","updated":"20241015201386"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点"}]},{"ID":"20241015201387-2fng5wz","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201387-2fng5wz","updated":"20241015201387"},"Children":[{"ID":"20241015201388-aksywdy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201388-aksywdy","updated":"20241015201388"},"Children":[{"ID":"20241015201389-5flwhq0","Type":"NodeParagraph","Properties":{"id":"20241015201389-5flwhq0","updated":"20241015201389"},"Children":[{"Type":"NodeText","Data":"优点：HTTP协议中支持的技术（像Set-Cookie 响应头的解析以及 Cookie 请求头数据的携带，都是浏览器自动进行的，是无需我们手动操作的）"}]}]},{"ID":"20241015201390-8fmpt94","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201390-8fmpt94","updated":"20241015201390"},"Children":[{"ID":"20241015201391-qsr15oy","Type":"NodeParagraph","Properties":{"id":"20241015201391-qsr15oy","updated":"20241015201391"},"Children":[{"Type":"NodeText","Data":"缺点："}]},{"ID":"20241015201392-zl7zjoc","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201392-zl7zjoc","updated":"20241015201392"},"Children":[{"ID":"20241015201393-ptmko1y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201393-ptmko1y","updated":"20241015201393"},"Children":[{"ID":"20241015201394-rd7rle0","Type":"NodeParagraph","Properties":{"id":"20241015201394-rd7rle0","updated":"20241015201394"},"Children":[{"Type":"NodeText","Data":"移动端APP(Android、IOS)中无法使用Cookie"}]}]},{"ID":"20241015201395-a1cdaug","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201395-a1cdaug","updated":"20241015201395"},"Children":[{"ID":"20241015201396-xs9vbls","Type":"NodeParagraph","Properties":{"id":"20241015201396-xs9vbls","updated":"20241015201396"},"Children":[{"Type":"NodeText","Data":"不安全，用户可以自己禁用Cookie"}]}]},{"ID":"20241015201397-npxl9b4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":4,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201397-npxl9b4","updated":"20241015201397"},"Children":[{"ID":"20241015201398-cu2wi4m","Type":"NodeParagraph","Properties":{"id":"20241015201398-cu2wi4m","updated":"20241015201398"},"Children":[{"Type":"NodeText","Data":"Cookie不能跨域"}]}]}]}]}]},{"ID":"20241015201399-58gc2si","Type":"NodeBlockquote","Properties":{"id":"20241015201399-58gc2si","updated":"20241015201399"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201400-6s6lcpi","Type":"NodeParagraph","Properties":{"id":"20241015201400-6s6lcpi","updated":"20241015201400"},"Children":[{"Type":"NodeText","Data":"跨域介绍："}]},{"ID":"20241015201401-lq0qbp1","Type":"NodeParagraph","Properties":{"id":"20241015201401-lq0qbp1","updated":"20241015201401"},"Children":[{"Type":"NodeText","Data":"​\t \u003cimg src=\"assets/image-20230112103840467.png\" alt=\"image-20230112103840467\" style=\"zoom:80%;\" /\u003e"}]},{"ID":"20241015201402-zvvwnwp","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201402-zvvwnwp","updated":"20241015201402"},"Children":[{"ID":"20241015201403-apn7s74","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201403-apn7s74","updated":"20241015201403"},"Children":[{"ID":"20241015201404-ozu65nm","Type":"NodeParagraph","Properties":{"id":"20241015201404-ozu65nm","updated":"20241015201404"},"Children":[{"Type":"NodeText","Data":"现在的项目，大部分都是前后端分离的，前后端最终也会分开部署，前端部署在服务器 192.168.150.200 上，端口 80，后端部署在 192.168.150.100上，端口 8080"}]}]},{"ID":"20241015201405-v60su9q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201405-v60su9q","updated":"20241015201405"},"Children":[{"ID":"20241015201406-qne1ibv","Type":"NodeParagraph","Properties":{"id":"20241015201406-qne1ibv","updated":"20241015201406"},"Children":[{"Type":"NodeText","Data":"我们打开浏览器直接访问前端工程，访问url：http://192.168.150.200/login.html"}]}]},{"ID":"20241015201407-zsnav5i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201407-zsnav5i","updated":"20241015201407"},"Children":[{"ID":"20241015201408-742g5yy","Type":"NodeParagraph","Properties":{"id":"20241015201408-742g5yy","updated":"20241015201408"},"Children":[{"Type":"NodeText","Data":"然后在该页面发起请求到服务端，而服务端所在地址不再是localhost，而是服务器的IP地址192.168.150.100，假设访问接口地址为：http://192.168.150.100:8080/login"}]}]},{"ID":"20241015201409-zyc8k9w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201409-zyc8k9w","updated":"20241015201409"},"Children":[{"ID":"20241015201410-xgrcf0e","Type":"NodeParagraph","Properties":{"id":"20241015201410-xgrcf0e","updated":"20241015201410"},"Children":[{"Type":"NodeText","Data":"那此时就存在跨域操作了，因为我们是在 http://192.168.150.200/login.html 这个页面上访问了http://192.168.150.100:8080/login 接口"}]}]},{"ID":"20241015201411-8jmioum","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201411-8jmioum","updated":"20241015201411"},"Children":[{"ID":"20241015201412-ynxfawg","Type":"NodeParagraph","Properties":{"id":"20241015201412-ynxfawg","updated":"20241015201412"},"Children":[{"Type":"NodeText","Data":"此时如果服务器设置了一个Cookie，这个Cookie是不能使用的，因为Cookie无法跨域"}]}]}]},{"ID":"20241015201413-4dwv3fw","Type":"NodeParagraph","Properties":{"id":"20241015201413-4dwv3fw","updated":"20241015201413"},"Children":[{"Type":"NodeText","Data":"区分跨域的维度："}]},{"ID":"20241015201414-xxy6y9l","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201414-xxy6y9l","updated":"20241015201414"},"Children":[{"ID":"20241015201415-7lrik16","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201415-7lrik16","updated":"20241015201415"},"Children":[{"ID":"20241015201416-hyomq9i","Type":"NodeParagraph","Properties":{"id":"20241015201416-hyomq9i","updated":"20241015201416"},"Children":[{"Type":"NodeText","Data":"协议"}]}]},{"ID":"20241015201417-k1onlke","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201417-k1onlke","updated":"20241015201417"},"Children":[{"ID":"20241015201418-xjzovw1","Type":"NodeParagraph","Properties":{"id":"20241015201418-xjzovw1","updated":"20241015201418"},"Children":[{"Type":"NodeText","Data":"IP/协议"}]}]},{"ID":"20241015201419-z720g6v","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201419-z720g6v","updated":"20241015201419"},"Children":[{"ID":"20241015201420-6k92h9w","Type":"NodeParagraph","Properties":{"id":"20241015201420-6k92h9w","updated":"20241015201420"},"Children":[{"Type":"NodeText","Data":"端口"}]}]}]},{"ID":"20241015201421-jj9wlgi","Type":"NodeParagraph","Properties":{"id":"20241015201421-jj9wlgi","updated":"20241015201421"},"Children":[{"Type":"NodeText","Data":"只要上述的三个维度有任何一个维度不同，那就是跨域操作"}]},{"ID":"20241015201422-j425052","Type":"NodeParagraph","Properties":{"id":"20241015201422-j425052","updated":"20241015201422"},"Children":[{"Type":"NodeText","Data":"举例："}]},{"ID":"20241015201423-1spnz64","Type":"NodeParagraph","Properties":{"id":"20241015201423-1spnz64","updated":"20241015201423"},"Children":[{"Type":"NodeText","Data":"​\thttp://192.168.150.200/login.html ----------\u003e https://192.168.150.200/login   \t\t[协议不同，跨域]"}]},{"ID":"20241015201424-t5bnt51","Type":"NodeParagraph","Properties":{"id":"20241015201424-t5bnt51","updated":"20241015201424"},"Children":[{"Type":"NodeText","Data":"​\thttp://192.168.150.200/login.html ----------\u003e http://192.168.150.100/login     \t\t[IP不同，跨域]"}]},{"ID":"20241015201425-ng3muet","Type":"NodeParagraph","Properties":{"id":"20241015201425-ng3muet","updated":"20241015201425"},"Children":[{"Type":"NodeText","Data":"​\thttp://192.168.150.200/login.html ----------\u003e http://192.168.150.200:8080/login   [端口不同，跨域]"}]},{"ID":"20241015201426-0dulibo","Type":"NodeParagraph","Properties":{"id":"20241015201426-0dulibo","updated":"20241015201426"},"Children":[{"Type":"NodeText","Data":"​    http://192.168.150.200/login.html ----------\u003e http://192.168.150.200/login    \t\t [不跨域]"}]}]},{"ID":"20241015201427-yxowbt8","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201427-yxowbt8","updated":"20241019222641"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2.2.2 方案二 - Session"}]},{"ID":"20241015201428-b7zuqqp","Type":"NodeParagraph","Properties":{"id":"20241015201428-b7zuqqp","updated":"20241015201428"},"Children":[{"Type":"NodeText","Data":"前面介绍的时候，我们提到Session，它是服务器端会话跟踪技术，所以它是存储在服务器端的。而 Session 的底层其实就是基于我们刚才所介绍的 Cookie 来实现的。"}]},{"ID":"20241015201429-nodspfk","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201429-nodspfk","updated":"20241017233423"},"Children":[{"ID":"20241015201430-zw8t4ii","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201430-zw8t4ii","updated":"20241015201430"},"Children":[{"ID":"20241015201431-csa3wu9","Type":"NodeParagraph","Properties":{"id":"20241015201431-csa3wu9","updated":"20241015201431"},"Children":[{"Type":"NodeText","Data":"获取Session"}]},{"ID":"20241015201432-ys61gr2","Type":"NodeParagraph","Properties":{"id":"20241015201432-ys61gr2","updated":"20241015201432"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112105938545","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112105938545-20241015202541-zebeciv.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201433-7zifz8o","Type":"NodeParagraph","Properties":{"id":"20241015201433-7zifz8o","updated":"20241015201433"},"Children":[{"Type":"NodeText","Data":"如果我们现在要基于 Session 来进行会话跟踪，浏览器在第一次请求服务器的时候，我们就可以直接在服务器当中来获取到会话对象Session。如果是第一次请求Session ，会话对象是不存在的，这个时候服务器会自动的创建一个会话对象Session 。而每一个会话对象Session ，它都有一个ID（示意图中Session后面括号中的1，就表示ID），我们称之为 Session 的ID。"}]}]},{"ID":"20241015201434-pv8olge","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201434-pv8olge","updated":"20241017233304"},"Children":[{"ID":"20241015201435-21857bk","Type":"NodeParagraph","Properties":{"id":"20241015201435-21857bk","updated":"20241015201435"},"Children":[{"Type":"NodeText","Data":"响应Cookie (JSESSIONID)"}]},{"ID":"20241015201436-hxszvuu","Type":"NodeParagraph","Properties":{"id":"20241015201436-hxszvuu","updated":"20241015201436"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112110441075","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112110441075-20241015202541-jnlrcnj.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201437-oeh0b90","Type":"NodeParagraph","Properties":{"id":"20241015201437-oeh0b90","updated":"20241017233304"},"Children":[{"Type":"NodeText","Data":"接下来，服务器端在给浏览器响应数据的时候，它会将 "},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"strong text","TextMarkTextContent":"Session 的 ID"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":" 通过 Cookie 响应给浏览器。其实在"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"响应头"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"当中增加了一个"},{"Type":"NodeText","Data":" "},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"Set-Cookie 响应头"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"。这个  Set-Cookie  响应头对应的值是不是cookie？ cookie 的名字是固定的 JSESSIONID 代表的服务器端会话对象 Session 的 ID。浏览器会自动识别这个响应头，然后"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"自动将Cookie存储在浏览器本地"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20241015201438-m19xbak","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201438-m19xbak","updated":"20241017233423"},"Children":[{"ID":"20241015201439-pyet8yg","Type":"NodeParagraph","Properties":{"id":"20241015201439-pyet8yg","updated":"20241015201439"},"Children":[{"Type":"NodeText","Data":"查找Session"}]},{"ID":"20241015201440-hv7s9de","Type":"NodeParagraph","Properties":{"id":"20241015201440-hv7s9de","updated":"20241015201440"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112101943835","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112101943835-20241015202541-e6gbkhy.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201441-aee00kz","Type":"NodeParagraph","Properties":{"id":"20241015201441-aee00kz","updated":"20241017233359"},"Children":[{"Type":"NodeText","Data":"接下来，在后续的"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"每一次请求当中"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"，都会将 Cookie 的数据获取出来，并且携带到服务端。接下来服务器拿到JSESSIONID这个 Cookie 的值，也就是"},{"Type":"NodeText","Data":" "},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"Session 的ID"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"。拿到 ID 之后，就会"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color6);"},"TextMarkType":"text strong","TextMarkTextContent":"从众多的 Session 当中来找到当前请求对应的会话对象Session"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color6);\"}"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015201442-61tcbcj","Type":"NodeParagraph","Properties":{"id":"20241015201442-61tcbcj","updated":"20241017233423"},"Children":[{"Type":"NodeText","Data":"这样我们是不是就可以通过 Session 会话对象"},{"Type":"NodeTextMark","Properties":{"style":"color: var(--b3-font-color8);"},"TextMarkType":"text strong","TextMarkTextContent":"在同一次会话的多次请求之间来共享数据"},{"Type":"NodeKramdownSpanIAL","Data":"{: style=\"color: var(--b3-font-color8);\"}"},{"Type":"NodeText","Data":"了？好，这就是基于 Session 进行会话跟踪的流程。"}]}]}]},{"ID":"20241015201443-zoei9e2","Type":"NodeParagraph","Properties":{"id":"20241015201443-zoei9e2","updated":"20241015201443"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"代码测试"}]},{"ID":"20241015201444-59aqxyl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241015201444-59aqxyl","updated":"20241019222641"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Slf4j\n@RestController\npublic class SessionController {\n\n    @GetMapping(\"/s1\")\n    public Result session1(HttpSession session){\n        log.info(\"HttpSession-s1: {}\", session.hashCode());\n\n        session.setAttribute(\"loginUser\", \"tom\"); // 往session中存储数据【用户信息】\n        return Result.success();\n    }\n\n    @GetMapping(\"/s2\")\n    public Result session2(HttpServletRequest request){\n        HttpSession session = request.getSession();\n        log.info(\"HttpSession-s2: {}\", session.hashCode());\n\n        Object loginUser = session.getAttribute(\"loginUser\"); // 从session中获取数据【用户信息】\n        log.info(\"loginUser: {}\", loginUser);\n        return Result.success(loginUser);\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241015201445-jfu5e73","Type":"NodeParagraph","Properties":{"id":"20241015201445-jfu5e73","updated":"20241015201445"},"Children":[{"Type":"NodeText","Data":"A. 访问 s1 接口，http://localhost:8080/s1"}]},{"ID":"20241015201446-ojb4nuh","Type":"NodeParagraph","Properties":{"id":"20241015201446-ojb4nuh","updated":"20241015201446"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112111004447","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112111004447-20241015202541-wrt5fd8.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201447-5rboby7","Type":"NodeParagraph","Properties":{"id":"20241015201447-5rboby7","updated":"20241015201447"},"Children":[{"Type":"NodeText","Data":"请求完成之后，在响应头中，就会看到有一个Set-Cookie的响应头，里面响应回来了一个Cookie，就是JSESSIONID，这个就是服务端会话对象 Session 的ID。"}]},{"ID":"20241015201448-yc6yz21","Type":"NodeParagraph","Properties":{"id":"20241015201448-yc6yz21","updated":"20241015201448"},"Children":[{"Type":"NodeText","Data":"B. 访问 s2 接口，http://localhost:8080/s2"}]},{"ID":"20241015201449-61o647m","Type":"NodeParagraph","Properties":{"id":"20241015201449-61o647m","updated":"20241015201449"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112111137207","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112111137207-20241015202541-1o2g85i.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201450-t2ys1p3","Type":"NodeParagraph","Properties":{"id":"20241015201450-t2ys1p3","updated":"20241015201450"},"Children":[{"Type":"NodeText","Data":"接下来，在后续的每次请求时，都会将Cookie的值，携带到服务端，那服务端呢，接收到Cookie之后，会自动的根据JSESSIONID的值，找到对应的会话对象Session。"}]},{"ID":"20241015201451-wesx7xg","Type":"NodeParagraph","Properties":{"id":"20241015201451-wesx7xg","updated":"20241015201451"},"Children":[{"Type":"NodeText","Data":"那经过这两步测试，大家也会看到，在控制台中输出如下日志："}]},{"ID":"20241015201452-caxybqt","Type":"NodeParagraph","Properties":{"id":"20241015201452-caxybqt","updated":"20241015201452"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112111328117","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112111328117-20241015202541-ut2ddyv.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201453-wow9e1a","Type":"NodeParagraph","Properties":{"id":"20241015201453-wow9e1a","updated":"20241015201453"},"Children":[{"Type":"NodeText","Data":"两次请求，获取到的Session会话对象的hashcode是一样的，就说明是同一个会话对象。而且，第一次请求时，往Session会话对象中存储的值，第二次请求时，也获取到了。 那这样，我们就可以通过Session会话对象，在同一个会话的多次请求之间来进行数据共享了。"}]},{"ID":"20241015201454-6v0amdn","Type":"NodeParagraph","Properties":{"id":"20241015201454-6v0amdn","updated":"20241015201454"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点"}]},{"ID":"20241015201455-c150d43","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201455-c150d43","updated":"20241015201455"},"Children":[{"ID":"20241015201456-qo5yfwo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201456-qo5yfwo","updated":"20241015201456"},"Children":[{"ID":"20241015201457-eep2yc4","Type":"NodeParagraph","Properties":{"id":"20241015201457-eep2yc4","updated":"20241015201457"},"Children":[{"Type":"NodeText","Data":"优点：Session是存储在服务端的，安全"}]}]},{"ID":"20241015201458-oqo1eo1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201458-oqo1eo1","updated":"20241015201458"},"Children":[{"ID":"20241015201459-36x62i2","Type":"NodeParagraph","Properties":{"id":"20241015201459-36x62i2","updated":"20241015201459"},"Children":[{"Type":"NodeText","Data":"缺点："}]},{"ID":"20241015201460-mo7bjn3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201460-mo7bjn3","updated":"20241015201460"},"Children":[{"ID":"20241015201461-2v7y3si","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201461-2v7y3si","updated":"20241015201461"},"Children":[{"ID":"20241015201462-lgfkk50","Type":"NodeParagraph","Properties":{"id":"20241015201462-lgfkk50","updated":"20241015201462"},"Children":[{"Type":"NodeText","Data":"服务器集群环境下无法直接使用Session"}]}]},{"ID":"20241015201463-d88slme","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201463-d88slme","updated":"20241015201463"},"Children":[{"ID":"20241015201464-cfzgw71","Type":"NodeParagraph","Properties":{"id":"20241015201464-cfzgw71","updated":"20241015201464"},"Children":[{"Type":"NodeText","Data":"移动端APP(Android、IOS)中无法使用Cookie"}]}]},{"ID":"20241015201465-96varkb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201465-96varkb","updated":"20241015201465"},"Children":[{"ID":"20241015201466-bp4n52t","Type":"NodeParagraph","Properties":{"id":"20241015201466-bp4n52t","updated":"20241015201466"},"Children":[{"Type":"NodeText","Data":"用户可以自己禁用Cookie"}]}]},{"ID":"20241015201467-o2sbwh9","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201467-o2sbwh9","updated":"20241015201467"},"Children":[{"ID":"20241015201468-ofw3f7k","Type":"NodeParagraph","Properties":{"id":"20241015201468-ofw3f7k","updated":"20241015201468"},"Children":[{"Type":"NodeText","Data":"Cookie不能跨域"}]}]}]}]}]},{"ID":"20241015201469-6i64o50","Type":"NodeBlockquote","Properties":{"id":"20241015201469-6i64o50","updated":"20241015201469"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201470-0k8ito3","Type":"NodeParagraph","Properties":{"id":"20241015201470-0k8ito3","updated":"20241015201470"},"Children":[{"Type":"NodeText","Data":"PS：Session 底层是基于Cookie实现的会话跟踪，如果Cookie不可用，则该方案，也就失效了。"}]}]},{"ID":"20241015201471-12fhm9o","Type":"NodeBlockquote","Properties":{"id":"20241015201471-12fhm9o","updated":"20241018000643"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201472-jb8l507","Type":"NodeParagraph","Properties":{"id":"20241015201472-jb8l507","updated":"20241015201472"},"Children":[{"Type":"NodeText","Data":"服务器集群环境为何无法使用Session？"}]},{"ID":"20241015201473-50un490","Type":"NodeParagraph","Properties":{"id":"20241015201473-50un490","updated":"20241018000643"},"Children":[{"Type":"NodeText","Data":"    "},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20241018000643-9yjncl2.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]},{"ID":"20241015201474-vn48ccu","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201474-vn48ccu","updated":"20241015201474"},"Children":[{"ID":"20241015201475-zmf3k5f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201475-zmf3k5f","updated":"20241015201475"},"Children":[{"ID":"20241015201476-g14win5","Type":"NodeParagraph","Properties":{"id":"20241015201476-g14win5","updated":"20241015201476"},"Children":[{"Type":"NodeText","Data":"首先第一点，我们现在所开发的项目，一般都不会只部署在一台服务器上，因为一台服务器会存在一个很大的问题，就是单点故障。所谓单点故障，指的就是一旦这台服务器挂了，整个应用都没法访问了。"}]}]}]},{"ID":"20241015201477-zwswmr2","Type":"NodeParagraph","Properties":{"id":"20241015201477-zwswmr2","updated":"20241015201477"},"Children":[{"Type":"NodeText","Data":"​    "},{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112112740131","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112112740131-20241015202541-yz0liyr.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201478-n59nwo7","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201478-n59nwo7","updated":"20241015201478"},"Children":[{"ID":"20241015201479-ulhmctx","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201479-ulhmctx","updated":"20241015201479"},"Children":[{"ID":"20241015201480-2ot85hj","Type":"NodeParagraph","Properties":{"id":"20241015201480-2ot85hj","updated":"20241015201480"},"Children":[{"Type":"NodeText","Data":"所以在现在的企业项目开发当中，最终部署的时候都是以集群的形式来进行部署，也就是同一个项目它会部署多份。比如这个项目我们现在就部署了 3 份。"}]}]},{"ID":"20241015201481-4ilw2dr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201481-4ilw2dr","updated":"20241015201481"},"Children":[{"ID":"20241015201482-18ejf11","Type":"NodeParagraph","Properties":{"id":"20241015201482-18ejf11","updated":"20241015201482"},"Children":[{"Type":"NodeText","Data":"而用户在访问的时候，到底访问这三台其中的哪一台？其实用户在访问的时候，他会访问一台前置的服务器，我们叫负载均衡服务器，我们在后面项目当中会详细讲解。目前大家先有一个印象负载均衡服务器，它的作用就是将前端发起的请求均匀的分发给后面的这三台服务器。"}]},{"ID":"20241015201483-4ub1fch","Type":"NodeParagraph","Properties":{"id":"20241015201483-4ub1fch","updated":"20241015201483"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112113558810","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112113558810-20241015202541-vakfwo8.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]}]},{"ID":"20241015201484-m7u78q4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201484-m7u78q4","updated":"20241015201484"},"Children":[{"ID":"20241015201485-hl0zf5v","Type":"NodeParagraph","Properties":{"id":"20241015201485-hl0zf5v","updated":"20241015201485"},"Children":[{"Type":"NodeText","Data":"此时假如我们通过 session 来进行会话跟踪，可能就会存在这样一个问题。用户打开浏览器要进行登录操作，此时会发起登录请求。登录请求到达负载均衡服务器，将这个请求转给了第一台 Tomcat 服务器。"}]},{"ID":"20241015201486-rt4mja6","Type":"NodeParagraph","Properties":{"id":"20241015201486-rt4mja6","updated":"20241015201486"},"Children":[{"Type":"NodeText","Data":"Tomcat 服务器接收到请求之后，要获取到会话对象session。获取到会话对象 session 之后，要给浏览器响应数据，最终在给浏览器响应数据的时候，就会携带这么一个 cookie 的名字，就是 JSESSIONID ，下一次再请求的时候，是不是又会将 Cookie 携带到服务端？"}]},{"ID":"20241015201487-b38doui","Type":"NodeParagraph","Properties":{"id":"20241015201487-b38doui","updated":"20241015201487"},"Children":[{"Type":"NodeText","Data":"好。此时假如又执行了一次查询操作，要查询部门的数据。这次请求到达负载均衡服务器之后，负载均衡服务器将这次请求转给了第二台 Tomcat 服务器，此时他就要到第二台 Tomcat 服务器当中。根据JSESSIONID 也就是对应的 session 的 ID 值，要找对应的 session 会话对象。"}]},{"ID":"20241015201488-wh6lbd8","Type":"NodeParagraph","Properties":{"id":"20241015201488-wh6lbd8","updated":"20241015201488"},"Children":[{"Type":"NodeText","Data":"我想请问在第二台服务器当中有没有这个ID的会话对象 Session， 是没有的。此时是不是就出现问题了？我同一个浏览器发起了 2 次请求，结果获取到的不是同一个会话对象，这就是Session这种会话跟踪方案它的缺点，在服务器集群环境下无法直接使用Session。"}]}]}]}]},{"ID":"20241015201489-eobux5j","Type":"NodeParagraph","Properties":{"id":"20241015201489-eobux5j","updated":"20241015201489"},"Children":[{"Type":"NodeText","Data":"大家会看到上面这两种传统的会话技术，在现在的企业开发当中是不是会存在很多的问题。 为了解决这些问题，在现在的企业开发当中，基本上都会采用第三种方案，通过令牌技术来进行会话跟踪。接下来我们就来介绍一下令牌技术，来看一下令牌技术又是如何跟踪会话的。"}]},{"ID":"20241015201490-abqa2c5","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201490-abqa2c5","updated":"20241018152419"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.2.2.3 方案三 - 令牌技术"}]},{"ID":"20241015201491-wmssnbq","Type":"NodeParagraph","Properties":{"id":"20241015201491-wmssnbq","updated":"20241015201491"},"Children":[{"Type":"NodeText","Data":"这里我们所提到的令牌，其实它就是一个用户身份的标识，看似很高大上，很神秘，其实本质就是一个字符串。"}]},{"ID":"20241015201492-m6h9uhn","Type":"NodeParagraph","Properties":{"id":"20241015201492-m6h9uhn","updated":"20241015201492"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112102022634","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112102022634-20241015202541-xvdh6gy.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201493-am8b726","Type":"NodeParagraph","Properties":{"id":"20241015201493-am8b726","updated":"20241015201493"},"Children":[{"Type":"NodeText","Data":"如果通过令牌技术来跟踪会话，我们就可以在浏览器发起请求。在请求登录接口的时候，如果登录成功，我就可以生成一个令牌，令牌就是用户的合法身份凭证。接下来我在响应数据的时候，我就可以直接将令牌响应给前端。"}]},{"ID":"20241015201494-527wmie","Type":"NodeParagraph","Properties":{"id":"20241015201494-527wmie","updated":"20241015201494"},"Children":[{"Type":"NodeText","Data":"接下来我们在前端程序当中接收到令牌之后，就需要将这个令牌存储起来。这个存储可以存储在 cookie 当中，也可以存储在其他的存储空间(比如：localStorage)当中。"}]},{"ID":"20241015201495-ia1m41c","Type":"NodeParagraph","Properties":{"id":"20241015201495-ia1m41c","updated":"20241015201495"},"Children":[{"Type":"NodeText","Data":"接下来，在后续的每一次请求当中，都需要将令牌携带到服务端。携带到服务端之后，接下来我们就需要来校验令牌的有效性。如果令牌是有效的，就说明用户已经执行了登录操作，如果令牌是无效的，就说明用户之前并未执行登录操作。"}]},{"ID":"20241015201496-wsf2l0a","Type":"NodeParagraph","Properties":{"id":"20241015201496-wsf2l0a","updated":"20241018152419"},"Children":[{"Type":"NodeText","Data":"此时，如果是在同一次会话的多次请求之间，我们想共享数据，我们就可以"},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkTextContent":"将共享的数据存储在令牌当中"},{"Type":"NodeText","Data":"就可以了。"}]},{"ID":"20241015201497-68a7j3b","Type":"NodeParagraph","Properties":{"id":"20241015201497-68a7j3b","updated":"20241015201497"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优缺点"}]},{"ID":"20241015201498-gvb6fmw","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201498-gvb6fmw","updated":"20241015201498"},"Children":[{"ID":"20241015201499-a9ne6hn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201499-a9ne6hn","updated":"20241015201499"},"Children":[{"ID":"20241015201500-oh0jqf6","Type":"NodeParagraph","Properties":{"id":"20241015201500-oh0jqf6","updated":"20241015201500"},"Children":[{"Type":"NodeText","Data":"优点："}]},{"ID":"20241015201501-pdkkbjr","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201501-pdkkbjr","updated":"20241015201501"},"Children":[{"ID":"20241015201502-ugizitj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201502-ugizitj","updated":"20241015201502"},"Children":[{"ID":"20241015201503-r7gvli8","Type":"NodeParagraph","Properties":{"id":"20241015201503-r7gvli8","updated":"20241015201503"},"Children":[{"Type":"NodeText","Data":"支持PC端、移动端"}]}]},{"ID":"20241015201504-30mkwn0","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201504-30mkwn0","updated":"20241015201504"},"Children":[{"ID":"20241015201505-14p9dr6","Type":"NodeParagraph","Properties":{"id":"20241015201505-14p9dr6","updated":"20241015201505"},"Children":[{"Type":"NodeText","Data":"解决集群环境下的认证问题"}]}]},{"ID":"20241015201506-xszoyuj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201506-xszoyuj","updated":"20241015201506"},"Children":[{"ID":"20241015201507-47432g9","Type":"NodeParagraph","Properties":{"id":"20241015201507-47432g9","updated":"20241015201507"},"Children":[{"Type":"NodeText","Data":"减轻服务器的存储压力（无需在服务器端存储）"}]}]}]}]},{"ID":"20241015201508-m4yawfa","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201508-m4yawfa","updated":"20241015201508"},"Children":[{"ID":"20241015201509-8gee2f1","Type":"NodeParagraph","Properties":{"id":"20241015201509-8gee2f1","updated":"20241015201509"},"Children":[{"Type":"NodeText","Data":"缺点：需要自己实现（包括令牌的生成、令牌的传递、令牌的校验）"}]}]}]},{"ID":"20241015201510-gw4dx8z","Type":"NodeParagraph","Properties":{"id":"20241015201510-gw4dx8z","updated":"20241015201510"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"针对于这三种方案，现在企业开发当中使用的最多的就是第三种令牌技术进行会话跟踪。而前面的这两种传统的方案，现在企业项目开发当中已经很少使用了。所以在我们的课程当中，我们也将会采用令牌技术来解决案例项目当中的会话跟踪问题。"}]},{"ID":"20241015201511-k57wcdu","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201511-k57wcdu","updated":"20241015201511"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3 JWT令牌"}]},{"ID":"20241015201512-ytf73zk","Type":"NodeParagraph","Properties":{"id":"20241015201512-ytf73zk","updated":"20241015201512"},"Children":[{"Type":"NodeText","Data":"前面我们介绍了基于令牌技术来实现会话追踪。这里所提到的令牌就是用户身份的标识，其本质就是一个字符串。令牌的形式有很多，我们使用的是功能强大的 JWT令牌。"}]},{"ID":"20241015201513-ffcp7gy","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201513-ffcp7gy","updated":"20241015201513"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3.1 介绍"}]},{"ID":"20241015201514-towmi7t","Type":"NodeParagraph","Properties":{"id":"20241015201514-towmi7t","updated":"20241015201514"},"Children":[{"Type":"NodeText","Data":"JWT全称：JSON Web Token  （官网：https://jwt.io/）"}]},{"ID":"20241015201515-l1ldx00","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201515-l1ldx00","updated":"20241015201515"},"Children":[{"ID":"20241015201516-iv72cho","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201516-iv72cho","updated":"20241015201516"},"Children":[{"ID":"20241015201517-1pkc57p","Type":"NodeParagraph","Properties":{"id":"20241015201517-1pkc57p","updated":"20241015201517"},"Children":[{"Type":"NodeText","Data":"定义了一种简洁的、自包含的格式，用于在通信双方以json数据格式安全的传输信息。由于数字签名的存在，这些信息是可靠的。"}]},{"ID":"20241015201518-auj7sxg","Type":"NodeBlockquote","Properties":{"id":"20241015201518-auj7sxg","updated":"20241015201518"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201519-zwf6df8","Type":"NodeParagraph","Properties":{"id":"20241015201519-zwf6df8","updated":"20241015201519"},"Children":[{"Type":"NodeText","Data":"简洁：是指jwt就是一个简单的字符串。可以在请求参数或者是请求头当中直接传递。"}]},{"ID":"20241015201520-dobvg9c","Type":"NodeParagraph","Properties":{"id":"20241015201520-dobvg9c","updated":"20241015201520"},"Children":[{"Type":"NodeText","Data":"自包含：指的是jwt令牌，看似是一个随机的字符串，但是我们是可以根据自身的需求在jwt令牌中存储自定义的数据内容。如：可以直接在jwt令牌中存储用户的相关信息。"}]},{"ID":"20241015201521-fn6p09s","Type":"NodeParagraph","Properties":{"id":"20241015201521-fn6p09s","updated":"20241015201521"},"Children":[{"Type":"NodeText","Data":"简单来讲，jwt就是将原始的json数据格式进行了安全的封装，这样就可以直接基于jwt在通信双方安全的进行信息传输了。"}]}]}]}]},{"ID":"20241015201522-j6o3pj4","Type":"NodeParagraph","Properties":{"id":"20241015201522-j6o3pj4","updated":"20241015201522"},"Children":[{"Type":"NodeText","Data":"JWT的组成： （JWT令牌由三个部分组成，三个部分之间使用英文的点来分割）"}]},{"ID":"20241015201523-lwg78k8","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201523-lwg78k8","updated":"20241015201523"},"Children":[{"ID":"20241015201524-obie6h3","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201524-obie6h3","updated":"20241015201524"},"Children":[{"ID":"20241015201525-qglnaqu","Type":"NodeParagraph","Properties":{"id":"20241015201525-qglnaqu","updated":"20241015201525"},"Children":[{"Type":"NodeText","Data":"第一部分：Header(头）， 记录令牌类型、签名算法等。 例如：{\"alg\":\"HS256\",\"type\":\"JWT\"}"}]}]},{"ID":"20241015201526-fn7iuh3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201526-fn7iuh3","updated":"20241015201526"},"Children":[{"ID":"20241015201527-9g65fdc","Type":"NodeParagraph","Properties":{"id":"20241015201527-9g65fdc","updated":"20241015201527"},"Children":[{"Type":"NodeText","Data":"第二部分：Payload(有效载荷），携带一些自定义信息、默认信息等。 例如：{\"id\":\"1\",\"username\":\"Tom\"}"}]}]},{"ID":"20241015201528-juikn2a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201528-juikn2a","updated":"20241015201528"},"Children":[{"ID":"20241015201529-uu8dch0","Type":"NodeParagraph","Properties":{"id":"20241015201529-uu8dch0","updated":"20241015201529"},"Children":[{"Type":"NodeText","Data":"第三部分：Signature(签名），防止Token被篡改、确保安全性。将header、payload，并加入指定秘钥，通过指定签名算法计算而来。"}]},{"ID":"20241015201530-0a8wwn5","Type":"NodeBlockquote","Properties":{"id":"20241015201530-0a8wwn5","updated":"20241015201530"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e","Properties":{"id":""}},{"ID":"20241015201531-nnkym7t","Type":"NodeParagraph","Properties":{"id":"20241015201531-nnkym7t","updated":"20241015201531"},"Children":[{"Type":"NodeText","Data":"签名的目的就是为了防jwt令牌被篡改，而正是因为jwt令牌最后一个部分数字签名的存在，所以整个jwt 令牌是非常安全可靠的。一旦jwt令牌当中任何一个部分、任何一个字符被篡改了，整个令牌在校验的时候都会失败，所以它是非常安全可靠的。"}]}]}]}]},{"ID":"20241015201532-vispgxv","Type":"NodeParagraph","Properties":{"id":"20241015201532-vispgxv","updated":"20241015201532"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106085442076","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106085442076-20241015202541-qwe8ewn.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201533-7xkw9db","Type":"NodeBlockquote","Properties":{"id":"20241015201533-7xkw9db","updated":"20241015201533"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201534-k4ia15v","Type":"NodeParagraph","Properties":{"id":"20241015201534-k4ia15v","updated":"20241015201534"},"Children":[{"Type":"NodeText","Data":"JWT是如何将原始的JSON格式数据，转变为字符串的呢？"}]},{"ID":"20241015201535-th5acw2","Type":"NodeParagraph","Properties":{"id":"20241015201535-th5acw2","updated":"20241015201535"},"Children":[{"Type":"NodeText","Data":"其实在生成JWT令牌时，会对JSON格式的数据进行一次编码：进行base64编码"}]},{"ID":"20241015201536-1l4kvm3","Type":"NodeParagraph","Properties":{"id":"20241015201536-1l4kvm3","updated":"20241015201536"},"Children":[{"Type":"NodeText","Data":"Base64：是一种基于64个可打印的字符来表示二进制数据的编码方式。既然能编码，那也就意味着也能解码。所使用的64个字符分别是A到Z、a到z、 0- 9，一个加号，一个斜杠，加起来就是64个字符。任何数据经过base64编码之后，最终就会通过这64个字符来表示。当然还有一个符号，那就是等号。等号它是一个补位的符号"}]},{"ID":"20241015201537-ktj2990","Type":"NodeParagraph","Properties":{"id":"20241015201537-ktj2990","updated":"20241015201537"},"Children":[{"Type":"NodeText","Data":"需要注意的是Base64是编码方式，而不是加密方式。"}]}]},{"ID":"20241015201538-8xl2cz3","Type":"NodeParagraph","Properties":{"id":"20241015201538-8xl2cz3","updated":"20241015201538"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112114319773","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112114319773-20241015202541-2bg7jhd.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201539-c61zaik","Type":"NodeParagraph","Properties":{"id":"20241015201539-c61zaik","updated":"20241015201539"},"Children":[{"Type":"NodeText","Data":"JWT令牌最典型的应用场景就是登录认证："}]},{"ID":"20241015201540-scobcfs","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201540-scobcfs","updated":"20241015201540"},"Children":[{"ID":"20241015201541-lwa2wbb","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201541-lwa2wbb","updated":"20241015201541"},"Children":[{"ID":"20241015201542-3xzqfy2","Type":"NodeParagraph","Properties":{"id":"20241015201542-3xzqfy2","updated":"20241015201542"},"Children":[{"Type":"NodeText","Data":"在浏览器发起请求来执行登录操作，此时会访问登录的接口，如果登录成功之后，我们需要生成一个jwt令牌，将生成的 jwt令牌返回给前端。"}]}]},{"ID":"20241015201543-zosnq85","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201543-zosnq85","updated":"20241015201543"},"Children":[{"ID":"20241015201544-wxecnmn","Type":"NodeParagraph","Properties":{"id":"20241015201544-wxecnmn","updated":"20241015201544"},"Children":[{"Type":"NodeText","Data":"前端拿到jwt令牌之后，会将jwt令牌存储起来。在后续的每一次请求中都会将jwt令牌携带到服务端。"}]}]},{"ID":"20241015201545-b042q3w","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201545-b042q3w","updated":"20241015201545"},"Children":[{"ID":"20241015201546-rjxrbtn","Type":"NodeParagraph","Properties":{"id":"20241015201546-rjxrbtn","updated":"20241015201546"},"Children":[{"Type":"NodeText","Data":"服务端统一拦截请求之后，先来判断一下这次请求有没有把令牌带过来，如果没有带过来，直接拒绝访问，如果带过来了，还要校验一下令牌是否是有效。如果有效，就直接放行进行请求的处理。"}]}]}]},{"ID":"20241015201547-zm7o6nw","Type":"NodeParagraph","Properties":{"id":"20241015201547-zm7o6nw","updated":"20241015201547"},"Children":[{"Type":"NodeText","Data":"在JWT登录认证的场景中我们发现，整个流程当中涉及到两步操作："}]},{"ID":"20241015201548-5l8wa77","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201548-5l8wa77","updated":"20241015201548"},"Children":[{"ID":"20241015201549-16voncx","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201549-16voncx","updated":"20241015201549"},"Children":[{"ID":"20241015201550-jnj8xgf","Type":"NodeParagraph","Properties":{"id":"20241015201550-jnj8xgf","updated":"20241015201550"},"Children":[{"Type":"NodeText","Data":"在登录成功之后，要生成令牌。"}]}]},{"ID":"20241015201551-4fh5beh","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201551-4fh5beh","updated":"20241015201551"},"Children":[{"ID":"20241015201552-hfuf8ie","Type":"NodeParagraph","Properties":{"id":"20241015201552-hfuf8ie","updated":"20241015201552"},"Children":[{"Type":"NodeText","Data":"每一次请求当中，要接收令牌并对令牌进行校验。"}]}]}]},{"ID":"20241015201553-o28eh1m","Type":"NodeParagraph","Properties":{"id":"20241015201553-o28eh1m","updated":"20241015201553"},"Children":[{"Type":"NodeText","Data":"稍后我们再来学习如何来生成jwt令牌，以及如何来校验jwt令牌。"}]},{"ID":"20241015201554-43n0cv5","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201554-43n0cv5","updated":"20241018152511"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3.2 生成和校验"}]},{"ID":"20241015201555-5ot0mtd","Type":"NodeParagraph","Properties":{"id":"20241015201555-5ot0mtd","updated":"20241015201555"},"Children":[{"Type":"NodeText","Data":"简单介绍了JWT令牌以及JWT令牌的组成之后，接下来我们就来学习基于Java代码如何生成和校验JWT令牌。"}]},{"ID":"20241015201556-xzy8bx0","Type":"NodeParagraph","Properties":{"id":"20241015201556-xzy8bx0","updated":"20241015201556"},"Children":[{"Type":"NodeText","Data":"首先我们先来实现JWT令牌的生成。要想使用JWT令牌，需要先引入JWT的依赖："}]},{"ID":"20241015201557-933llpp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201557-933llpp","updated":"20241015201557"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003c!-- JWT依赖--\u003e\n\u003cdependency\u003e\n    \u003cgroupId\u003eio.jsonwebtoken\u003c/groupId\u003e\n    \u003cartifactId\u003ejjwt\u003c/artifactId\u003e\n    \u003cversion\u003e0.9.1\u003c/version\u003e\n\u003c/dependency\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201558-kj75roa","Type":"NodeBlockquote","Properties":{"id":"20241015201558-kj75roa","updated":"20241015201558"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201559-rzmmt5j","Type":"NodeParagraph","Properties":{"id":"20241015201559-rzmmt5j","updated":"20241015201559"},"Children":[{"Type":"NodeText","Data":"在引入完JWT来赖后，就可以调用工具包中提供的API来完成JWT令牌的生成和校验"}]},{"ID":"20241015201560-0ggo7al","Type":"NodeParagraph","Properties":{"id":"20241015201560-0ggo7al","updated":"20241015201560"},"Children":[{"Type":"NodeText","Data":"工具类：Jwts"}]}]},{"ID":"20241015201561-d4rlqox","Type":"NodeParagraph","Properties":{"id":"20241015201561-d4rlqox","updated":"20241015201561"},"Children":[{"Type":"NodeText","Data":"生成JWT代码实现："}]},{"ID":"20241015201562-r662uqg","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201562-r662uqg","updated":"20241015201562"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Test\npublic void genJwt(){\n    Map\u003cString,Object\u003e claims = new HashMap\u003c\u003e();\n    claims.put(\"id\",1);\n    claims.put(\"username\",\"Tom\");\n    \n    String jwt = Jwts.builder()\n        .setClaims(claims) //自定义内容(载荷)          \n        .signWith(SignatureAlgorithm.HS256, \"itheima\") //签名算法        \n        .setExpiration(new Date(System.currentTimeMillis() + 24*3600*1000)) //有效期   \n        .compact();\n    \n    System.out.println(jwt);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201563-zeq82m6","Type":"NodeParagraph","Properties":{"id":"20241015201563-zeq82m6","updated":"20241015201563"},"Children":[{"Type":"NodeText","Data":"运行测试方法："}]},{"ID":"20241015201564-93xk3kq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201564-93xk3kq","updated":"20241015201564"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjcyNzI5NzMwfQ.fHi0Ub8npbyt71UqLXDdLyipptLgxBUg_mSuGJtXtBk\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201565-uhuc7hu","Type":"NodeParagraph","Properties":{"id":"20241015201565-uhuc7hu","updated":"20241015201565"},"Children":[{"Type":"NodeText","Data":"输出的结果就是生成的JWT令牌,，通过英文的点分割对三个部分进行分割，我们可以将生成的令牌复制一下，然后打开JWT的官网，将生成的令牌直接放在Encoded位置，此时就会自动的将令牌解析出来。"}]},{"ID":"20241015201566-wso5367","Type":"NodeParagraph","Properties":{"id":"20241015201566-wso5367","updated":"20241015201566"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106190950305","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106190950305-20241015202541-hwo2638.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201567-2tdsccj","Type":"NodeBlockquote","Properties":{"id":"20241015201567-2tdsccj","updated":"20241015201567"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201568-lhgw98z","Type":"NodeParagraph","Properties":{"id":"20241015201568-lhgw98z","updated":"20241015201568"},"Children":[{"Type":"NodeText","Data":"第一部分解析出来，看到JSON格式的原始数据，所使用的签名算法为HS256。"}]},{"ID":"20241015201569-lkd3nh6","Type":"NodeParagraph","Properties":{"id":"20241015201569-lkd3nh6","updated":"20241015201569"},"Children":[{"Type":"NodeText","Data":"第二个部分是我们自定义的数据，之前我们自定义的数据就是id，还有一个exp代表的是我们所设置的过期时间。"}]},{"ID":"20241015201570-5f6g9k6","Type":"NodeParagraph","Properties":{"id":"20241015201570-5f6g9k6","updated":"20241015201570"},"Children":[{"Type":"NodeText","Data":"由于前两个部分是base64编码，所以是可以直接解码出来。但最后一个部分并不是base64编码，是经过签名算法计算出来的，所以最后一个部分是不会解析的。"}]}]},{"ID":"20241015201571-vv65a4n","Type":"NodeParagraph","Properties":{"id":"20241015201571-vv65a4n","updated":"20241015201571"},"Children":[{"Type":"NodeText","Data":"实现了JWT令牌的生成，下面我们接着使用Java代码来校验JWT令牌(解析生成的令牌)："}]},{"ID":"20241015201572-d2qrvba","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201572-d2qrvba","updated":"20241015201572"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Test\npublic void parseJwt(){\n    Claims claims = Jwts.parser()\n        .setSigningKey(\"itheima\")//指定签名密钥（必须保证和生成令牌时使用相同的签名密钥）  \n\t    .parseClaimsJws(\"eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjcyNzI5NzMwfQ.fHi0Ub8npbyt71UqLXDdLyipptLgxBUg_mSuGJtXtBk\")\n        .getBody();\n\n    System.out.println(claims);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201573-uh8by6o","Type":"NodeParagraph","Properties":{"id":"20241015201573-uh8by6o","updated":"20241015201573"},"Children":[{"Type":"NodeText","Data":"运行测试方法："}]},{"ID":"20241015201574-81jv0yp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201574-81jv0yp","updated":"20241015201574"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{id=1, exp=1672729730}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201575-xx5nary","Type":"NodeBlockquote","Properties":{"id":"20241015201575-xx5nary","updated":"20241015201575"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201576-mtmyzpi","Type":"NodeParagraph","Properties":{"id":"20241015201576-mtmyzpi","updated":"20241015201576"},"Children":[{"Type":"NodeText","Data":"令牌解析后，我们可以看到id和过期时间，如果在解析的过程当中没有报错，就说明解析成功了。"}]}]},{"ID":"20241015201577-oxdk82g","Type":"NodeParagraph","Properties":{"id":"20241015201577-oxdk82g","updated":"20241015201577"},"Children":[{"Type":"NodeText","Data":"下面我们做一个测试：把令牌header中的数字9变为8，运行测试方法后发现报错："}]},{"ID":"20241015201578-b4vh6bg","Type":"NodeBlockquote","Properties":{"id":"20241015201578-b4vh6bg","updated":"20241015201578"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201579-frpzpw5","Type":"NodeParagraph","Properties":{"id":"20241015201579-frpzpw5","updated":"20241015201579"},"Children":[{"Type":"NodeText","Data":"原header： eyJhbGciOiJIUzI1NiJ9"}]},{"ID":"20241015201580-zy8v863","Type":"NodeParagraph","Properties":{"id":"20241015201580-zy8v863","updated":"20241015201580"},"Children":[{"Type":"NodeText","Data":"修改为： eyJhbGciOiJIUzI1NiJ8"}]}]},{"ID":"20241015201581-0zbzzm3","Type":"NodeParagraph","Properties":{"id":"20241015201581-0zbzzm3","updated":"20241015201581"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106205045658","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106205045658-20241015202541-ni2obzx.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201582-6g2u9uo","Type":"NodeParagraph","Properties":{"id":"20241015201582-6g2u9uo","updated":"20241015201582"},"Children":[{"Type":"NodeText","Data":"结论：篡改令牌中的任何一个字符，在对令牌进行解析时都会报错，所以JWT令牌是非常安全可靠的。"}]},{"ID":"20241015201583-2552oi2","Type":"NodeParagraph","Properties":{"id":"20241015201583-2552oi2","updated":"20241015201583"},"Children":[{"Type":"NodeText","Data":"我们继续测试：修改生成令牌的时指定的过期时间，修改为1分钟"}]},{"ID":"20241015201584-cxtw7px","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241015201584-cxtw7px","updated":"20241018152511"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@Test\npublic void genJwt(){\n    Map\u003cString,Object\u003e claims = new HashMap\u003c\u003e();\n    claims.put(“id”,1);\n    claims.put(“username”,“Tom”);\n    String jwt = Jwts.builder()\n        .setClaims(claims) //自定义内容【令牌中存放了用户id和用户名】       \n        .signWith(SignatureAlgorithm.HS256, “itheima”) //签名算法      \n        .setExpiration(new Date(System.currentTimeMillis() + 60*1000)) //有效期60秒   \n        .compact();\n  \n    System.out.println(jwt);\n    //输出结果：eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjczMDA5NzU0fQ.RcVIR65AkGiax-ID6FjW60eLFH3tPTKdoK7UtE4A1ro\n}\n\n@Test\npublic void parseJwt(){\n    Claims claims = Jwts.parser()\n        .setSigningKey(\"itheima\")//指定签名密钥\n.parseClaimsJws(\"eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjczMDA5NzU0fQ.RcVIR65AkGiax-ID6FjW60eLFH3tPTKdoK7UtE4A1ro\")\n        .getBody();\n\n    System.out.println(claims);\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241015201585-8wjkd9n","Type":"NodeParagraph","Properties":{"id":"20241015201585-8wjkd9n","updated":"20241015201585"},"Children":[{"Type":"NodeText","Data":"等待1分钟之后运行测试方法发现也报错了，说明：JWT令牌过期后，令牌就失效了，解析的为非法令牌。"}]},{"ID":"20241015201586-dq3b02j","Type":"NodeParagraph","Properties":{"id":"20241015201586-dq3b02j","updated":"20241015201586"},"Children":[{"Type":"NodeText","Data":"通过以上测试，我们在使用JWT令牌时需要注意："}]},{"ID":"20241015201587-vv4imna","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201587-vv4imna","updated":"20241015201587"},"Children":[{"ID":"20241015201588-chxekwk","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201588-chxekwk","updated":"20241015201588"},"Children":[{"ID":"20241015201589-7ds76dc","Type":"NodeParagraph","Properties":{"id":"20241015201589-7ds76dc","updated":"20241015201589"},"Children":[{"Type":"NodeText","Data":"JWT校验时使用的签名秘钥，必须和生成JWT令牌时使用的秘钥是配套的。"}]}]},{"ID":"20241015201590-q1tt9nn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201590-q1tt9nn","updated":"20241015201590"},"Children":[{"ID":"20241015201591-96wtfp9","Type":"NodeParagraph","Properties":{"id":"20241015201591-96wtfp9","updated":"20241015201591"},"Children":[{"Type":"NodeText","Data":"如果JWT令牌解析校验时报错，则说明 JWT令牌被篡改 或 失效了，令牌非法。"}]}]}]},{"ID":"20241015201592-kibceo4","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201592-kibceo4","updated":"20241018152551"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.3.3 登录下发令牌"}]},{"ID":"20241015201593-9hc0mpj","Type":"NodeParagraph","Properties":{"id":"20241015201593-9hc0mpj","updated":"20241015201593"},"Children":[{"Type":"NodeText","Data":"JWT令牌的生成和校验的基本操作我们已经学习完了，接下来我们就需要在案例当中通过JWT令牌技术来跟踪会话。具体的思路我们前面已经分析过了，主要就是两步操作："}]},{"ID":"20241015201594-0xmmm67","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201594-0xmmm67","updated":"20241015201594"},"Children":[{"ID":"20241015201595-l00tbvm","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201595-l00tbvm","updated":"20241015201595"},"Children":[{"ID":"20241015201596-tnvrsbb","Type":"NodeParagraph","Properties":{"id":"20241015201596-tnvrsbb","updated":"20241015201596"},"Children":[{"Type":"NodeText","Data":"生成令牌"}]},{"ID":"20241015201597-f2v3hzl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201597-f2v3hzl","updated":"20241015201597"},"Children":[{"ID":"20241015201598-plp6da3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201598-plp6da3","updated":"20241015201598"},"Children":[{"ID":"20241015201599-ldquhgr","Type":"NodeParagraph","Properties":{"id":"20241015201599-ldquhgr","updated":"20241015201599"},"Children":[{"Type":"NodeText","Data":"在登录成功之后来生成一个JWT令牌，并且把这个令牌直接返回给前端"}]}]}]}]},{"ID":"20241015201600-wjp8f8c","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201600-wjp8f8c","updated":"20241015201600"},"Children":[{"ID":"20241015201601-tyvge27","Type":"NodeParagraph","Properties":{"id":"20241015201601-tyvge27","updated":"20241015201601"},"Children":[{"Type":"NodeText","Data":"校验令牌"}]},{"ID":"20241015201602-aief8vr","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201602-aief8vr","updated":"20241015201602"},"Children":[{"ID":"20241015201603-nv0rxbl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201603-nv0rxbl","updated":"20241015201603"},"Children":[{"ID":"20241015201604-5j59nie","Type":"NodeParagraph","Properties":{"id":"20241015201604-5j59nie","updated":"20241015201604"},"Children":[{"Type":"NodeText","Data":"拦截前端请求，从请求中获取到令牌，对令牌进行解析校验"}]}]}]}]}]},{"ID":"20241015201605-5q6tqb9","Type":"NodeParagraph","Properties":{"id":"20241015201605-5q6tqb9","updated":"20241015201605"},"Children":[{"Type":"NodeText","Data":"那我们首先来完成：登录成功之后生成JWT令牌，并且把令牌返回给前端。"}]},{"ID":"20241015201606-7phebvd","Type":"NodeParagraph","Properties":{"id":"20241015201606-7phebvd","updated":"20241015201606"},"Children":[{"Type":"NodeText","Data":"JWT令牌怎么返回给前端呢？此时我们就需要再来看一下接口文档当中关于登录接口的描述（主要看响应数据）："}]},{"ID":"20241015201607-nj3vsut","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201607-nj3vsut","updated":"20241015201607"},"Children":[{"ID":"20241015201608-yfk3l72","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201608-yfk3l72","updated":"20241015201608"},"Children":[{"ID":"20241015201609-ko254vt","Type":"NodeParagraph","Properties":{"id":"20241015201609-ko254vt","updated":"20241015201609"},"Children":[{"Type":"NodeText","Data":"响应数据"}]},{"ID":"20241015201610-islgpy5","Type":"NodeParagraph","Properties":{"id":"20241015201610-islgpy5","updated":"20241015201610"},"Children":[{"Type":"NodeText","Data":"参数格式：application/json"}]},{"ID":"20241015201611-ln2fprh","Type":"NodeParagraph","Properties":{"id":"20241015201611-ln2fprh","updated":"20241015201611"},"Children":[{"Type":"NodeText","Data":"参数说明："}]},{"ID":"20241015201612-5ao8yci","Type":"NodeTable","Data":"| 名称 | 类型   | 是否必须 | 默认值 | 备注                     | 其他信息 |\n| ---- | ------ | -------- | ------ | ------------------------ | -------- |\n| code | number | 必须     |        | 响应码, 1 成功 ; 0  失败 |          |\n| msg  | string | 非必须   |        | 提示信息                 |          |\n| data | string | 必须     |        | 返回的数据 , jwt令牌     |          |","TableAligns":[0,0,0,0,0,0],"Properties":{"id":"20241015201612-5ao8yci","updated":"20241015201612"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认值"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"备注"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"其他信息"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"code"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"number"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"响应码, 1 成功 ; 0  失败"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"msg"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"非必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"提示信息"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"data"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"返回的数据 , jwt令牌"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]}]},{"ID":"20241015201613-5ajiuev","Type":"NodeParagraph","Properties":{"id":"20241015201613-5ajiuev","updated":"20241015201613"},"Children":[{"Type":"NodeText","Data":"响应数据样例："}]},{"ID":"20241015201614-98brs0i","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201614-98brs0i","updated":"20241015201614"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n  \"code\": 1,\n  \"msg\": \"success\",\n  \"data\": \"eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoi6YeR5bq4IiwiaWQiOjEsInVzZXJuYW1lIjoiamlueW9uZyIsImV4cCI6MTY2MjIwNzA0OH0.KkUc_CXJZJ8Dd063eImx4H9Ojfrr6XMJ-yVzaWCVZCo\"\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201615-a4z6fq3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201615-a4z6fq3","updated":"20241015201615"},"Children":[{"ID":"20241015201616-3gvrz9x","Type":"NodeParagraph","Properties":{"id":"20241015201616-3gvrz9x","updated":"20241015201616"},"Children":[{"Type":"NodeText","Data":"备注说明"}]},{"ID":"20241015201617-9qhuhoa","Type":"NodeParagraph","Properties":{"id":"20241015201617-9qhuhoa","updated":"20241015201617"},"Children":[{"Type":"NodeText","Data":"用户登录成功后，系统会自动下发JWT令牌，然后在后续的每次请求中，都需要在请求头header中携带到服务端，请求头的名称为 token ，值为 登录时下发的JWT令牌。"}]},{"ID":"20241015201618-pv1woyt","Type":"NodeParagraph","Properties":{"id":"20241015201618-pv1woyt","updated":"20241015201618"},"Children":[{"Type":"NodeText","Data":"如果检测到用户未登录，则会返回如下固定错误信息："}]},{"ID":"20241015201619-xuvyak6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201619-xuvyak6","updated":"20241015201619"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n\t\"code\": 0,\n\t\"msg\": \"NOT_LOGIN\",\n\t\"data\": null\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}]},{"ID":"20241015201620-a2rihdy","Type":"NodeParagraph","Properties":{"id":"20241015201620-a2rihdy","updated":"20241015201620"},"Children":[{"Type":"NodeText","Data":"解读完接口文档中的描述了，目前我们先来完成令牌的生成和令牌的下发，我们只需要生成一个令牌返回给前端就可以了。"}]},{"ID":"20241015201621-uhupuew","Type":"NodeParagraph","Properties":{"id":"20241015201621-uhupuew","updated":"20241015201621"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"实现步骤："}]},{"ID":"20241015201622-d685w9d","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201622-d685w9d","updated":"20241015201622"},"Children":[{"ID":"20241015201623-m7v8g0g","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201623-m7v8g0g","updated":"20241015201623"},"Children":[{"ID":"20241015201624-xoyj47q","Type":"NodeParagraph","Properties":{"id":"20241015201624-xoyj47q","updated":"20241015201624"},"Children":[{"Type":"NodeText","Data":"引入JWT工具类"}]},{"ID":"20241015201625-4ym1ukv","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201625-4ym1ukv","updated":"20241015201625"},"Children":[{"ID":"20241015201626-3lk7dlt","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201626-3lk7dlt","updated":"20241015201626"},"Children":[{"ID":"20241015201627-6zz03n7","Type":"NodeParagraph","Properties":{"id":"20241015201627-6zz03n7","updated":"20241015201627"},"Children":[{"Type":"NodeText","Data":"在项目工程下创建com.itheima.utils包，并把提供JWT工具类复制到该包下"}]}]}]}]},{"ID":"20241015201628-8lv976g","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201628-8lv976g","updated":"20241015201628"},"Children":[{"ID":"20241015201629-gyex2d1","Type":"NodeParagraph","Properties":{"id":"20241015201629-gyex2d1","updated":"20241015201629"},"Children":[{"Type":"NodeText","Data":"登录完成后，调用工具类生成JWT令牌并返回"}]}]}]},{"ID":"20241015201630-sjdrqbd","Type":"NodeParagraph","Properties":{"id":"20241015201630-sjdrqbd","updated":"20241015201630"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"JWT工具类"}]},{"ID":"20241015201631-okoo8qa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201631-okoo8qa","updated":"20241015201631"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public class JwtUtils {\n\n    private static String signKey = \"itheima\";//签名密钥\n    private static Long expire = 43200000L; //有效时间\n\n    /**\n     * 生成JWT令牌\n     * @param claims JWT第二部分负载 payload 中存储的内容\n     * @return\n     */\n    public static String generateJwt(Map\u003cString, Object\u003e claims){\n        String jwt = Jwts.builder()\n                .addClaims(claims)//自定义信息（有效载荷）\n                .signWith(SignatureAlgorithm.HS256, signKey)//签名算法（头部）\n                .setExpiration(new Date(System.currentTimeMillis() + expire))//过期时间\n                .compact();\n        return jwt;\n    }\n\n    /**\n     * 解析JWT令牌\n     * @param jwt JWT令牌\n     * @return JWT第二部分负载 payload 中存储的内容\n     */\n    public static Claims parseJWT(String jwt){\n        Claims claims = Jwts.parser()\n                .setSigningKey(signKey)//指定签名密钥\n                .parseClaimsJws(jwt)//指定令牌Token\n                .getBody();\n        return claims;\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201632-3q8upmt","Type":"NodeParagraph","Properties":{"id":"20241015201632-3q8upmt","updated":"20241015201632"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"登录成功，生成JWT令牌并返回"}]},{"ID":"20241015201633-3v36gv0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241015201633-3v36gv0","updated":"20241018152551"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ=="},{"Type":"NodeCodeBlockCode","Data":"@RestController\n@Slf4j\npublic class LoginController {\n    //依赖业务层对象\n    @Autowired\n    private EmpService empService;\n\n    @PostMapping(\"/login\")\n    public Result login(@RequestBody Emp emp) {\n        //调用业务层：登录功能\n        Emp loginEmp = empService.login(emp);\n\n        //判断：登录用户是否存在\n        if(loginEmp !=null ){\n            //自定义信息\n            Map\u003cString , Object\u003e claims = new HashMap\u003c\u003e();\n            claims.put(\"id\", loginEmp.getId());\n            claims.put(\"username\",loginEmp.getUsername());\n            claims.put(\"name\",loginEmp.getName());\n\n            //使用JWT工具类，生成身份令牌\n            String token = JwtUtils.generateJwt(claims); // 【令牌中存放了用户id、用户名】\n            return Result.success(token);\n        }\n        return Result.error(\"用户名或密码错误\");\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20241015201634-zudmdrx","Type":"NodeParagraph","Properties":{"id":"20241015201634-zudmdrx","updated":"20241015201634"},"Children":[{"Type":"NodeText","Data":"重启服务，打开postman测试登录接口："}]},{"ID":"20241015201635-8pcp638","Type":"NodeParagraph","Properties":{"id":"20241015201635-8pcp638","updated":"20241015201635"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106212805480","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106212805480-20241015202541-9jaffsz.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201636-0holkoy","Type":"NodeParagraph","Properties":{"id":"20241015201636-0holkoy","updated":"20241015201636"},"Children":[{"Type":"NodeText","Data":"打开浏览器完成前后端联调操作：利用开发者工具，抓取一下网络请求"}]},{"ID":"20241015201637-z0cci49","Type":"NodeParagraph","Properties":{"id":"20241015201637-z0cci49","updated":"20241015201637"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106213419461","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106213419461-20241015202541-0orcn99.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201638-spre43d","Type":"NodeBlockquote","Properties":{"id":"20241015201638-spre43d","updated":"20241015201638"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201639-wp4gknk","Type":"NodeParagraph","Properties":{"id":"20241015201639-wp4gknk","updated":"20241015201639"},"Children":[{"Type":"NodeText","Data":"登录请求完成后，可以看到JWT令牌已经响应给了前端，此时前端就会将JWT令牌存储在浏览器本地。"}]}]},{"ID":"20241015201640-r33n6ch","Type":"NodeParagraph","Properties":{"id":"20241015201640-r33n6ch","updated":"20241015201640"},"Children":[{"Type":"NodeText","Data":"服务器响应的JWT令牌存储在本地浏览器哪里了呢？"}]},{"ID":"20241015201641-48x03rm","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201641-48x03rm","updated":"20241015201641"},"Children":[{"ID":"20241015201642-61sb0fb","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201642-61sb0fb","updated":"20241015201642"},"Children":[{"ID":"20241015201643-9x6ctxn","Type":"NodeParagraph","Properties":{"id":"20241015201643-9x6ctxn","updated":"20241015201643"},"Children":[{"Type":"NodeText","Data":"在当前案例中，JWT令牌存储在浏览器的本地存储空间local storage中了。 local storage是浏览器的本地存储，在移动端也是支持的。"}]}]}]},{"ID":"20241015201644-z2xo5mj","Type":"NodeParagraph","Properties":{"id":"20241015201644-z2xo5mj","updated":"20241015201644"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106213910049","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106213910049-20241015202541-jzoreb4.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201645-50fsrdj","Type":"NodeParagraph","Properties":{"id":"20241015201645-50fsrdj","updated":"20241015201645"},"Children":[{"Type":"NodeText","Data":"我们在发起一个查询部门数据的请求，此时我们可以看到在请求头中包含一个token(JWT令牌)，后续的每一次请求当中，都会将这个令牌携带到服务端。"}]},{"ID":"20241015201646-gvn7200","Type":"NodeParagraph","Properties":{"id":"20241015201646-gvn7200","updated":"20241015201646"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106214331443","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106214331443-20241015202541-xq91zsm.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201647-4ax4xac","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201647-4ax4xac","updated":"20241015201647"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4 过滤器Filter"}]},{"ID":"20241015201648-ifijrt5","Type":"NodeParagraph","Properties":{"id":"20241015201648-ifijrt5","updated":"20241015201648"},"Children":[{"Type":"NodeText","Data":"刚才通过浏览器的开发者工具，我们可以看到在后续的请求当中，都会在请求头中携带JWT令牌到服务端，而服务端需要统一拦截所有的请求，从而判断是否携带的有合法的JWT令牌。"},{"Type":"NodeSoftBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"那怎么样来统一拦截到所有的请求校验令牌的有效性呢？这里我们会学习两种解决方案："}]},{"ID":"20241015201649-e1mdwo9","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201649-e1mdwo9","updated":"20241015201649"},"Children":[{"ID":"20241015201650-1mar1rq","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201650-1mar1rq","updated":"20241015201650"},"Children":[{"ID":"20241015201651-t1xiudp","Type":"NodeParagraph","Properties":{"id":"20241015201651-t1xiudp","updated":"20241015201651"},"Children":[{"Type":"NodeText","Data":"Filter过滤器"}]}]},{"ID":"20241015201652-5shqu0e","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201652-5shqu0e","updated":"20241015201652"},"Children":[{"ID":"20241015201653-o4lo691","Type":"NodeParagraph","Properties":{"id":"20241015201653-o4lo691","updated":"20241015201653"},"Children":[{"Type":"NodeText","Data":"Interceptor拦截器"}]}]}]},{"ID":"20241015201654-u21852q","Type":"NodeParagraph","Properties":{"id":"20241015201654-u21852q","updated":"20241015201654"},"Children":[{"Type":"NodeText","Data":"我们首先来学习过滤器Filter。"}]},{"ID":"20241015201655-ajb65k7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201655-ajb65k7","updated":"20241015201655"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.1 快速入门"}]},{"ID":"20241015201656-tkaid0v","Type":"NodeParagraph","Properties":{"id":"20241015201656-tkaid0v","updated":"20241015201656"},"Children":[{"Type":"NodeText","Data":"什么是Filter？"}]},{"ID":"20241015201657-111nlku","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201657-111nlku","updated":"20241015201657"},"Children":[{"ID":"20241015201658-apctnnz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201658-apctnnz","updated":"20241015201658"},"Children":[{"ID":"20241015201659-6zdkhxl","Type":"NodeParagraph","Properties":{"id":"20241015201659-6zdkhxl","updated":"20241015201659"},"Children":[{"Type":"NodeText","Data":"Filter表示过滤器，是 JavaWeb三大组件(Servlet、Filter、Listener)之一。"}]}]},{"ID":"20241015201660-8zympc3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201660-8zympc3","updated":"20241015201660"},"Children":[{"ID":"20241015201661-m7z9cdg","Type":"NodeParagraph","Properties":{"id":"20241015201661-m7z9cdg","updated":"20241015201661"},"Children":[{"Type":"NodeText","Data":"过滤器可以把对资源的请求拦截下来，从而实现一些特殊的功能"}]},{"ID":"20241015201662-ilb54t0","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201662-ilb54t0","updated":"20241015201662"},"Children":[{"ID":"20241015201663-9cnfs2u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201663-9cnfs2u","updated":"20241015201663"},"Children":[{"ID":"20241015201664-n91agmq","Type":"NodeParagraph","Properties":{"id":"20241015201664-n91agmq","updated":"20241015201664"},"Children":[{"Type":"NodeText","Data":"使用了过滤器之后，要想访问web服务器上的资源，必须先经过滤器，过滤器处理完毕之后，才可以访问对应的资源。"}]}]}]}]},{"ID":"20241015201665-4sx9kqa","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201665-4sx9kqa","updated":"20241015201665"},"Children":[{"ID":"20241015201666-mou3etb","Type":"NodeParagraph","Properties":{"id":"20241015201666-mou3etb","updated":"20241015201666"},"Children":[{"Type":"NodeText","Data":"过滤器一般完成一些通用的操作，比如：登录校验、统一编码处理、敏感字符处理等。"}]}]}]},{"ID":"20241015201667-nna5hxm","Type":"NodeParagraph","Properties":{"id":"20241015201667-nna5hxm","updated":"20241015201667"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112120955145","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112120955145-20241015202541-wtbi9yn.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201668-y3jacp8","Type":"NodeParagraph","Properties":{"id":"20241015201668-y3jacp8","updated":"20241015201668"},"Children":[{"Type":"NodeText","Data":"下面我们通过Filter快速入门程序掌握过滤器的基本使用操作："}]},{"ID":"20241015201669-kkds5k8","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201669-kkds5k8","updated":"20241015201669"},"Children":[{"ID":"20241015201670-ztid09y","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201670-ztid09y","updated":"20241015201670"},"Children":[{"ID":"20241015201671-3c5aclf","Type":"NodeParagraph","Properties":{"id":"20241015201671-3c5aclf","updated":"20241015201671"},"Children":[{"Type":"NodeText","Data":"第1步，定义过滤器 ：1.定义一个类，实现 Filter 接口，并重写其所有方法。"}]}]},{"ID":"20241015201672-c57m9fh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201672-c57m9fh","updated":"20241015201672"},"Children":[{"ID":"20241015201673-9c3fnty","Type":"NodeParagraph","Properties":{"id":"20241015201673-9c3fnty","updated":"20241015201673"},"Children":[{"Type":"NodeText","Data":"第2步，配置过滤器：Filter类上加 @WebFilter 注解，配置拦截资源的路径。引导类上加 @ServletComponentScan 开启Servlet组件支持。"}]}]}]},{"ID":"20241015201674-3epi6lw","Type":"NodeParagraph","Properties":{"id":"20241015201674-3epi6lw","updated":"20241015201674"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"定义过滤器"}]},{"ID":"20241015201675-32z8umi","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201675-32z8umi","updated":"20241015201675"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//定义一个类，实现一个标准的Filter过滤器的接口\npublic class DemoFilter implements Filter {\n    @Override //初始化方法, 只调用一次\n    public void init(FilterConfig filterConfig) throws ServletException {\n        System.out.println(\"init 初始化方法执行了\");\n    }\n\n    @Override //拦截到请求之后调用, 调用多次\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        System.out.println(\"Demo 拦截到了请求...放行前逻辑\");\n        //放行\n        chain.doFilter(request,response);\n    }\n\n    @Override //销毁方法, 只调用一次\n    public void destroy() {\n        System.out.println(\"destroy 销毁方法执行了\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201676-yxpw1lg","Type":"NodeBlockquote","Properties":{"id":"20241015201676-yxpw1lg","updated":"20241015201676"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201677-bo7sh3a","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201677-bo7sh3a","updated":"20241015201677"},"Children":[{"ID":"20241015201678-zp9b0xt","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201678-zp9b0xt","updated":"20241015201678"},"Children":[{"ID":"20241015201679-8lo2hco","Type":"NodeParagraph","Properties":{"id":"20241015201679-8lo2hco","updated":"20241015201679"},"Children":[{"Type":"NodeText","Data":"init方法：过滤器的初始化方法。在web服务器启动的时候会自动的创建Filter过滤器对象，在创建过滤器对象的时候会自动调用init初始化方法，这个方法只会被调用一次。"}]}]},{"ID":"20241015201680-6f9wtxa","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201680-6f9wtxa","updated":"20241015201680"},"Children":[{"ID":"20241015201681-ye4ne7h","Type":"NodeParagraph","Properties":{"id":"20241015201681-ye4ne7h","updated":"20241015201681"},"Children":[{"Type":"NodeText","Data":"doFilter方法：这个方法是在每一次拦截到请求之后都会被调用，所以这个方法是会被调用多次的，每拦截到一次请求就会调用一次doFilter()方法。"}]}]},{"ID":"20241015201682-gwne6h1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201682-gwne6h1","updated":"20241015201682"},"Children":[{"ID":"20241015201683-10gqn8c","Type":"NodeParagraph","Properties":{"id":"20241015201683-10gqn8c","updated":"20241015201683"},"Children":[{"Type":"NodeText","Data":"destroy方法： 是销毁的方法。当我们关闭服务器的时候，它会自动的调用销毁方法destroy，而这个销毁方法也只会被调用一次。"}]}]}]}]},{"ID":"20241015201684-6u2y2tb","Type":"NodeParagraph","Properties":{"id":"20241015201684-6u2y2tb","updated":"20241015201684"},"Children":[{"Type":"NodeText","Data":"在定义完Filter之后，Filter其实并不会生效，还需要完成Filter的配置，Filter的配置非常简单，只需要在Filter类上添加一个注解：@WebFilter，并指定属性urlPatterns，通过这个属性指定过滤器要拦截哪些请求"}]},{"ID":"20241015201685-v7q7vbk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201685-v7q7vbk","updated":"20241015201685"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\") //配置过滤器要拦截的请求路径（ /* 表示拦截浏览器的所有请求 ）\npublic class DemoFilter implements Filter {\n    @Override //初始化方法, 只调用一次\n    public void init(FilterConfig filterConfig) throws ServletException {\n        System.out.println(\"init 初始化方法执行了\");\n    }\n\n    @Override //拦截到请求之后调用, 调用多次\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        System.out.println(\"Demo 拦截到了请求...放行前逻辑\");\n        //放行\n        chain.doFilter(request,response);\n    }\n\n    @Override //销毁方法, 只调用一次\n    public void destroy() {\n        System.out.println(\"destroy 销毁方法执行了\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201686-kakqed2","Type":"NodeParagraph","Properties":{"id":"20241015201686-kakqed2","updated":"20241015201686"},"Children":[{"Type":"NodeText","Data":"当我们在Filter类上面加了@WebFilter注解之后，接下来我们还需要在启动类上面加上一个注解@ServletComponentScan，通过这个@ServletComponentScan注解来开启SpringBoot项目对于Servlet组件的支持。"}]},{"ID":"20241015201687-ddoyast","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201687-ddoyast","updated":"20241015201687"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@ServletComponentScan\n@SpringBootApplication\npublic class TliasWebManagementApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(TliasWebManagementApplication.class, args);\n    }\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201688-gnqla4h","Type":"NodeParagraph","Properties":{"id":"20241015201688-gnqla4h","updated":"20241015201688"},"Children":[{"Type":"NodeText","Data":"重新启动服务，打开浏览器，执行部门管理的请求，可以看到控制台输出了过滤器中的内容："}]},{"ID":"20241015201689-l78ti4s","Type":"NodeParagraph","Properties":{"id":"20241015201689-l78ti4s","updated":"20241015201689"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112121205697","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112121205697-20241015202541-z92o688.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201690-zjl068e","Type":"NodeBlockquote","Properties":{"id":"20241015201690-zjl068e","updated":"20241015201690"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201691-g8aefwv","Type":"NodeParagraph","Properties":{"id":"20241015201691-g8aefwv","updated":"20241015201691"},"Children":[{"Type":"NodeText","Data":"注意事项："}]},{"ID":"20241015201692-l3156mg","Type":"NodeParagraph","Properties":{"id":"20241015201692-l3156mg","updated":"20241015201692"},"Children":[{"Type":"NodeText","Data":"​\t在过滤器Filter中，如果不执行放行操作，将无法访问后面的资源。 放行操作：chain.doFilter(request, response);"}]}]},{"ID":"20241015201693-i6ju8vz","Type":"NodeParagraph","Properties":{"id":"20241015201693-i6ju8vz","updated":"20241015201693"},"Children":[{"Type":"NodeText","Data":"现在我们已完成了Filter过滤器的基本使用，下面我们将学习Filter过滤器在使用过程中的一些细节。"}]},{"ID":"20241015201694-35t6o8c","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201694-35t6o8c","updated":"20241015201694"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.2 Filter详解"}]},{"ID":"20241015201695-3tlflq9","Type":"NodeParagraph","Properties":{"id":"20241015201695-3tlflq9","updated":"20241015201695"},"Children":[{"Type":"NodeText","Data":"Filter过滤器的快速入门程序我们已经完成了，接下来我们就要详细的介绍一下过滤器Filter在使用中的一些细节。主要介绍以下3个方面的细节："}]},{"ID":"20241015201696-tdc9k8d","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201696-tdc9k8d","updated":"20241015201696"},"Children":[{"ID":"20241015201697-2bryiyd","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201697-2bryiyd","updated":"20241015201697"},"Children":[{"ID":"20241015201698-zk8i4t2","Type":"NodeParagraph","Properties":{"id":"20241015201698-zk8i4t2","updated":"20241015201698"},"Children":[{"Type":"NodeText","Data":"过滤器的执行流程"}]}]},{"ID":"20241015201699-me25dn3","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201699-me25dn3","updated":"20241015201699"},"Children":[{"ID":"20241015201700-cgzeddf","Type":"NodeParagraph","Properties":{"id":"20241015201700-cgzeddf","updated":"20241015201700"},"Children":[{"Type":"NodeText","Data":"过滤器的拦截路径配置"}]}]},{"ID":"20241015201701-03ucdua","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201701-03ucdua","updated":"20241015201701"},"Children":[{"ID":"20241015201702-fotc1vg","Type":"NodeParagraph","Properties":{"id":"20241015201702-fotc1vg","updated":"20241015201702"},"Children":[{"Type":"NodeText","Data":"过滤器链"}]}]}]},{"ID":"20241015201703-p67931m","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201703-p67931m","updated":"20241015201703"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.2.1 执行流程"}]},{"ID":"20241015201704-st4406c","Type":"NodeParagraph","Properties":{"id":"20241015201704-st4406c","updated":"20241015201704"},"Children":[{"Type":"NodeText","Data":"首先我们先来看下过滤器的执行流程："}]},{"ID":"20241015201705-ur97exv","Type":"NodeParagraph","Properties":{"id":"20241015201705-ur97exv","updated":"20241015201705"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106222559935","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106222559935-20241015202541-qr3ikmr.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201706-8bafede","Type":"NodeParagraph","Properties":{"id":"20241015201706-8bafede","updated":"20241015201706"},"Children":[{"Type":"NodeText","Data":"过滤器当中我们拦截到了请求之后，如果希望继续访问后面的web资源，就要执行放行操作，放行就是调用 FilterChain对象当中的doFilter()方法，在调用doFilter()这个方法之前所编写的代码属于放行之前的逻辑。"}]},{"ID":"20241015201707-gsrdg9v","Type":"NodeParagraph","Properties":{"id":"20241015201707-gsrdg9v","updated":"20241015201707"},"Children":[{"Type":"NodeText","Data":"在放行后访问完 web 资源之后还会回到过滤器当中，回到过滤器之后如有需求还可以执行放行之后的逻辑，放行之后的逻辑我们写在doFilter()这行代码之后。"}]},{"ID":"20241015201708-kzec7nk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201708-kzec7nk","updated":"20241015201708"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\") \npublic class DemoFilter implements Filter {\n    \n    @Override //初始化方法, 只调用一次\n    public void init(FilterConfig filterConfig) throws ServletException {\n        System.out.println(\"init 初始化方法执行了\");\n    }\n    \n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        \n        System.out.println(\"DemoFilter   放行前逻辑.....\");\n\n        //放行请求\n        filterChain.doFilter(servletRequest,servletResponse);\n\n        System.out.println(\"DemoFilter   放行后逻辑.....\");\n        \n    }\n\n    @Override //销毁方法, 只调用一次\n    public void destroy() {\n        System.out.println(\"destroy 销毁方法执行了\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201709-e4kdklc","Type":"NodeParagraph","Properties":{"id":"20241015201709-e4kdklc","updated":"20241015201709"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106224322625","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106224322625-20241015202541-hjw51j7.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201710-ors0z89","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201710-ors0z89","updated":"20241015201710"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.2.2 拦截路径"}]},{"ID":"20241015201711-1vh0q95","Type":"NodeParagraph","Properties":{"id":"20241015201711-1vh0q95","updated":"20241015201711"},"Children":[{"Type":"NodeText","Data":"执行流程我们搞清楚之后，接下来再来介绍一下过滤器的拦截路径，Filter可以根据需求，配置不同的拦截资源路径："}]},{"ID":"20241015201712-1j35o29","Type":"NodeTable","Data":"| 拦截路径     | urlPatterns值 | 含义                               |\n| ------------ | ------------- | ---------------------------------- |\n| 拦截具体路径 | /login        | 只有访问 /login 路径时，才会被拦截 |\n| 目录拦截     | /emps/*       | 访问/emps下的所有资源，都会被拦截  |\n| 拦截所有     | /*            | 访问所有资源，都会被拦截           |","TableAligns":[0,0,0],"Properties":{"id":"20241015201712-1j35o29","updated":"20241015201712"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"拦截路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"urlPatterns值"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"含义"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"拦截具体路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/login"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"只有访问 /login 路径时，才会被拦截"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"目录拦截"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/emps/*"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"访问/emps下的所有资源，都会被拦截"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"拦截所有"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/*"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"访问所有资源，都会被拦截"}]}]}]},{"ID":"20241015201713-ecsu5il","Type":"NodeParagraph","Properties":{"id":"20241015201713-ecsu5il","updated":"20241015201713"},"Children":[{"Type":"NodeText","Data":"下面我们来测试\"拦截具体路径\"："}]},{"ID":"20241015201714-s8s2s19","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201714-s8s2s19","updated":"20241015201714"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/login\")  //拦截/login具体路径\npublic class DemoFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        System.out.println(\"DemoFilter   放行前逻辑.....\");\n\n        //放行请求\n        filterChain.doFilter(servletRequest,servletResponse);\n\n        System.out.println(\"DemoFilter   放行后逻辑.....\");\n    }\n\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n        Filter.super.init(filterConfig);\n    }\n\n    @Override\n    public void destroy() {\n        Filter.super.destroy();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201715-zxns784","Type":"NodeParagraph","Properties":{"id":"20241015201715-zxns784","updated":"20241015201715"},"Children":[{"Type":"NodeText","Data":"测试1：访问部门管理请求，发现过滤器没有拦截请求"}]},{"ID":"20241015201716-gbzbp10","Type":"NodeParagraph","Properties":{"id":"20241015201716-gbzbp10","updated":"20241015201716"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106225658525","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106225658525-20241015202541-7mz8pu6.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201717-3nqtjrj","Type":"NodeParagraph","Properties":{"id":"20241015201717-3nqtjrj","updated":"20241015201717"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106230332510","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106230332510-20241015202541-hyklt7d.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201718-ngmzim4","Type":"NodeParagraph","Properties":{"id":"20241015201718-ngmzim4","updated":"20241015201718"},"Children":[{"Type":"NodeText","Data":"测试2：访问登录请求/login，发现过滤器拦截请求"}]},{"ID":"20241015201719-kz59srb","Type":"NodeParagraph","Properties":{"id":"20241015201719-kz59srb","updated":"20241015201719"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106230520229","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106230520229-20241015202541-fnrrz2m.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201720-srap5x1","Type":"NodeParagraph","Properties":{"id":"20241015201720-srap5x1","updated":"20241015201720"},"Children":[{"Type":"NodeText","Data":"下面我们来测试\"目录拦截\"："}]},{"ID":"20241015201721-j9rbafx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201721-j9rbafx","updated":"20241015201721"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/depts/*\") //拦截所有以/depts开头，后面是什么无所谓\npublic class DemoFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        System.out.println(\"DemoFilter   放行前逻辑.....\");\n\n        //放行请求\n        filterChain.doFilter(servletRequest,servletResponse);\n\n        System.out.println(\"DemoFilter   放行后逻辑.....\");\n    }\n\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n        Filter.super.init(filterConfig);\n    }\n\n    @Override\n    public void destroy() {\n        Filter.super.destroy();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201722-jfszmf0","Type":"NodeParagraph","Properties":{"id":"20241015201722-jfszmf0","updated":"20241015201722"},"Children":[{"Type":"NodeText","Data":"测试1：访问部门管理请求，发现过滤器拦截了请求"}]},{"ID":"20241015201723-l6ts7y1","Type":"NodeParagraph","Properties":{"id":"20241015201723-l6ts7y1","updated":"20241015201723"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106231144348","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106231144348-20241015202541-33rha4k.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201724-eqfiauz","Type":"NodeParagraph","Properties":{"id":"20241015201724-eqfiauz","updated":"20241015201724"},"Children":[{"Type":"NodeText","Data":"测试2：访问登录请求/login，发现过滤器没有拦截请求"}]},{"ID":"20241015201725-iff0hfx","Type":"NodeParagraph","Properties":{"id":"20241015201725-iff0hfx","updated":"20241015201725"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230106231220802","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230106231220802-20241015202541-7mjadwz.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201726-80ebka3","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201726-80ebka3","updated":"20241015201726"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.2.3 过滤器链"}]},{"ID":"20241015201727-912ohzw","Type":"NodeParagraph","Properties":{"id":"20241015201727-912ohzw","updated":"20241015201727"},"Children":[{"Type":"NodeText","Data":"最后我们在来介绍下过滤器链，什么是过滤器链呢？所谓过滤器链指的是在一个web应用程序当中，可以配置多个过滤器，多个过滤器就形成了一个过滤器链。"}]},{"ID":"20241015201728-9diaa1k","Type":"NodeParagraph","Properties":{"id":"20241015201728-9diaa1k","updated":"20241015201728"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107084730393","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107084730393-20241015202541-en05877.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201729-i0s6no1","Type":"NodeParagraph","Properties":{"id":"20241015201729-i0s6no1","updated":"20241015201729"},"Children":[{"Type":"NodeText","Data":"比如：在我们web服务器当中，定义了两个过滤器，这两个过滤器就形成了一个过滤器链。"}]},{"ID":"20241015201730-cbu2t23","Type":"NodeParagraph","Properties":{"id":"20241015201730-cbu2t23","updated":"20241015201730"},"Children":[{"Type":"NodeText","Data":"而这个链上的过滤器在执行的时候会一个一个的执行，会先执行第一个Filter，放行之后再来执行第二个Filter，如果执行到了最后一个过滤器放行之后，才会访问对应的web资源。"}]},{"ID":"20241015201731-9xdivy7","Type":"NodeParagraph","Properties":{"id":"20241015201731-9xdivy7","updated":"20241015201731"},"Children":[{"Type":"NodeText","Data":"访问完web资源之后，按照我们刚才所介绍的过滤器的执行流程，还会回到过滤器当中来执行过滤器放行后的逻辑，而在执行放行后的逻辑的时候，顺序是反着的。"}]},{"ID":"20241015201732-n5gdx20","Type":"NodeParagraph","Properties":{"id":"20241015201732-n5gdx20","updated":"20241015201732"},"Children":[{"Type":"NodeText","Data":"先要执行过滤器2放行之后的逻辑，再来执行过滤器1放行之后的逻辑，最后在给浏览器响应数据。"}]},{"ID":"20241015201733-wimwejt","Type":"NodeParagraph","Properties":{"id":"20241015201733-wimwejt","updated":"20241015201733"},"Children":[{"Type":"NodeText","Data":"以上就是当我们在web应用当中配置了多个过滤器，形成了这样一个过滤器链以及过滤器链的执行顺序。下面我们通过idea来验证下过滤器链。"}]},{"ID":"20241015201734-74pwnyv","Type":"NodeParagraph","Properties":{"id":"20241015201734-74pwnyv","updated":"20241015201734"},"Children":[{"Type":"NodeText","Data":"验证步骤："}]},{"ID":"20241015201735-i2a8fdl","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201735-i2a8fdl","updated":"20241015201735"},"Children":[{"ID":"20241015201736-evtsiq5","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201736-evtsiq5","updated":"20241015201736"},"Children":[{"ID":"20241015201737-z2fzltt","Type":"NodeParagraph","Properties":{"id":"20241015201737-z2fzltt","updated":"20241015201737"},"Children":[{"Type":"NodeText","Data":"在filter包下再来新建一个Filter过滤器类：AbcFilter"}]}]},{"ID":"20241015201738-amn8sym","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201738-amn8sym","updated":"20241015201738"},"Children":[{"ID":"20241015201739-0wk4irp","Type":"NodeParagraph","Properties":{"id":"20241015201739-0wk4irp","updated":"20241015201739"},"Children":[{"Type":"NodeText","Data":"在AbcFilter过滤器中编写放行前和放行后逻辑"}]}]},{"ID":"20241015201740-rxqblu3","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201740-rxqblu3","updated":"20241015201740"},"Children":[{"ID":"20241015201741-mn54icq","Type":"NodeParagraph","Properties":{"id":"20241015201741-mn54icq","updated":"20241015201741"},"Children":[{"Type":"NodeText","Data":"配置AbcFilter过滤器拦截请求路径为：/*"}]}]},{"ID":"20241015201742-q22jgkc","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015201742-q22jgkc","updated":"20241015201742"},"Children":[{"ID":"20241015201743-927uly4","Type":"NodeParagraph","Properties":{"id":"20241015201743-927uly4","updated":"20241015201743"},"Children":[{"Type":"NodeText","Data":"重启SpringBoot服务，查看DemoFilter、AbcFilter的执行日志"}]}]}]},{"ID":"20241015201744-140yzxr","Type":"NodeParagraph","Properties":{"id":"20241015201744-140yzxr","updated":"20241015201744"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107085552176","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107085552176-20241015202541-jkvklji.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201745-qbn94qk","Type":"NodeParagraph","Properties":{"id":"20241015201745-qbn94qk","updated":"20241015201745"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AbcFilter过滤器"}]},{"ID":"20241015201746-ziyhs8l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201746-ziyhs8l","updated":"20241015201746"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\")\npublic class AbcFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        System.out.println(\"Abc 拦截到了请求... 放行前逻辑\");\n\n        //放行\n        chain.doFilter(request,response);\n\n        System.out.println(\"Abc 拦截到了请求... 放行后逻辑\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201747-osav1gi","Type":"NodeParagraph","Properties":{"id":"20241015201747-osav1gi","updated":"20241015201747"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"DemoFilter过滤器"}]},{"ID":"20241015201748-342gqao","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201748-342gqao","updated":"20241015201748"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\") \npublic class DemoFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        System.out.println(\"DemoFilter   放行前逻辑.....\");\n\n        //放行请求\n        filterChain.doFilter(servletRequest,servletResponse);\n\n        System.out.println(\"DemoFilter   放行后逻辑.....\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201749-pn30q8s","Type":"NodeParagraph","Properties":{"id":"20241015201749-pn30q8s","updated":"20241015201749"},"Children":[{"Type":"NodeText","Data":"打开浏览器访问登录接口："}]},{"ID":"20241015201750-v10sqnk","Type":"NodeParagraph","Properties":{"id":"20241015201750-v10sqnk","updated":"20241015201750"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107090425999","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107090425999-20241015202541-7bhywwx.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201751-sjpy5d8","Type":"NodeParagraph","Properties":{"id":"20241015201751-sjpy5d8","updated":"20241015201751"},"Children":[{"Type":"NodeText","Data":"通过控制台日志的输出，大家发现AbcFilter先执行DemoFilter后执行，这是为什么呢？"}]},{"ID":"20241015201752-1bibmaz","Type":"NodeParagraph","Properties":{"id":"20241015201752-1bibmaz","updated":"20241015201752"},"Children":[{"Type":"NodeText","Data":"其实是和过滤器的类名有关系。以注解方式配置的Filter过滤器，它的执行优先级是按时过滤器类名的自动排序确定的，类名排名越靠前，优先级越高。"}]},{"ID":"20241015201753-thd2aen","Type":"NodeParagraph","Properties":{"id":"20241015201753-thd2aen","updated":"20241015201753"},"Children":[{"Type":"NodeText","Data":"假如我们想让DemoFilter先执行，怎么办呢？答案就是修改类名。"}]},{"ID":"20241015201754-z8uvjwy","Type":"NodeParagraph","Properties":{"id":"20241015201754-z8uvjwy","updated":"20241015201754"},"Children":[{"Type":"NodeText","Data":"测试：修改AbcFilter类名为XbcFilter，运行程序查看控制台日志"}]},{"ID":"20241015201755-5s2qnsa","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201755-5s2qnsa","updated":"20241015201755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\")\npublic class XbcFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        System.out.println(\"Xbc 拦截到了请求...放行前逻辑\");\n\n        //放行\n        chain.doFilter(request,response);\n\n        System.out.println(\"Xbc 拦截到了请求...放行后逻辑\");\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201756-m52jhx3","Type":"NodeParagraph","Properties":{"id":"20241015201756-m52jhx3","updated":"20241015201756"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107093757050","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107093757050-20241015202541-xrwuvxm.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201757-bksy6fn","Type":"NodeParagraph","Properties":{"id":"20241015201757-bksy6fn","updated":"20241015201757"},"Children":[{"Type":"NodeText","Data":"到此，关于过滤器的使用细节，我们已经全部介绍完毕了。"}]},{"ID":"20241015201758-gg70da7","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201758-gg70da7","updated":"20241015201758"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.3 登录校验-Filter"}]},{"ID":"20241015201759-53qasc3","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201759-53qasc3","updated":"20241015201759"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.3.1 分析"}]},{"ID":"20241015201760-svkuz81","Type":"NodeParagraph","Properties":{"id":"20241015201760-svkuz81","updated":"20241015201760"},"Children":[{"Type":"NodeText","Data":"过滤器Filter的快速入门以及使用细节我们已经介绍完了，接下来最后一步，我们需要使用过滤器Filter来完成案例当中的登录校验功能。"}]},{"ID":"20241015201761-f3pr888","Type":"NodeParagraph","Properties":{"id":"20241015201761-f3pr888","updated":"20241015201761"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107095010089","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107095010089-20241015202541-0prjoiz.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201762-qkelv2p","Type":"NodeParagraph","Properties":{"id":"20241015201762-qkelv2p","updated":"20241015201762"},"Children":[{"Type":"NodeText","Data":"我们先来回顾下前面分析过的登录校验的基本流程："}]},{"ID":"20241015201763-uc69hbd","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201763-uc69hbd","updated":"20241015201763"},"Children":[{"ID":"20241015201764-fe3tx5d","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201764-fe3tx5d","updated":"20241015201764"},"Children":[{"ID":"20241015201765-nhle3pf","Type":"NodeParagraph","Properties":{"id":"20241015201765-nhle3pf","updated":"20241015201765"},"Children":[{"Type":"NodeText","Data":"要进入到后台管理系统，我们必须先完成登录操作，此时就需要访问登录接口login。"}]}]},{"ID":"20241015201766-3taqbb2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201766-3taqbb2","updated":"20241015201766"},"Children":[{"ID":"20241015201767-pz1ea65","Type":"NodeParagraph","Properties":{"id":"20241015201767-pz1ea65","updated":"20241015201767"},"Children":[{"Type":"NodeText","Data":"登录成功之后，我们会在服务端生成一个JWT令牌，并且把JWT令牌返回给前端，前端会将JWT令牌存储下来。"}]}]},{"ID":"20241015201768-tud3vuo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201768-tud3vuo","updated":"20241015201768"},"Children":[{"ID":"20241015201769-qf7p09t","Type":"NodeParagraph","Properties":{"id":"20241015201769-qf7p09t","updated":"20241015201769"},"Children":[{"Type":"NodeText","Data":"在后续的每一次请求当中，都会将JWT令牌携带到服务端，请求到达服务端之后，要想去访问对应的业务功能，此时我们必须先要校验令牌的有效性。"}]}]},{"ID":"20241015201770-vdqhxb7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201770-vdqhxb7","updated":"20241015201770"},"Children":[{"ID":"20241015201771-w9pcy4y","Type":"NodeParagraph","Properties":{"id":"20241015201771-w9pcy4y","updated":"20241015201771"},"Children":[{"Type":"NodeText","Data":"对于校验令牌的这一块操作，我们使用登录校验的过滤器，在过滤器当中来校验令牌的有效性。如果令牌是无效的，就响应一个错误的信息，也不会再去放行访问对应的资源了。如果令牌存在，并且它是有效的，此时就会放行去访问对应的web资源，执行相应的业务操作。"}]}]}]},{"ID":"20241015201772-tvnypau","Type":"NodeParagraph","Properties":{"id":"20241015201772-tvnypau","updated":"20241015201772"},"Children":[{"Type":"NodeText","Data":"大概清楚了在Filter过滤器的实现步骤了，那在正式开发登录校验过滤器之前，我们思考两个问题："}]},{"ID":"20241015201773-i19zghz","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201773-i19zghz","updated":"20241015201773"},"Children":[{"ID":"20241015201774-drarzzy","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201774-drarzzy","updated":"20241015201774"},"Children":[{"ID":"20241015201775-a6t35ii","Type":"NodeParagraph","Properties":{"id":"20241015201775-a6t35ii","updated":"20241015201775"},"Children":[{"Type":"NodeText","Data":"所有的请求，拦截到了之后，都需要校验令牌吗？"}]},{"ID":"20241015201776-y1o93yj","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201776-y1o93yj","updated":"20241015201776"},"Children":[{"ID":"20241015201777-1t07d5l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201777-1t07d5l","updated":"20241015201777"},"Children":[{"ID":"20241015201778-0hprjjz","Type":"NodeParagraph","Properties":{"id":"20241015201778-0hprjjz","updated":"20241015201778"},"Children":[{"Type":"NodeText","Data":"答案："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"登录请求例外"}]}]}]}]},{"ID":"20241015201779-zt2483f","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201779-zt2483f","updated":"20241015201779"},"Children":[{"ID":"20241015201780-vnj6nl1","Type":"NodeParagraph","Properties":{"id":"20241015201780-vnj6nl1","updated":"20241015201780"},"Children":[{"Type":"NodeText","Data":"拦截到请求后，什么情况下才可以放行，执行业务操作？"}]},{"ID":"20241015201781-afhyzuw","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201781-afhyzuw","updated":"20241015201781"},"Children":[{"ID":"20241015201782-k8jq1yn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201782-k8jq1yn","updated":"20241015201782"},"Children":[{"ID":"20241015201783-4jawj5t","Type":"NodeParagraph","Properties":{"id":"20241015201783-4jawj5t","updated":"20241015201783"},"Children":[{"Type":"NodeText","Data":"答案："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"有令牌，且令牌校验通过(合法)；否则都返回未登录错误结果"}]}]}]}]}]},{"ID":"20241015201784-nfcxnfv","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201784-nfcxnfv","updated":"20241015201784"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.3.2 具体流程"}]},{"ID":"20241015201785-dqt00l5","Type":"NodeParagraph","Properties":{"id":"20241015201785-dqt00l5","updated":"20241015201785"},"Children":[{"Type":"NodeText","Data":"我们要完成登录校验，主要是利用Filter过滤器实现，而Filter过滤器的流程步骤："}]},{"ID":"20241015201786-xoe8bjo","Type":"NodeParagraph","Properties":{"id":"20241015201786-xoe8bjo","updated":"20241015201786"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112122130564","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112122130564-20241015202541-o9c9uh1.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201787-9o6jc0x","Type":"NodeParagraph","Properties":{"id":"20241015201787-9o6jc0x","updated":"20241015201787"},"Children":[{"Type":"NodeText","Data":"基于上面的业务流程，我们分析出具体的操作步骤："}]},{"ID":"20241015201788-q5mkrt6","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201788-q5mkrt6","updated":"20241015201788"},"Children":[{"ID":"20241015201789-vj8uxih","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201789-vj8uxih","updated":"20241015201789"},"Children":[{"ID":"20241015201790-piyphw8","Type":"NodeParagraph","Properties":{"id":"20241015201790-piyphw8","updated":"20241015201790"},"Children":[{"Type":"NodeText","Data":"获取请求url"}]}]},{"ID":"20241015201791-v58npug","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201791-v58npug","updated":"20241015201791"},"Children":[{"ID":"20241015201792-8fipws5","Type":"NodeParagraph","Properties":{"id":"20241015201792-8fipws5","updated":"20241015201792"},"Children":[{"Type":"NodeText","Data":"判断请求url中是否包含login，如果包含，说明是登录操作，放行"}]}]},{"ID":"20241015201793-0eez3ig","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201793-0eez3ig","updated":"20241015201793"},"Children":[{"ID":"20241015201794-nb86p2g","Type":"NodeParagraph","Properties":{"id":"20241015201794-nb86p2g","updated":"20241015201794"},"Children":[{"Type":"NodeText","Data":"获取请求头中的令牌（token）"}]}]},{"ID":"20241015201795-q8fx82d","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015201795-q8fx82d","updated":"20241015201795"},"Children":[{"ID":"20241015201796-m3iqouk","Type":"NodeParagraph","Properties":{"id":"20241015201796-m3iqouk","updated":"20241015201796"},"Children":[{"Type":"NodeText","Data":"判断令牌是否存在，如果不存在，返回错误结果（未登录）"}]}]},{"ID":"20241015201797-emdydht","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20241015201797-emdydht","updated":"20241015201797"},"Children":[{"ID":"20241015201798-dumao3d","Type":"NodeParagraph","Properties":{"id":"20241015201798-dumao3d","updated":"20241015201798"},"Children":[{"Type":"NodeText","Data":"解析token，如果解析失败，返回错误结果（未登录）"}]}]},{"ID":"20241015201799-2qz3fd4","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20241015201799-2qz3fd4","updated":"20241015201799"},"Children":[{"ID":"20241015201800-xn1z076","Type":"NodeParagraph","Properties":{"id":"20241015201800-xn1z076","updated":"20241015201800"},"Children":[{"Type":"NodeText","Data":"放行"}]}]}]},{"ID":"20241015201801-otccvss","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201801-otccvss","updated":"20241015201801"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.4.3.3 代码实现"}]},{"ID":"20241015201802-nv47cxv","Type":"NodeParagraph","Properties":{"id":"20241015201802-nv47cxv","updated":"20241015201802"},"Children":[{"Type":"NodeText","Data":"分析清楚了以上的问题后，我们就参照接口文档来开发登录功能了，登录接口描述如下："}]},{"ID":"20241015201803-lfj13y6","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201803-lfj13y6","updated":"20241015201803"},"Children":[{"ID":"20241015201804-k0ucd31","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201804-k0ucd31","updated":"20241015201804"},"Children":[{"ID":"20241015201805-vzi3mm8","Type":"NodeParagraph","Properties":{"id":"20241015201805-vzi3mm8","updated":"20241015201805"},"Children":[{"Type":"NodeText","Data":"基本信息"}]},{"ID":"20241015201806-kejbsom","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201806-kejbsom","updated":"20241015201806"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"请求路径：/login\n\n请求方式：POST\n\n接口描述：该接口用于员工登录Tlias智能学习辅助系统，登录完毕后，系统下发JWT令牌。 \n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201807-aao7njo","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201807-aao7njo","updated":"20241015201807"},"Children":[{"ID":"20241015201808-nh8vnif","Type":"NodeParagraph","Properties":{"id":"20241015201808-nh8vnif","updated":"20241015201808"},"Children":[{"Type":"NodeText","Data":"请求参数"}]},{"ID":"20241015201809-ejjm3mj","Type":"NodeParagraph","Properties":{"id":"20241015201809-ejjm3mj","updated":"20241015201809"},"Children":[{"Type":"NodeText","Data":"参数格式：application/json"}]},{"ID":"20241015201810-fs31qof","Type":"NodeParagraph","Properties":{"id":"20241015201810-fs31qof","updated":"20241015201810"},"Children":[{"Type":"NodeText","Data":"参数说明："}]},{"ID":"20241015201811-y3oyuiz","Type":"NodeTable","Data":"| 名称     | 类型   | 是否必须 | 备注   |\n| -------- | ------ | -------- | ------ |\n| username | string | 必须     | 用户名 |\n| password | string | 必须     | 密码   |","TableAligns":[0,0,0,0],"Properties":{"id":"20241015201811-y3oyuiz","updated":"20241015201811"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"备注"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"username"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"用户名"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"password"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"密码"}]}]}]},{"ID":"20241015201812-nrh53w5","Type":"NodeParagraph","Properties":{"id":"20241015201812-nrh53w5","updated":"20241015201812"},"Children":[{"Type":"NodeText","Data":"请求数据样例："}]},{"ID":"20241015201813-isl78yp","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201813-isl78yp","updated":"20241015201813"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n\t\"username\": \"jinyong\",\n    \"password\": \"123456\"\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201814-3khs8hm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201814-3khs8hm","updated":"20241015201814"},"Children":[{"ID":"20241015201815-7iogtnq","Type":"NodeParagraph","Properties":{"id":"20241015201815-7iogtnq","updated":"20241015201815"},"Children":[{"Type":"NodeText","Data":"响应数据"}]},{"ID":"20241015201816-jpe15n2","Type":"NodeParagraph","Properties":{"id":"20241015201816-jpe15n2","updated":"20241015201816"},"Children":[{"Type":"NodeText","Data":"参数格式：application/json"}]},{"ID":"20241015201817-19pztym","Type":"NodeParagraph","Properties":{"id":"20241015201817-19pztym","updated":"20241015201817"},"Children":[{"Type":"NodeText","Data":"参数说明："}]},{"ID":"20241015201818-2in8lwb","Type":"NodeTable","Data":"| 名称 | 类型   | 是否必须 | 默认值 | 备注                     | 其他信息 |\n| ---- | ------ | -------- | ------ | ------------------------ | -------- |\n| code | number | 必须     |        | 响应码, 1 成功 ; 0  失败 |          |\n| msg  | string | 非必须   |        | 提示信息                 |          |\n| data | string | 必须     |        | 返回的数据 , jwt令牌     |          |","TableAligns":[0,0,0,0,0,0],"Properties":{"id":"20241015201818-2in8lwb","updated":"20241015201818"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认值"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"备注"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"其他信息"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"code"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"number"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"响应码, 1 成功 ; 0  失败"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"msg"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"非必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"提示信息"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]},{"Type":"NodeTableRow","TableAligns":[0,0,0,0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"data"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"string"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"必须"}]},{"Type":"NodeTableCell","Properties":{"id":""}},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"返回的数据 , jwt令牌"}]},{"Type":"NodeTableCell","Properties":{"id":""}}]}]},{"ID":"20241015201819-i77yu89","Type":"NodeParagraph","Properties":{"id":"20241015201819-i77yu89","updated":"20241015201819"},"Children":[{"Type":"NodeText","Data":"响应数据样例："}]},{"ID":"20241015201820-m12oir7","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201820-m12oir7","updated":"20241015201820"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n  \"code\": 1,\n  \"msg\": \"success\",\n  \"data\": \"eyJhbGciOiJIUzI1NiJ9.eyJuYW1lIjoi6YeR5bq4IiwiaWQiOjEsInVzZXJuYW1lIjoiamlueW9uZyIsImV4cCI6MTY2MjIwNzA0OH0.KkUc_CXJZJ8Dd063eImx4H9Ojfrr6XMJ-yVzaWCVZCo\"\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015201821-fadum7g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201821-fadum7g","updated":"20241015201821"},"Children":[{"ID":"20241015201822-lhwgu9u","Type":"NodeParagraph","Properties":{"id":"20241015201822-lhwgu9u","updated":"20241015201822"},"Children":[{"Type":"NodeText","Data":"备注说明"}]},{"ID":"20241015201823-7ykuzl3","Type":"NodeParagraph","Properties":{"id":"20241015201823-7ykuzl3","updated":"20241015201823"},"Children":[{"Type":"NodeText","Data":"用户登录成功后，系统会自动下发JWT令牌，然后在后续的每次请求中，都需要在请求头header中携带到服务端，请求头的名称为 token ，值为 登录时下发的JWT令牌。"}]},{"ID":"20241015201824-jvkz01y","Type":"NodeParagraph","Properties":{"id":"20241015201824-jvkz01y","updated":"20241015201824"},"Children":[{"Type":"NodeText","Data":"如果检测到用户未登录，则会返回如下固定错误信息："}]},{"ID":"20241015201825-bmdd3pr","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"anNvbg==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201825-bmdd3pr","updated":"20241015201825"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"anNvbg==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"{\n\t\"code\": 0,\n\t\"msg\": \"NOT_LOGIN\",\n\t\"data\": null\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]}]},{"ID":"20241015201826-zjuhsi1","Type":"NodeParagraph","Properties":{"id":"20241015201826-zjuhsi1","updated":"20241015201826"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"登录校验过滤器：LoginCheckFilter"}]},{"ID":"20241015201827-mmy4060","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201827-mmy4060","updated":"20241015201827"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Slf4j\n@WebFilter(urlPatterns = \"/*\") //拦截所有请求\npublic class LoginCheckFilter implements Filter {\n\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain chain) throws IOException, ServletException {\n        //前置：强制转换为http协议的请求对象、响应对象 （转换原因：要使用子类中特有方法）\n        HttpServletRequest request = (HttpServletRequest) servletRequest;\n        HttpServletResponse response = (HttpServletResponse) servletResponse;\n\n        //1.获取请求url\n        String url = request.getRequestURL().toString();\n        log.info(\"请求路径：{}\", url); //请求路径：http://localhost:8080/login\n\n\n        //2.判断请求url中是否包含login，如果包含，说明是登录操作，放行\n        if(url.contains(\"/login\")){\n            chain.doFilter(request, response);//放行请求\n            return;//结束当前方法的执行\n        }\n\n\n        //3.获取请求头中的令牌（token）\n        String token = request.getHeader(\"token\");\n        log.info(\"从请求头中获取的令牌：{}\",token);\n\n\n        //4.判断令牌是否存在，如果不存在，返回错误结果（未登录）\n        if(!StringUtils.hasLength(token)){\n            log.info(\"Token不存在\");\n\n            Result responseResult = Result.error(\"NOT_LOGIN\");\n            //把Result对象转换为JSON格式字符串 (fastjson是阿里巴巴提供的用于实现对象和json的转换工具类)\n            String json = JSONObject.toJSONString(responseResult);\n            response.setContentType(\"application/json;charset=utf-8\");\n            //响应\n            response.getWriter().write(json);\n\n            return;\n        }\n\n        //5.解析token，如果解析失败，返回错误结果（未登录）\n        try {\n            JwtUtils.parseJWT(token);\n        }catch (Exception e){\n            log.info(\"令牌解析失败!\");\n\n            Result responseResult = Result.error(\"NOT_LOGIN\");\n            //把Result对象转换为JSON格式字符串 (fastjson是阿里巴巴提供的用于实现对象和json的转换工具类)\n            String json = JSONObject.toJSONString(responseResult);\n            response.setContentType(\"application/json;charset=utf-8\");\n            //响应\n            response.getWriter().write(json);\n\n            return;\n        }\n\n\n        //6.放行\n        chain.doFilter(request, response);\n\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201828-qewdtzq","Type":"NodeParagraph","Properties":{"id":"20241015201828-qewdtzq","updated":"20241015201828"},"Children":[{"Type":"NodeText","Data":"在上述过滤器的功能实现中，我们使用到了一个第三方json处理的工具包fastjson。我们要想使用，需要引入如下依赖："}]},{"ID":"20241015201829-y8500v0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015201829-y8500v0","updated":"20241015201829"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cdependency\u003e\n    \u003cgroupId\u003ecom.alibaba\u003c/groupId\u003e\n    \u003cartifactId\u003efastjson\u003c/artifactId\u003e\n    \u003cversion\u003e1.2.76\u003c/version\u003e\n\u003c/dependency\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201830-950cz2r","Type":"NodeParagraph","Properties":{"id":"20241015201830-950cz2r","updated":"20241015201830"},"Children":[{"Type":"NodeText","Data":"登录校验的过滤器我们编写完成了，接下来我们就可以重新启动服务来做一个测试："}]},{"ID":"20241015201831-z37sd86","Type":"NodeBlockquote","Properties":{"id":"20241015201831-z37sd86","updated":"20241015201831"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201832-te8gd7o","Type":"NodeParagraph","Properties":{"id":"20241015201832-te8gd7o","updated":"20241015201832"},"Children":[{"Type":"NodeText","Data":"测试前先把之前所编写的测试使用的过滤器，暂时注释掉。直接将@WebFilter注解给注释掉即可。"}]}]},{"ID":"20241015201833-ri6kgxy","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201833-ri6kgxy","updated":"20241015201833"},"Children":[{"ID":"20241015201834-runkhb8","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201834-runkhb8","updated":"20241015201834"},"Children":[{"ID":"20241015201835-vazq2qd","Type":"NodeParagraph","Properties":{"id":"20241015201835-vazq2qd","updated":"20241015201835"},"Children":[{"Type":"NodeText","Data":"测试1：未登录是否可以访问部门管理页面"}]},{"ID":"20241015201836-7dudvj0","Type":"NodeParagraph","Properties":{"id":"20241015201836-7dudvj0","updated":"20241015201836"},"Children":[{"Type":"NodeText","Data":"首先关闭浏览器，重新打开浏览器，在地址栏中输入：http://localhost:9528/#/system/dept"}]},{"ID":"20241015201837-js34zm3","Type":"NodeParagraph","Properties":{"id":"20241015201837-js34zm3","updated":"20241015201837"},"Children":[{"Type":"NodeText","Data":"由于用户没有登录，登录校验过滤器返回错误信息，前端页面根据返回的错误信息结果，自动跳转到登录页面了"}]},{"ID":"20241015201838-hea6u45","Type":"NodeParagraph","Properties":{"id":"20241015201838-hea6u45","updated":"20241015201838"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105085212629","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105085212629-20241015202541-a6d4m12.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]}]},{"ID":"20241015201839-l4efpru","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201839-l4efpru","updated":"20241015201839"},"Children":[{"ID":"20241015201840-s1choyr","Type":"NodeParagraph","Properties":{"id":"20241015201840-s1choyr","updated":"20241015201840"},"Children":[{"Type":"NodeText","Data":"测试2：先进行登录操作，再访问部门管理页面"}]},{"ID":"20241015201841-ohu9gtd","Type":"NodeParagraph","Properties":{"id":"20241015201841-ohu9gtd","updated":"20241015201841"},"Children":[{"Type":"NodeText","Data":"登录校验成功之后，可以正常访问相关业务操作页面"}]},{"ID":"20241015201842-dccj4r2","Type":"NodeParagraph","Properties":{"id":"20241015201842-dccj4r2","updated":"20241015201842"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107102922550","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107102922550-20241015202541-u21nxik.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]}]}]},{"ID":"20241015201843-sai0nkc","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201843-sai0nkc","updated":"20241015201843"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5 拦截器Interceptor"}]},{"ID":"20241015201844-u3u808u","Type":"NodeParagraph","Properties":{"id":"20241015201844-u3u808u","updated":"20241015201844"},"Children":[{"Type":"NodeText","Data":"学习完了过滤器Filter之后，接下来我们继续学习拦截器Interseptor。"}]},{"ID":"20241015201845-y5nbp0w","Type":"NodeParagraph","Properties":{"id":"20241015201845-y5nbp0w","updated":"20241015201845"},"Children":[{"Type":"NodeText","Data":"拦截器我们主要分为三个方面进行讲解："}]},{"ID":"20241015201846-qq6pwi9","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201846-qq6pwi9","updated":"20241015201846"},"Children":[{"ID":"20241015201847-yhd9fn9","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201847-yhd9fn9","updated":"20241015201847"},"Children":[{"ID":"20241015201848-a0y123a","Type":"NodeParagraph","Properties":{"id":"20241015201848-a0y123a","updated":"20241015201848"},"Children":[{"Type":"NodeText","Data":"介绍下什么是拦截器，并通过快速入门程序上手拦截器"}]}]},{"ID":"20241015201849-0jpal9x","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201849-0jpal9x","updated":"20241015201849"},"Children":[{"ID":"20241015201850-vjbgd4j","Type":"NodeParagraph","Properties":{"id":"20241015201850-vjbgd4j","updated":"20241015201850"},"Children":[{"Type":"NodeText","Data":"拦截器的使用细节"}]}]},{"ID":"20241015201851-hrlgm9c","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015201851-hrlgm9c","updated":"20241015201851"},"Children":[{"ID":"20241015201852-9cvnd8p","Type":"NodeParagraph","Properties":{"id":"20241015201852-9cvnd8p","updated":"20241015201852"},"Children":[{"Type":"NodeText","Data":"通过拦截器Interceptor完成登录校验功能"}]}]}]},{"ID":"20241015201853-3hiugwr","Type":"NodeParagraph","Properties":{"id":"20241015201853-3hiugwr","updated":"20241015201853"},"Children":[{"Type":"NodeText","Data":"我们先学习第一块内容：拦截器快速入门"}]},{"ID":"20241015201854-fm5dp6q","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201854-fm5dp6q","updated":"20241015201854"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5.1 快速入门"}]},{"ID":"20241015201855-3zz1k48","Type":"NodeParagraph","Properties":{"id":"20241015201855-3zz1k48","updated":"20241015201855"},"Children":[{"Type":"NodeText","Data":"什么是拦截器？"}]},{"ID":"20241015201856-zowydk6","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201856-zowydk6","updated":"20241015201856"},"Children":[{"ID":"20241015201857-z5raijq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201857-z5raijq","updated":"20241015201857"},"Children":[{"ID":"20241015201858-x9w8zsb","Type":"NodeParagraph","Properties":{"id":"20241015201858-x9w8zsb","updated":"20241015201858"},"Children":[{"Type":"NodeText","Data":"是一种动态拦截方法调用的机制，类似于过滤器。"}]}]},{"ID":"20241015201859-f6xp3zy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201859-f6xp3zy","updated":"20241015201859"},"Children":[{"ID":"20241015201860-f0z2sax","Type":"NodeParagraph","Properties":{"id":"20241015201860-f0z2sax","updated":"20241015201860"},"Children":[{"Type":"NodeText","Data":"拦截器是Spring框架中提供的，用来动态拦截控制器方法的执行。"}]}]}]},{"ID":"20241015201861-me15iar","Type":"NodeParagraph","Properties":{"id":"20241015201861-me15iar","updated":"20241015201861"},"Children":[{"Type":"NodeText","Data":"拦截器的作用："}]},{"ID":"20241015201862-77w279v","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201862-77w279v","updated":"20241015201862"},"Children":[{"ID":"20241015201863-dvuopsh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201863-dvuopsh","updated":"20241015201863"},"Children":[{"ID":"20241015201864-izgpuwz","Type":"NodeParagraph","Properties":{"id":"20241015201864-izgpuwz","updated":"20241015201864"},"Children":[{"Type":"NodeText","Data":"拦截请求，在指定方法调用前后，根据业务需要执行预先设定的代码。"}]}]}]},{"ID":"20241015201865-vh4qh71","Type":"NodeParagraph","Properties":{"id":"20241015201865-vh4qh71","updated":"20241015201865"},"Children":[{"Type":"NodeText","Data":"在拦截器当中，我们通常也是做一些通用性的操作，比如：我们可以通过拦截器来拦截前端发起的请求，将登录校验的逻辑全部编写在拦截器当中。在校验的过程当中，如发现用户登录了(携带JWT令牌且是合法令牌)，就可以直接放行，去访问spring当中的资源。如果校验时发现并没有登录或是非法令牌，就可以直接给前端响应未登录的错误信息。"}]},{"ID":"20241015201866-egcd6su","Type":"NodeParagraph","Properties":{"id":"20241015201866-egcd6su","updated":"20241015201866"},"Children":[{"Type":"NodeText","Data":"下面我们通过快速入门程序，来学习下拦截器的基本使用。拦截器的使用步骤和过滤器类似，也分为两步："}]},{"ID":"20241015201867-0q9okzv","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201867-0q9okzv","updated":"20241015201867"},"Children":[{"ID":"20241015201868-5da1nle","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201868-5da1nle","updated":"20241015201868"},"Children":[{"ID":"20241015201869-ylrhdx0","Type":"NodeParagraph","Properties":{"id":"20241015201869-ylrhdx0","updated":"20241015201869"},"Children":[{"Type":"NodeText","Data":"定义拦截器"}]}]},{"ID":"20241015201870-fqgodms","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201870-fqgodms","updated":"20241015201870"},"Children":[{"ID":"20241015201871-wi22yr5","Type":"NodeParagraph","Properties":{"id":"20241015201871-wi22yr5","updated":"20241015201871"},"Children":[{"Type":"NodeText","Data":"注册配置拦截器"}]}]}]},{"ID":"20241015201872-rpdvclc","Type":"NodeParagraph","Properties":{"id":"20241015201872-rpdvclc","updated":"20241015201872"},"Children":[{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"自定义拦截器："},{"Type":"NodeText","Data":"实现HandlerInterceptor接口，并重写其所有方法"}]},{"ID":"20241015201873-b849cb3","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201873-b849cb3","updated":"20241015201873"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//自定义拦截器\n@Component\npublic class LoginCheckInterceptor implements HandlerInterceptor {\n    //目标资源方法执行前执行。 返回true：放行    返回false：不放行\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(\"preHandle .... \");\n        \n        return true; //true表示放行\n    }\n\n    //目标资源方法执行后执行\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        System.out.println(\"postHandle ... \");\n    }\n\n    //视图渲染完毕后执行，最后执行\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        System.out.println(\"afterCompletion .... \");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201874-sz2x668","Type":"NodeBlockquote","Properties":{"id":"20241015201874-sz2x668","updated":"20241015201874"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015201875-k3rw84a","Type":"NodeParagraph","Properties":{"id":"20241015201875-k3rw84a","updated":"20241015201875"},"Children":[{"Type":"NodeText","Data":"注意："}]},{"ID":"20241015201876-ht6dmic","Type":"NodeParagraph","Properties":{"id":"20241015201876-ht6dmic","updated":"20241015201876"},"Children":[{"Type":"NodeText","Data":"​\tpreHandle方法：目标资源方法执行前执行。 返回true：放行    返回false：不放行"}]},{"ID":"20241015201877-muy8s6g","Type":"NodeParagraph","Properties":{"id":"20241015201877-muy8s6g","updated":"20241015201877"},"Children":[{"Type":"NodeText","Data":"​\tpostHandle方法：目标资源方法执行后执行"}]},{"ID":"20241015201878-0itfc5z","Type":"NodeParagraph","Properties":{"id":"20241015201878-0itfc5z","updated":"20241015201878"},"Children":[{"Type":"NodeText","Data":"​\tafterCompletion方法：视图渲染完毕后执行，最后执行"}]}]},{"ID":"20241015201879-0gez04w","Type":"NodeParagraph","Properties":{"id":"20241015201879-0gez04w","updated":"20241015201879"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注册配置拦截器"},{"Type":"NodeText","Data":"：实现WebMvcConfigurer接口，并重写addInterceptors方法"}]},{"ID":"20241015201880-tmnimmv","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201880-tmnimmv","updated":"20241015201880"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration  \npublic class WebConfig implements WebMvcConfigurer {\n\n    //自定义的拦截器对象\n    @Autowired\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    \n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n       //注册自定义拦截器对象\n        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(\"/**\");//设置拦截器拦截的请求路径（ /** 表示拦截所有请求）\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201881-sossa8g","Type":"NodeParagraph","Properties":{"id":"20241015201881-sossa8g","updated":"20241015201881"},"Children":[{"Type":"NodeText","Data":"重新启动SpringBoot服务，打开postman测试："}]},{"ID":"20241015201882-eeg8rdl","Type":"NodeParagraph","Properties":{"id":"20241015201882-eeg8rdl","updated":"20241015201882"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107105224741","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107105224741-20241015202541-mdvbtpj.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201883-3j99rc7","Type":"NodeParagraph","Properties":{"id":"20241015201883-3j99rc7","updated":"20241015201883"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107105415120","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107105415120-20241015202541-b1ojkqq.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201884-2t6z8jw","Type":"NodeParagraph","Properties":{"id":"20241015201884-2t6z8jw","updated":"20241015201884"},"Children":[{"Type":"NodeText","Data":"接下来我们再来做一个测试：将拦截器中返回值改为false"}]},{"ID":"20241015201885-3rli0a6","Type":"NodeParagraph","Properties":{"id":"20241015201885-3rli0a6","updated":"20241015201885"},"Children":[{"Type":"NodeText","Data":"使用postman，再次点击send发送请求后，没有响应数据，说明请求被拦截了没有放行"}]},{"ID":"20241015201886-3qjtpr2","Type":"NodeParagraph","Properties":{"id":"20241015201886-3qjtpr2","updated":"20241015201886"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107105815511","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107105815511-20241015202541-c96vjsf.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201887-h5oyext","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201887-h5oyext","updated":"20241015201887"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5.2 Interceptor详解"}]},{"ID":"20241015201888-imq832j","Type":"NodeParagraph","Properties":{"id":"20241015201888-imq832j","updated":"20241015201888"},"Children":[{"Type":"NodeText","Data":"拦截器的入门程序完成之后，接下来我们来介绍拦截器的使用细节。拦截器的使用细节我们主要介绍两个部分："}]},{"ID":"20241015201889-6wtkzf5","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201889-6wtkzf5","updated":"20241015201889"},"Children":[{"ID":"20241015201890-6iflj0j","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015201890-6iflj0j","updated":"20241015201890"},"Children":[{"ID":"20241015201891-tvfwlue","Type":"NodeParagraph","Properties":{"id":"20241015201891-tvfwlue","updated":"20241015201891"},"Children":[{"Type":"NodeText","Data":"拦截器的拦截路径配置"}]}]},{"ID":"20241015201892-cavnemw","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015201892-cavnemw","updated":"20241015201892"},"Children":[{"ID":"20241015201893-4nn7166","Type":"NodeParagraph","Properties":{"id":"20241015201893-4nn7166","updated":"20241015201893"},"Children":[{"Type":"NodeText","Data":"拦截器的执行流程"}]}]}]},{"ID":"20241015201894-hcsbeyv","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201894-hcsbeyv","updated":"20241015201894"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5.2.1 拦截路径"}]},{"ID":"20241015201895-dq9ny4f","Type":"NodeParagraph","Properties":{"id":"20241015201895-dq9ny4f","updated":"20241015201895"},"Children":[{"Type":"NodeText","Data":"首先我们先来看拦截器的拦截路径的配置，在注册配置拦截器的时候，我们要指定拦截器的拦截路径，通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"addPathPatterns(\u0026quot;要拦截路径\u0026quot;)"},{"Type":"NodeText","Data":"方法，就可以指定要拦截哪些资源。"}]},{"ID":"20241015201896-ohl385o","Type":"NodeParagraph","Properties":{"id":"20241015201896-ohl385o","updated":"20241015201896"},"Children":[{"Type":"NodeText","Data":"在入门程序中我们配置的是"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/**"},{"Type":"NodeText","Data":"，表示拦截所有资源，而在配置拦截器时，不仅可以指定要拦截哪些资源，还可以指定不拦截哪些资源，只需要调用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"excludePathPatterns(\u0026quot;不拦截路径\u0026quot;)"},{"Type":"NodeText","Data":"方法，指定哪些资源不需要拦截。"}]},{"ID":"20241015201897-rgsnkg4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201897-rgsnkg4","updated":"20241015201897"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration  \npublic class WebConfig implements WebMvcConfigurer {\n\n    //拦截器对象\n    @Autowired\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //注册自定义拦截器对象\n        registry.addInterceptor(loginCheckInterceptor)\n                .addPathPatterns(\"/**\")//设置拦截器拦截的请求路径（ /** 表示拦截所有请求）\n                .excludePathPatterns(\"/login\");//设置不拦截的请求路径\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201898-ubxe8tf","Type":"NodeParagraph","Properties":{"id":"20241015201898-ubxe8tf","updated":"20241015201898"},"Children":[{"Type":"NodeText","Data":"在拦截器中除了可以设置"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/**"},{"Type":"NodeText","Data":"拦截所有资源外，还有一些常见拦截路径设置："}]},{"ID":"20241015201899-2b9onyw","Type":"NodeTable","Data":"| 拦截路径  | 含义                 | 举例                                                |\n| --------- | -------------------- | --------------------------------------------------- |\n| /*        | 一级路径             | 能匹配/depts，/emps，/login，不能匹配 /depts/1      |\n| /**       | 任意级路径           | 能匹配/depts，/depts/1，/depts/1/2                  |\n| /depts/*  | /depts下的一级路径   | 能匹配/depts/1，不能匹配/depts/1/2，/depts          |\n| /depts/** | /depts下的任意级路径 | 能匹配/depts，/depts/1，/depts/1/2，不能匹配/emps/1 |","TableAligns":[0,0,0],"Properties":{"id":"20241015201899-2b9onyw","updated":"20241015201899"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"拦截路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"含义"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"举例"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/*"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"一级路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能匹配/depts，/emps，/login，不能匹配 /depts/1"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/**"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"任意级路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能匹配/depts，/depts/1，/depts/1/2"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/depts/*"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/depts下的一级路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能匹配/depts/1，不能匹配/depts/1/2，/depts"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/depts/**"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"/depts下的任意级路径"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能匹配/depts，/depts/1，/depts/1/2，不能匹配/emps/1"}]}]}]},{"ID":"20241015201900-dc0ay42","Type":"NodeParagraph","Properties":{"id":"20241015201900-dc0ay42","updated":"20241015201900"},"Children":[{"Type":"NodeText","Data":"下面主要来演示下"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/**"},{"Type":"NodeText","Data":"与"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/*"},{"Type":"NodeText","Data":"的区别："}]},{"ID":"20241015201901-fquajn4","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201901-fquajn4","updated":"20241015201901"},"Children":[{"ID":"20241015201902-siuh52d","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201902-siuh52d","updated":"20241015201902"},"Children":[{"ID":"20241015201903-mqb3nne","Type":"NodeParagraph","Properties":{"id":"20241015201903-mqb3nne","updated":"20241015201903"},"Children":[{"Type":"NodeText","Data":"修改拦截器配置，把拦截路径设置为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/*"}]}]}]},{"ID":"20241015201904-amofaf9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201904-amofaf9","updated":"20241015201904"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration \npublic class WebConfig implements WebMvcConfigurer {\n\n    //拦截器对象\n    @Autowired\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n       //注册自定义拦截器对象\n        registry.addInterceptor(loginCheckInterceptor)\n                .addPathPatterns(\"/*\")\n                .excludePathPatterns(\"/login\");//设置不拦截的请求路径\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201905-8fo0ngr","Type":"NodeParagraph","Properties":{"id":"20241015201905-8fo0ngr","updated":"20241015201905"},"Children":[{"Type":"NodeText","Data":"使用postman测试：http://localhost:8080/emps/1"}]},{"ID":"20241015201906-evanzr3","Type":"NodeParagraph","Properties":{"id":"20241015201906-evanzr3","updated":"20241015201906"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107111525558","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107111525558-20241015202541-vlmbn99.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201907-dsji0rf","Type":"NodeParagraph","Properties":{"id":"20241015201907-dsji0rf","updated":"20241015201907"},"Children":[{"Type":"NodeText","Data":"控制台没有输出拦截器中的日志信息，说明"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/*"},{"Type":"NodeText","Data":"没有匹配到拦截路径"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/emp/1"},{"Type":"NodeText","Data":" 。"}]},{"ID":"20241015201908-2m4ejon","Type":"NodeParagraph","Properties":{"id":"20241015201908-2m4ejon","updated":"20241015201908"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107111812963","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107111812963-20241015202541-e5lleb2.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201909-1cg4y0w","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015201909-1cg4y0w","updated":"20241015201909"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"##### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5.2.2 执行流程"}]},{"ID":"20241015201910-m2rd81q","Type":"NodeParagraph","Properties":{"id":"20241015201910-m2rd81q","updated":"20241015201910"},"Children":[{"Type":"NodeText","Data":"介绍完拦截路径的配置之后，接下来我们再来介绍拦截器的执行流程。通过执行流程，大家就能够清晰的知道过滤器与拦截器的执行时机。"}]},{"ID":"20241015201911-2u3n025","Type":"NodeParagraph","Properties":{"id":"20241015201911-2u3n025","updated":"20241015201911"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107112136151","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107112136151-20241015202541-kthnscq.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201912-esyo9gs","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201912-esyo9gs","updated":"20241015201912"},"Children":[{"ID":"20241015201913-dn0leil","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201913-dn0leil","updated":"20241015201913"},"Children":[{"ID":"20241015201914-odxsy0u","Type":"NodeParagraph","Properties":{"id":"20241015201914-odxsy0u","updated":"20241015201914"},"Children":[{"Type":"NodeText","Data":"当我们打开浏览器来访问部署在web服务器当中的web应用时，此时我们所定义的过滤器会拦截到这次请求。拦截到这次请求之后，它会先执行放行前的逻辑，然后再执行放行操作。而由于我们当前是基于springboot开发的，所以放行之后是进入到了spring的环境当中，也就是要来访问我们所定义的controller当中的接口方法。"}]}]},{"ID":"20241015201915-4cpi27r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201915-4cpi27r","updated":"20241015201915"},"Children":[{"ID":"20241015201916-h1o9z5s","Type":"NodeParagraph","Properties":{"id":"20241015201916-h1o9z5s","updated":"20241015201916"},"Children":[{"Type":"NodeText","Data":"Tomcat并不识别所编写的Controller程序，但是它识别Servlet程序，所以在Spring的Web环境中提供了一个非常核心的Servlet：DispatcherServlet（前端控制器），所有请求都会先进行到DispatcherServlet，再将请求转给Controller。"}]}]},{"ID":"20241015201917-r1z7tus","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201917-r1z7tus","updated":"20241015201917"},"Children":[{"ID":"20241015201918-dfiecog","Type":"NodeParagraph","Properties":{"id":"20241015201918-dfiecog","updated":"20241015201918"},"Children":[{"Type":"NodeText","Data":"当我们定义了拦截器后，会在执行Controller的方法之前，请求被拦截器拦截住。执行"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"preHandle()"},{"Type":"NodeText","Data":"方法，这个方法执行完成后需要返回一个布尔类型的值，如果返回true，就表示放行本次操作，才会继续访问controller中的方法；如果返回false，则不会放行（controller中的方法也不会执行）。"}]}]},{"ID":"20241015201919-7t7wh4k","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201919-7t7wh4k","updated":"20241015201919"},"Children":[{"ID":"20241015201920-pzzff5g","Type":"NodeParagraph","Properties":{"id":"20241015201920-pzzff5g","updated":"20241015201920"},"Children":[{"Type":"NodeText","Data":"在controller当中的方法执行完毕之后，再回过来执行"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"postHandle()"},{"Type":"NodeText","Data":"这个方法以及"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"afterCompletion()"},{"Type":"NodeText","Data":" 方法，然后再返回给DispatcherServlet，最终再来执行过滤器当中放行后的这一部分逻辑的逻辑。执行完毕之后，最终给浏览器响应数据。"}]}]}]},{"ID":"20241015201921-ro4a5z1","Type":"NodeParagraph","Properties":{"id":"20241015201921-ro4a5z1","updated":"20241015201921"},"Children":[{"Type":"NodeText","Data":"接下来我们就来演示下过滤器和拦截器同时存在的执行流程："}]},{"ID":"20241015201922-sgi5uaa","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201922-sgi5uaa","updated":"20241015201922"},"Children":[{"ID":"20241015201923-2cr8z8f","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201923-2cr8z8f","updated":"20241015201923"},"Children":[{"ID":"20241015201924-c1qbtyb","Type":"NodeParagraph","Properties":{"id":"20241015201924-c1qbtyb","updated":"20241015201924"},"Children":[{"Type":"NodeText","Data":"开启LoginCheckInterceptor拦截器"}]}]}]},{"ID":"20241015201925-k33313x","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201925-k33313x","updated":"20241015201925"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Component\npublic class LoginCheckInterceptor implements HandlerInterceptor {\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(\"preHandle .... \");\n        \n        return true; //true表示放行\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        System.out.println(\"postHandle ... \");\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        System.out.println(\"afterCompletion .... \");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201926-lakvygl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201926-lakvygl","updated":"20241015201926"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration  \npublic class WebConfig implements WebMvcConfigurer {\n\n    //拦截器对象\n    @Autowired\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //注册自定义拦截器对象\n        registry.addInterceptor(loginCheckInterceptor)\n                .addPathPatterns(\"/**\")//拦截所有请求\n                .excludePathPatterns(\"/login\");//不拦截登录请求\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201927-1tlwlgq","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201927-1tlwlgq","updated":"20241015201927"},"Children":[{"ID":"20241015201928-qc04iy7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201928-qc04iy7","updated":"20241015201928"},"Children":[{"ID":"20241015201929-9rp2rjk","Type":"NodeParagraph","Properties":{"id":"20241015201929-9rp2rjk","updated":"20241015201929"},"Children":[{"Type":"NodeText","Data":"开启DemoFilter过滤器"}]}]}]},{"ID":"20241015201930-11s73f8","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201930-11s73f8","updated":"20241015201930"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@WebFilter(urlPatterns = \"/*\") \npublic class DemoFilter implements Filter {\n    @Override\n    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {\n        System.out.println(\"DemoFilter   放行前逻辑.....\");\n\n        //放行请求\n        filterChain.doFilter(servletRequest,servletResponse);\n\n        System.out.println(\"DemoFilter   放行后逻辑.....\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201931-xpmlyar","Type":"NodeParagraph","Properties":{"id":"20241015201931-xpmlyar","updated":"20241015201931"},"Children":[{"Type":"NodeText","Data":"重启SpringBoot服务后，清空日志，打开Postman，测试查询部门："}]},{"ID":"20241015201932-i52y4nn","Type":"NodeParagraph","Properties":{"id":"20241015201932-i52y4nn","updated":"20241015201932"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107113653871","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107113653871-20241015202541-bmiz4pw.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201933-erfku2j","Type":"NodeParagraph","Properties":{"id":"20241015201933-erfku2j","updated":"20241015201933"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107114008004","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107114008004-20241015202541-98hi1gn.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201934-h6v1xkm","Type":"NodeParagraph","Properties":{"id":"20241015201934-h6v1xkm","updated":"20241015201934"},"Children":[{"Type":"NodeText","Data":"以上就是拦截器的执行流程。通过执行流程分析，大家应该已经清楚了过滤器和拦截器之间的区别，其实它们之间的区别主要是两点："}]},{"ID":"20241015201935-s8tc8by","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201935-s8tc8by","updated":"20241015201935"},"Children":[{"ID":"20241015201936-mgk28iu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201936-mgk28iu","updated":"20241015201936"},"Children":[{"ID":"20241015201937-bh1oigw","Type":"NodeParagraph","Properties":{"id":"20241015201937-bh1oigw","updated":"20241015201937"},"Children":[{"Type":"NodeText","Data":"接口规范不同：过滤器需要实现Filter接口，而拦截器需要实现HandlerInterceptor接口。"}]}]},{"ID":"20241015201938-dil4qxy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201938-dil4qxy","updated":"20241015201938"},"Children":[{"ID":"20241015201939-e5j8ey9","Type":"NodeParagraph","Properties":{"id":"20241015201939-e5j8ey9","updated":"20241015201939"},"Children":[{"Type":"NodeText","Data":"拦截范围不同：过滤器Filter会拦截所有的资源，而Interceptor只会拦截Spring环境中的资源。"}]}]}]},{"ID":"20241015201940-or1c18g","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015201940-or1c18g","updated":"20241015202646"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2.5.3 登录校验- Interceptor"}]},{"ID":"20241015201941-3l9emv3","Type":"NodeParagraph","Properties":{"id":"20241015201941-3l9emv3","updated":"20241015201941"},"Children":[{"Type":"NodeText","Data":"讲解完了拦截器的基本操作之后，接下来我们需要完成最后一步操作：通过拦截器来完成案例当中的登录校验功能。"}]},{"ID":"20241015201942-si1d1tt","Type":"NodeParagraph","Properties":{"id":"20241015201942-si1d1tt","updated":"20241015201942"},"Children":[{"Type":"NodeText","Data":"登录校验的业务逻辑以及操作步骤我们前面已经分析过了，和登录校验Filter过滤器当中的逻辑是完全一致的。现在我们只需要把这个技术方案由原来的过滤器换成拦截器interceptor就可以了。"}]},{"ID":"20241015201943-xb756l5","Type":"NodeParagraph","Properties":{"id":"20241015201943-xb756l5","updated":"20241015201943"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"登录校验拦截器"}]},{"ID":"20241015201944-qwda447","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201944-qwda447","updated":"20241015201944"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"//自定义拦截器\n@Component //当前拦截器对象由Spring创建和管理\n@Slf4j\npublic class LoginCheckInterceptor implements HandlerInterceptor {\n    //前置方式\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(\"preHandle .... \");\n        //1.获取请求url\n        //2.判断请求url中是否包含login，如果包含，说明是登录操作，放行\n\n        //3.获取请求头中的令牌（token）\n        String token = request.getHeader(\"token\");\n        log.info(\"从请求头中获取的令牌：{}\",token);\n\n        //4.判断令牌是否存在，如果不存在，返回错误结果（未登录）\n        if(!StringUtils.hasLength(token)){\n            log.info(\"Token不存在\");\n\n            //创建响应结果对象\n            Result responseResult = Result.error(\"NOT_LOGIN\");\n            //把Result对象转换为JSON格式字符串 (fastjson是阿里巴巴提供的用于实现对象和json的转换工具类)\n            String json = JSONObject.toJSONString(responseResult);\n            //设置响应头（告知浏览器：响应的数据类型为json、响应的数据编码表为utf-8）\n            response.setContentType(\"application/json;charset=utf-8\");\n            //响应\n            response.getWriter().write(json);\n\n            return false;//不放行\n        }\n\n        //5.解析token，如果解析失败，返回错误结果（未登录）\n        try {\n            JwtUtils.parseJWT(token);\n        }catch (Exception e){\n            log.info(\"令牌解析失败!\");\n\n            //创建响应结果对象\n            Result responseResult = Result.error(\"NOT_LOGIN\");\n            //把Result对象转换为JSON格式字符串 (fastjson是阿里巴巴提供的用于实现对象和json的转换工具类)\n            String json = JSONObject.toJSONString(responseResult);\n            //设置响应头\n            response.setContentType(\"application/json;charset=utf-8\");\n            //响应\n            response.getWriter().write(json);\n\n            return false;\n        }\n\n        //6.放行\n        return true;\n    }\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201945-gtfl1xz","Type":"NodeParagraph","Properties":{"id":"20241015201945-gtfl1xz","updated":"20241015201945"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"注册配置拦截器"}]},{"ID":"20241015201946-hns8odl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015201946-hns8odl","updated":"20241015201946"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration  \npublic class WebConfig implements WebMvcConfigurer {\n    //拦截器对象\n    @Autowired\n    private LoginCheckInterceptor loginCheckInterceptor;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n       //注册自定义拦截器对象\n        registry.addInterceptor(loginCheckInterceptor)\n                .addPathPatterns(\"/**\")\n                .excludePathPatterns(\"/login\");\n    }\n}\n\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015201947-rfne70s","Type":"NodeParagraph","Properties":{"id":"20241015201947-rfne70s","updated":"20241015201947"},"Children":[{"Type":"NodeText","Data":"登录校验的拦截器编写完成后，接下来我们就可以重新启动服务来做一个测试： （"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"关闭登录校验Filter过滤器"},{"Type":"NodeText","Data":"）"}]},{"ID":"20241015201948-98p4veu","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201948-98p4veu","updated":"20241015202646"},"Children":[{"ID":"20241015201949-8aptu5s","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201949-8aptu5s","updated":"20241015201949"},"Children":[{"ID":"20241015201950-3pi68bv","Type":"NodeParagraph","Properties":{"id":"20241015201950-3pi68bv","updated":"20241015201950"},"Children":[{"Type":"NodeText","Data":"测试1：未登录是否可以访问部门管理页面"}]},{"ID":"20241015201951-k7yaf1f","Type":"NodeParagraph","Properties":{"id":"20241015201951-k7yaf1f","updated":"20241015201951"},"Children":[{"Type":"NodeText","Data":"首先关闭浏览器，重新打开浏览器，在地址栏中输入：http://localhost:9528/#/system/dept"}]},{"ID":"20241015201952-n4nz538","Type":"NodeParagraph","Properties":{"id":"20241015201952-n4nz538","updated":"20241015201952"},"Children":[{"Type":"NodeText","Data":"由于用户没有登录，校验机制返回错误信息，前端页面根据返回的错误信息结果，自动跳转到登录页面了"}]},{"ID":"20241015201953-rhuqy7b","Type":"NodeParagraph","Properties":{"id":"20241015201953-rhuqy7b","updated":"20241015201953"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230105085212629","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230105085212629-20241015202541-1ykkmvq.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]}]},{"ID":"20241015201954-jr073iu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201954-jr073iu","updated":"20241015202646"},"Children":[{"ID":"20241015201955-ysi1kaj","Type":"NodeParagraph","Properties":{"id":"20241015201955-ysi1kaj","updated":"20241015201955"},"Children":[{"Type":"NodeText","Data":"测试2：先进行登录操作，再访问部门管理页面"}]},{"ID":"20241015201956-982b0go","Type":"NodeParagraph","Properties":{"id":"20241015201956-982b0go","updated":"20241015201956"},"Children":[{"Type":"NodeText","Data":"登录校验成功之后，可以正常访问相关业务操作页面"}]},{"ID":"20241015201957-0917uqo","Type":"NodeParagraph","Properties":{"id":"20241015201957-0917uqo","updated":"20241015202646"},"Children":[{"Type":"NodeText","Data":"​"},{"Type":"NodeImage","Data":"span","Children":[{"Type":"NodeBang"},{"Type":"NodeOpenBracket"},{"Type":"NodeLinkText","Data":"image-20230107102922550"},{"Type":"NodeCloseBracket"},{"Type":"NodeOpenParen"},{"Type":"NodeLinkDest","Data":"assets/image-20230107102922550-20241015202541-6uzujiz.png"},{"Type":"NodeCloseParen"}]},{"Type":"NodeText","Data":"​"}]}]}]},{"ID":"20241015201958-g1wesmz","Type":"NodeParagraph","Properties":{"id":"20241015201958-g1wesmz","updated":"20241015201958"},"Children":[{"Type":"NodeText","Data":"到此我们也就验证了所开发的登录校验的拦截器也是没问题的。登录校验的过滤器和拦截器，我们只需要使用其中的一种就可以了。"}]},{"ID":"20241015201959-s116h6f","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015201959-s116h6f","updated":"20241015201959"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. 异常处理"}]},{"ID":"20241015201960-1nmryxr","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201960-1nmryxr","updated":"20241015201960"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.1 当前问题"}]},{"ID":"20241015201961-13f190j","Type":"NodeParagraph","Properties":{"id":"20241015201961-13f190j","updated":"20241015201961"},"Children":[{"Type":"NodeText","Data":"登录功能和登录校验功能我们都实现了，下面我们学习下今天最后一块技术点：异常处理。首先我们先来看一下系统出现异常之后会发生什么现象，再来介绍异常处理的方案。"}]},{"ID":"20241015201962-zf5ifgf","Type":"NodeParagraph","Properties":{"id":"20241015201962-zf5ifgf","updated":"20241015201962"},"Children":[{"Type":"NodeText","Data":"我们打开浏览器，访问系统中的新增部门操作，系统中已经有了 \"就业部\" 这个部门，我们再来增加一个就业部，看看会发生什么现象。"}]},{"ID":"20241015201963-9li0bbc","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cimg src=\"assets/image-20230112125651073.png\" alt=\"image-20230112125651073\" style=\"zoom: 80%;\" /\u003e\n\u003c/div\u003e","HtmlBlockType":7,"Properties":{"id":"20241015201963-9li0bbc","updated":"20241015201963"}},{"ID":"20241015201964-8i2f79m","Type":"NodeParagraph","Properties":{"id":"20241015201964-8i2f79m","updated":"20241015201964"},"Children":[{"Type":"NodeText","Data":"点击确定之后，窗口关闭了，页面没有任何反应，就业部也没有添加上。 而此时，大家会发现，网络请求报错了。"}]},{"ID":"20241015201965-lg2rn68","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cimg src=\"assets/image-20230112125737863.png\" alt=\"image-20230112125737863\" style=\"zoom:80%;\" /\u003e\n\u003c/div\u003e","HtmlBlockType":7,"Properties":{"id":"20241015201965-lg2rn68","updated":"20241015201965"}},{"ID":"20241015201966-5zcqnf2","Type":"NodeParagraph","Properties":{"id":"20241015201966-5zcqnf2","updated":"20241015201966"},"Children":[{"Type":"NodeText","Data":"状态码为500，表示服务器端异常，我们打开idea，来看一下，服务器端出了什么问题。"}]},{"ID":"20241015201967-jlshjh2","Type":"NodeParagraph","Properties":{"id":"20241015201967-jlshjh2","updated":"20241015201967"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112125826602","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112125826602-20241015202541-2zso7p9.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201968-ra5gyo4","Type":"NodeParagraph","Properties":{"id":"20241015201968-ra5gyo4","updated":"20241015201968"},"Children":[{"Type":"NodeText","Data":"上述错误信息的含义是，dept部门表的name字段的值 就业部 重复了，因为在数据库表dept中已经有了就业部，我们之前设计这张表时，为name字段建议了唯一约束，所以该字段的值是不能重复的。"}]},{"ID":"20241015201969-ozpqf8x","Type":"NodeParagraph","Properties":{"id":"20241015201969-ozpqf8x","updated":"20241015201969"},"Children":[{"Type":"NodeText","Data":"而当我们再添加就业部，这个部门时，就违反了唯一约束，此时就会报错。"}]},{"ID":"20241015201970-d4jobir","Type":"NodeParagraph","Properties":{"id":"20241015201970-d4jobir","updated":"20241015201970"},"Children":[{"Type":"NodeText","Data":"我们来看一下出现异常之后，最终服务端给前端响应回来的数据长什么样。"}]},{"ID":"20241015201971-uahorx5","Type":"NodeParagraph","Properties":{"id":"20241015201971-uahorx5","updated":"20241015201971"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112130253486","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112130253486-20241015202541-5jwm0l9.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201972-5g51rw0","Type":"NodeParagraph","Properties":{"id":"20241015201972-5g51rw0","updated":"20241015201972"},"Children":[{"Type":"NodeText","Data":"响应回来的数据是一个JSON格式的数据。但这种JSON格式的数据还是我们开发规范当中所提到的统一响应结果Result吗？显然并不是。由于返回的数据不符合开发规范，所以前端并不能解析出响应的JSON数据。"}]},{"ID":"20241015201973-7pbz6sh","Type":"NodeParagraph","Properties":{"id":"20241015201973-7pbz6sh","updated":"20241015201973"},"Children":[{"Type":"NodeText","Data":"接下来我们需要思考的是出现异常之后，当前案例项目的异常是怎么处理的？"}]},{"ID":"20241015201974-ndy08ka","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201974-ndy08ka","updated":"20241015201974"},"Children":[{"ID":"20241015201975-3vevhux","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201975-3vevhux","updated":"20241015201975"},"Children":[{"ID":"20241015201976-bs6tdd5","Type":"NodeParagraph","Properties":{"id":"20241015201976-bs6tdd5","updated":"20241015201976"},"Children":[{"Type":"NodeText","Data":"答案：没有做任何的异常处理"}]}]}]},{"ID":"20241015201977-ytbv0h0","Type":"NodeParagraph","Properties":{"id":"20241015201977-ytbv0h0","updated":"20241015201977"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107121909087","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107121909087-20241015202541-1ihvaho.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015201978-krvtygq","Type":"NodeParagraph","Properties":{"id":"20241015201978-krvtygq","updated":"20241015201978"},"Children":[{"Type":"NodeText","Data":"当我们没有做任何的异常处理时，我们三层架构处理异常的方案："}]},{"ID":"20241015201979-94lp43a","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201979-94lp43a","updated":"20241015201979"},"Children":[{"ID":"20241015201980-wzhbijm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201980-wzhbijm","updated":"20241015201980"},"Children":[{"ID":"20241015201981-bzm13wp","Type":"NodeParagraph","Properties":{"id":"20241015201981-bzm13wp","updated":"20241015201981"},"Children":[{"Type":"NodeText","Data":"Mapper接口在操作数据库的时候出错了，此时异常会往上抛(谁调用Mapper就抛给谁)，会抛给service。"}]}]},{"ID":"20241015201982-dpc0cfs","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201982-dpc0cfs","updated":"20241015201982"},"Children":[{"ID":"20241015201983-ipbli1d","Type":"NodeParagraph","Properties":{"id":"20241015201983-ipbli1d","updated":"20241015201983"},"Children":[{"Type":"NodeText","Data":"service 中也存在异常了，会抛给controller。"}]}]},{"ID":"20241015201984-fnqswxg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201984-fnqswxg","updated":"20241015201984"},"Children":[{"ID":"20241015201985-47rsa63","Type":"NodeParagraph","Properties":{"id":"20241015201985-47rsa63","updated":"20241015201985"},"Children":[{"Type":"NodeText","Data":"而在controller当中，我们也没有做任何的异常处理，所以最终异常会再往上抛。最终抛给框架之后，框架就会返回一个JSON格式的数据，里面封装的就是错误的信息，但是框架返回的JSON格式的数据并不符合我们的开发规范。"}]}]}]},{"ID":"20241015201986-6a0j9ka","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015201986-6a0j9ka","updated":"20241015201986"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.2 解决方案"}]},{"ID":"20241015201987-z8uznjb","Type":"NodeParagraph","Properties":{"id":"20241015201987-z8uznjb","updated":"20241015201987"},"Children":[{"Type":"NodeText","Data":"那么在三层构架项目中，出现了异常，该如何处理?"}]},{"ID":"20241015201988-9qemo30","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201988-9qemo30","updated":"20241015201988"},"Children":[{"ID":"20241015201989-nwufc3r","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201989-nwufc3r","updated":"20241015201989"},"Children":[{"ID":"20241015201990-2gs4j2s","Type":"NodeParagraph","Properties":{"id":"20241015201990-2gs4j2s","updated":"20241015201990"},"Children":[{"Type":"NodeText","Data":"方案一：在所有Controller的所有方法中进行try…catch处理"}]},{"ID":"20241015201991-iankk2t","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201991-iankk2t","updated":"20241015201991"},"Children":[{"ID":"20241015201992-587xwbw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201992-587xwbw","updated":"20241015201992"},"Children":[{"ID":"20241015201993-0lp5c2t","Type":"NodeParagraph","Properties":{"id":"20241015201993-0lp5c2t","updated":"20241015201993"},"Children":[{"Type":"NodeText","Data":"缺点：代码臃肿（不推荐）"}]}]}]}]},{"ID":"20241015201994-7h8jqiw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201994-7h8jqiw","updated":"20241015201994"},"Children":[{"ID":"20241015201995-3sspeo7","Type":"NodeParagraph","Properties":{"id":"20241015201995-3sspeo7","updated":"20241015201995"},"Children":[{"Type":"NodeText","Data":"方案二：全局异常处理器"}]},{"ID":"20241015201996-735dh2w","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201996-735dh2w","updated":"20241015201996"},"Children":[{"ID":"20241015201997-y4vlpuk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015201997-y4vlpuk","updated":"20241015201997"},"Children":[{"ID":"20241015201998-2usfdae","Type":"NodeParagraph","Properties":{"id":"20241015201998-2usfdae","updated":"20241015201998"},"Children":[{"Type":"NodeText","Data":"好处：简单、优雅（推荐）"}]}]}]}]}]},{"ID":"20241015201999-6imxggl","Type":"NodeParagraph","Properties":{"id":"20241015201999-6imxggl","updated":"20241015201999"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230107122904214","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230107122904214-20241015202541-gy141hl.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015202000-7vzq1en","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015202000-7vzq1en","updated":"20241015202000"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3.3 全局异常处理器"}]},{"ID":"20241015202001-nya90qh","Type":"NodeParagraph","Properties":{"id":"20241015202001-nya90qh","updated":"20241015202001"},"Children":[{"Type":"NodeText","Data":"我们该怎么样定义全局异常处理器？"}]},{"ID":"20241015202002-5trxsyj","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202002-5trxsyj","updated":"20241015202002"},"Children":[{"ID":"20241015202003-ni8b5qd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202003-ni8b5qd","updated":"20241015202003"},"Children":[{"ID":"20241015202004-qu2smqt","Type":"NodeParagraph","Properties":{"id":"20241015202004-qu2smqt","updated":"20241015202004"},"Children":[{"Type":"NodeText","Data":"定义全局异常处理器非常简单，就是定义一个类，在类上加上一个注解@RestControllerAdvice，加上这个注解就代表我们定义了一个全局异常处理器。"}]}]},{"ID":"20241015202005-tkek9d1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202005-tkek9d1","updated":"20241015202005"},"Children":[{"ID":"20241015202006-hngstcs","Type":"NodeParagraph","Properties":{"id":"20241015202006-hngstcs","updated":"20241015202006"},"Children":[{"Type":"NodeText","Data":"在全局异常处理器当中，需要定义一个方法来捕获异常，在这个方法上需要加上注解@ExceptionHandler。通过@ExceptionHandler注解当中的value属性来指定我们要捕获的是哪一类型的异常。"}]}]}]},{"ID":"20241015202007-hvab4my","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":126,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"fn5+","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"fn5+","Properties":{"id":"20241015202007-hvab4my","updated":"20241015202007"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@RestControllerAdvice\npublic class GlobalExceptionHandler {\n\n    //处理异常\n    @ExceptionHandler(Exception.class) //指定能够处理的异常类型\n    public Result ex(Exception e){\n        e.printStackTrace();//打印堆栈中的异常信息\n\n        //捕获到异常之后，响应一个标准的Result\n        return Result.error(\"对不起,操作失败,请联系管理员\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"~~~","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015202008-i0kg7r4","Type":"NodeBlockquote","Properties":{"id":"20241015202008-i0kg7r4","updated":"20241015202008"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015202009-l0j4cra","Type":"NodeParagraph","Properties":{"id":"20241015202009-l0j4cra","updated":"20241015202009"},"Children":[{"Type":"NodeText","Data":"@RestControllerAdvice = @ControllerAdvice + @ResponseBody"}]},{"ID":"20241015202010-s8mmc0d","Type":"NodeParagraph","Properties":{"id":"20241015202010-s8mmc0d","updated":"20241015202010"},"Children":[{"Type":"NodeText","Data":"处理异常的方法返回值会转换为json后再响应给前端"}]}]},{"ID":"20241015202011-1y5p86a","Type":"NodeParagraph","Properties":{"id":"20241015202011-1y5p86a","updated":"20241015202011"},"Children":[{"Type":"NodeText","Data":"重新启动SpringBoot服务，打开浏览器，再来测试一下添加部门这个操作，我们依然添加已存在的 \"就业部\" 这个部门："}]},{"ID":"20241015202012-gy28ujy","Type":"NodeParagraph","Properties":{"id":"20241015202012-gy28ujy","updated":"20241015202012"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112131232032","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112131232032-20241015202541-opfxelv.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015202013-xzn6jba","Type":"NodeParagraph","Properties":{"id":"20241015202013-xzn6jba","updated":"20241015202013"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"image-20230112131135272","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/image-20230112131135272-20241015202541-21iqvb0.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015202014-vh5idaz","Type":"NodeParagraph","Properties":{"id":"20241015202014-vh5idaz","updated":"20241015202014"},"Children":[{"Type":"NodeText","Data":"此时，我们可以看到，出现异常之后，异常已经被全局异常处理器捕获了。然后返回的错误信息，被前端程序正常解析，然后提示出了对应的错误提示信息。"}]},{"ID":"20241015202015-12eirc3","Type":"NodeParagraph","Properties":{"id":"20241015202015-12eirc3","updated":"20241015202015"},"Children":[{"Type":"NodeText","Data":"以上就是全局异常处理器的使用，主要涉及到两个注解："}]},{"ID":"20241015202016-dlslqor","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202016-dlslqor","updated":"20241015202016"},"Children":[{"ID":"20241015202017-i4pyx3m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202017-i4pyx3m","updated":"20241015202017"},"Children":[{"ID":"20241015202018-1wq6mrl","Type":"NodeParagraph","Properties":{"id":"20241015202018-1wq6mrl","updated":"20241015202018"},"Children":[{"Type":"NodeText","Data":"@RestControllerAdvice  //表示当前类为全局异常处理器"}]}]},{"ID":"20241015202019-53c5wnk","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015202019-53c5wnk","updated":"20241015202019"},"Children":[{"ID":"20241015202020-hp69ckl","Type":"NodeParagraph","Properties":{"id":"20241015202020-hp69ckl","updated":"20241015202020"},"Children":[{"Type":"NodeText","Data":"@ExceptionHandler  //指定可以捕获哪种类型的异常进行处理"}]}]}]}]}