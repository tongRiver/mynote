{"ID":"20241015175716-9ksp2xk","Spec":"1","Type":"NodeDocument","Properties":{"icon":"heima.jpg","id":"20241015175716-9ksp2xk","title":"Autowired的替代方案","type":"doc","updated":"20241015175754"},"Children":[{"ID":"20241015175739-13un8m8","Type":"NodeBlockquote","Properties":{"id":"20241015175739-13un8m8","updated":"20241015175739"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e"},{"ID":"20241015175739-wq2u3ua","Type":"NodeParagraph","Properties":{"id":"20241015175739-wq2u3ua","updated":"20241015175739"},"Children":[{"Type":"NodeText","Data":"视频直接看这个：【2024最新SpringCloud微服务开发与实战，java黑马商城项目微服务实战开发（涵盖MybatisPlus、Docker、MQ、ES、Redis高级等）】 【精准空降到 11:17】 "},{"Type":"NodeTextMark","TextMarkType":"a","TextMarkAHref":"https://www.bilibili.com/video/BV1S142197x7/?p=45\u0026amp;share_source=copy_web\u0026amp;vd_source=29909144aff7d2c1451e8d294e9a5437\u0026amp;t=677","TextMarkTextContent":"https://www.bilibili.com/video/BV1S142197x7/?p=45\u0026amp;share_source=copy_web\u0026amp;vd_source=29909144aff7d2c1451e8d294e9a5437\u0026amp;t=677"}]}]},{"ID":"20241015175739-06vbrui","Type":"NodeParagraph","Properties":{"id":"20241015175739-06vbrui","updated":"20241015175739"},"Children":[{"Type":"NodeText","Data":"替代方案是在构造函数中注入，但是我们又不想自己写构造函数，因此使用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"lombok"},{"Type":"NodeText","Data":"​生成的构造函数。而使用全部参数的构造函数太多了，因此我们在需要注入的成员变量前面加上"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"final"},{"Type":"NodeText","Data":"​，这样这些成员变量必须被初始化，可以采用"},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@RequiredArgsConstructor"},{"Type":"NodeText","Data":"​注解，初始化所有必要的成员变量。"}]},{"ID":"20241015175754-nig85le","Type":"NodeParagraph","Properties":{"id":"20241015175754-nig85le","updated":"20241015175754"}}]}