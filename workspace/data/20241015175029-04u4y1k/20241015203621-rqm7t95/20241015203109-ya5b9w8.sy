{"ID":"20241015203109-ya5b9w8","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241015203109-ya5b9w8","title":"Springboot技术","type":"doc","updated":"20241015203513"},"Children":[{"ID":"20241015203110-obyvgfz","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203110-obyvgfz","updated":"20241015203110"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"介绍Springboot"}]},{"ID":"20241015203111-0ghmwzc","Type":"NodeParagraph","Properties":{"id":"20241015203111-0ghmwzc","updated":"20241015203111"},"Children":[{"Type":"NodeText","Data":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#spring-%E5%8C%85%E5%90%AB%E7%9A%84%E6%A8%A1%E5%9D%97%E6%9C%89%E5%93%AA%E4%BA%9B"}]},{"ID":"20241015203112-bptqiql","Type":"NodeParagraph","Properties":{"id":"20241015203112-bptqiql","updated":"20241015203112"},"Children":[{"Type":"NodeText","Data":"啥是Spring？"}]},{"ID":"20241015203113-yz7royh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203113-yz7royh","updated":"20241015203113"},"Children":[{"ID":"20241015203114-jm8fa2u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203114-jm8fa2u","updated":"20241015203114"},"Children":[{"ID":"20241015203115-2753ghi","Type":"NodeParagraph","Properties":{"id":"20241015203115-2753ghi","updated":"20241015203115"},"Children":[{"Type":"NodeText","Data":"Spring 最核心的思想就是不重新造轮子，开箱即用，提高开发效率"}]}]},{"ID":"20241015203116-wrxr7vl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203116-wrxr7vl","updated":"20241015203116"},"Children":[{"ID":"20241015203117-urbwoyd","Type":"NodeParagraph","Properties":{"id":"20241015203117-urbwoyd","updated":"20241015203117"},"Children":[{"Type":"NodeText","Data":"Spring 就是 Java 生态的一个杀手级的应用框架"}]}]},{"ID":"20241015203118-t23t3s8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203118-t23t3s8","updated":"20241015203118"},"Children":[{"ID":"20241015203119-uhqr8pl","Type":"NodeParagraph","Properties":{"id":"20241015203119-uhqr8pl","updated":"20241015203119"},"Children":[{"Type":"NodeText","Data":"Spring 提供的核心功能主要是 IoC 和 AOP"}]}]}]},{"ID":"20241015203120-ffi5c23","Type":"NodeParagraph","Properties":{"id":"20241015203120-ffi5c23","updated":"20241015203120"},"Children":[{"Type":"NodeText","Data":"没问题，我来帮你理清这三者的关系。"}]},{"ID":"20241015203121-jsndxww","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203121-jsndxww","updated":"20241015203121"},"Children":[{"ID":"20241015203122-dxjwc5j","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203122-dxjwc5j","updated":"20241015203122"},"Children":[{"ID":"20241015203123-bz10udc","Type":"NodeParagraph","Properties":{"id":"20241015203123-bz10udc","updated":"20241015203123"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":"：这是一个开源的企业级应用框架，提供了一整套的解决方案，帮助开发者构建可维护、可扩展的Java应用。它的核心特性包括依赖注入（DI）和面向切面编程（AOP）。"}]}]},{"ID":"20241015203124-b1qhphw","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203124-b1qhphw","updated":"20241015203124"},"Children":[{"ID":"20241015203125-heqximb","Type":"NodeParagraph","Properties":{"id":"20241015203125-heqximb","updated":"20241015203125"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring MVC"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"这是Spring框架中web模块中的一个模块，专注于构建Web应用"},{"Type":"NodeText","Data":"。它实现了模型-视图-控制器（MVC）设计模式，帮助分离应用的不同部分（数据、用户界面和控制逻辑）。Spring MVC提供了丰富的功能，如请求映射、数据绑定和视图解析。"}]}]},{"ID":"20241015203126-umcgcuu","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203126-umcgcuu","updated":"20241015203126"},"Children":[{"ID":"20241015203127-3xox7c2","Type":"NodeParagraph","Properties":{"id":"20241015203127-3xox7c2","updated":"20241015203127"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Boot"},{"Type":"NodeText","Data":"：这是一个基于Spring框架的工具，用于简化Spring应用的开发。它通过"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"约定优于配置"},{"Type":"NodeText","Data":"的方式，自动配置应用所需的Spring组件，减少了开发者的配置工作。Spring Boot通常用于快速构建独立的、生产级的Spring应用，并提供了一些内嵌服务器（如Tomcat、Jetty）来简化部署过程。"}]}]}]},{"ID":"20241015203128-ui51s13","Type":"NodeParagraph","Properties":{"id":"20241015203128-ui51s13","updated":"20241015203128"},"Children":[{"Type":"NodeText","Data":"总结一下："}]},{"ID":"20241015203129-8bccnlw","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203129-8bccnlw","updated":"20241015203129"},"Children":[{"ID":"20241015203130-wodese4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203130-wodese4","updated":"20241015203130"},"Children":[{"ID":"20241015203131-wjfj9uh","Type":"NodeParagraph","Properties":{"id":"20241015203131-wjfj9uh","updated":"20241015203131"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":"是一个框架。"}]}]},{"ID":"20241015203132-hllv0de","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203132-hllv0de","updated":"20241015203132"},"Children":[{"ID":"20241015203133-rc2zypz","Type":"NodeParagraph","Properties":{"id":"20241015203133-rc2zypz","updated":"20241015203133"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring MVC"},{"Type":"NodeText","Data":"是Spring框架中的一个Web模块。"}]}]},{"ID":"20241015203134-38khznu","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203134-38khznu","updated":"20241015203134"},"Children":[{"ID":"20241015203135-rre3v0j","Type":"NodeParagraph","Properties":{"id":"20241015203135-rre3v0j","updated":"20241015203135"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Boot"},{"Type":"NodeText","Data":"是简化Spring应用开发的工具。"}]}]}]},{"ID":"20241015203136-7l3d4ki","Type":"NodeParagraph","Properties":{"id":"20241015203136-7l3d4ki","updated":"20241015203136"},"Children":[{"Type":"NodeText","Data":"希望这能帮助你更好地理解它们之间的关系！如果还有其他问题，欢迎继续问我。"}]},{"ID":"20241015203137-rwtuy73","Type":"NodeParagraph","Properties":{"id":"20241015203137-rwtuy73","updated":"20241015203137"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"Spring4.x主要模块","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/jvme0c60b4606711fc4a0b6faf03230247a-20241015204346-2f8xwfp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015203138-rozx8rp","Type":"NodeParagraph","Properties":{"id":"20241015203138-rozx8rp","updated":"20241015203138"},"Children":[{"Type":"NodeText","Data":"Spring框架包含多个模块，每个模块负责不同的功能。以下是一些主要的模块："}]},{"ID":"20241015203139-i7wiubd","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203139-i7wiubd","updated":"20241015203139"},"Children":[{"ID":"20241015203140-vfrq1qh","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203140-vfrq1qh","updated":"20241015203140"},"Children":[{"ID":"20241015203141-pycwg2q","Type":"NodeParagraph","Properties":{"id":"20241015203141-pycwg2q","updated":"20241015203141"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Core Container"},{"Type":"NodeText","Data":"：提供核心功能，包括依赖注入（DI）和Bean管理。"}]},{"ID":"20241015203142-bs6gcv7","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203142-bs6gcv7","updated":"20241015203142"},"Children":[{"ID":"20241015203143-skcyzjm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203143-skcyzjm","updated":"20241015203143"},"Children":[{"ID":"20241015203144-xhw4f98","Type":"NodeParagraph","Properties":{"id":"20241015203144-xhw4f98","updated":"20241015203144"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Beans"},{"Type":"NodeText","Data":"：处理Bean的定义和生命周期。"}]}]},{"ID":"20241015203145-8bi32eg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203145-8bi32eg","updated":"20241015203145"},"Children":[{"ID":"20241015203146-rtb1g7y","Type":"NodeParagraph","Properties":{"id":"20241015203146-rtb1g7y","updated":"20241015203146"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Core"},{"Type":"NodeText","Data":"：提供核心的容器功能。"}]}]},{"ID":"20241015203147-wop6yg1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203147-wop6yg1","updated":"20241015203147"},"Children":[{"ID":"20241015203148-3p0k53c","Type":"NodeParagraph","Properties":{"id":"20241015203148-3p0k53c","updated":"20241015203148"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Context"},{"Type":"NodeText","Data":"：为应用提供上下文支持，包括国际化、事件传播等。"}]}]},{"ID":"20241015203149-i6t2s5n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203149-i6t2s5n","updated":"20241015203149"},"Children":[{"ID":"20241015203150-741ekhk","Type":"NodeParagraph","Properties":{"id":"20241015203150-741ekhk","updated":"20241015203150"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Expression Language (SpEL)"},{"Type":"NodeText","Data":"：用于在Spring配置中进行表达式语言的处理。"}]}]}]}]},{"ID":"20241015203151-f6lmncf","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203151-f6lmncf","updated":"20241015203151"},"Children":[{"ID":"20241015203152-pujq3gt","Type":"NodeParagraph","Properties":{"id":"20241015203152-pujq3gt","updated":"20241015203152"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring AOP (Aspect-Oriented Programming)"},{"Type":"NodeText","Data":"：支持面向切面编程，可以定义横切关注点（如日志、事务等）。"}]}]},{"ID":"20241015203153-3l3jqd3","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203153-3l3jqd3","updated":"20241015203153"},"Children":[{"ID":"20241015203154-4400gqk","Type":"NodeParagraph","Properties":{"id":"20241015203154-4400gqk","updated":"20241015203154"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Data Access/Integration"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203155-c0xisds","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203155-c0xisds","updated":"20241015203155"},"Children":[{"ID":"20241015203156-8qvpnoi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203156-8qvpnoi","updated":"20241015203156"},"Children":[{"ID":"20241015203157-ysptaj1","Type":"NodeParagraph","Properties":{"id":"20241015203157-ysptaj1","updated":"20241015203157"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"JDBC"},{"Type":"NodeText","Data":"：简化JDBC操作。"}]}]},{"ID":"20241015203158-jahs8lq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203158-jahs8lq","updated":"20241015203158"},"Children":[{"ID":"20241015203159-lgzjdam","Type":"NodeParagraph","Properties":{"id":"20241015203159-lgzjdam","updated":"20241015203159"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"ORM"},{"Type":"NodeText","Data":"：支持多种对象关系映射框架（如Hibernate、JPA）。"}]}]},{"ID":"20241015203160-2qtbu5w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203160-2qtbu5w","updated":"20241015203160"},"Children":[{"ID":"20241015203161-e9t5hwl","Type":"NodeParagraph","Properties":{"id":"20241015203161-e9t5hwl","updated":"20241015203161"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Messaging"},{"Type":"NodeText","Data":"：支持与消息中间件的集成。"}]}]}]}]},{"ID":"20241015203162-t8yyo0k","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015203162-t8yyo0k","updated":"20241015203162"},"Children":[{"ID":"20241015203163-tx8khay","Type":"NodeParagraph","Properties":{"id":"20241015203163-tx8khay","updated":"20241015203163"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Web"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203164-htghl57","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203164-htghl57","updated":"20241015203164"},"Children":[{"ID":"20241015203165-x8jke58","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203165-x8jke58","updated":"20241015203165"},"Children":[{"ID":"20241015203166-ra9cw32","Type":"NodeParagraph","Properties":{"id":"20241015203166-ra9cw32","updated":"20241015203166"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Web"},{"Type":"NodeText","Data":"：提供Web应用的基本功能。"}]}]},{"ID":"20241015203167-2qwmgko","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203167-2qwmgko","updated":"20241015203167"},"Children":[{"ID":"20241015203168-yrv429s","Type":"NodeParagraph","Properties":{"id":"20241015203168-yrv429s","updated":"20241015203168"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Web MVC"},{"Type":"NodeText","Data":"：实现MVC架构，支持Web应用的开发。"}]}]},{"ID":"20241015203169-cgytvcw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203169-cgytvcw","updated":"20241015203169"},"Children":[{"ID":"20241015203170-g4loac7","Type":"NodeParagraph","Properties":{"id":"20241015203170-g4loac7","updated":"20241015203170"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Web WebSocket"},{"Type":"NodeText","Data":"：支持WebSocket的交互。"}]}]}]}]},{"ID":"20241015203171-gaeozz5","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20241015203171-gaeozz5","updated":"20241015203171"},"Children":[{"ID":"20241015203172-8so78b8","Type":"NodeParagraph","Properties":{"id":"20241015203172-8so78b8","updated":"20241015203172"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Security"},{"Type":"NodeText","Data":"：提供安全框架，支持认证和授权功能。"}]}]},{"ID":"20241015203173-c8s99k4","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20241015203173-c8s99k4","updated":"20241015203173"},"Children":[{"ID":"20241015203174-zqz3q54","Type":"NodeParagraph","Properties":{"id":"20241015203174-zqz3q54","updated":"20241015203174"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Test"},{"Type":"NodeText","Data":"：提供测试支持，帮助进行单元测试和集成测试。"}]}]},{"ID":"20241015203175-nkq8mr7","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20241015203175-nkq8mr7","updated":"20241015203175"},"Children":[{"ID":"20241015203176-cdyas92","Type":"NodeParagraph","Properties":{"id":"20241015203176-cdyas92","updated":"20241015203176"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Boot"},{"Type":"NodeText","Data":"（虽然是一个独立项目，但通常与Spring一起使用）：用于快速开发和配置Spring应用。"}]}]}]},{"ID":"20241015203177-yz4w453","Type":"NodeParagraph","Properties":{"id":"20241015203177-yz4w453","updated":"20241015203177"},"Children":[{"Type":"NodeText","Data":"这些模块相互独立又相互协作，帮助开发者构建功能丰富的Java应用。需要了解更多具体模块的功能吗？"}]},{"ID":"20241015203178-bodz6xj","Type":"NodeParagraph","Properties":{"id":"20241015203178-bodz6xj","updated":"20241015203178"},"Children":[{"Type":"NodeText","Data":"是的，没错！Spring MVC是Spring Web模块中的一个子模块，专门用于构建Web应用。它实现了模型-视图-控制器（MVC）设计模式，使得开发者能够更好地组织代码，分离不同的关注点。"}]},{"ID":"20241015203179-fca9e8n","Type":"NodeParagraph","Properties":{"id":"20241015203179-fca9e8n","updated":"20241015203179"},"Children":[{"Type":"NodeText","Data":"在Spring MVC中："}]},{"ID":"20241015203180-kbht7jd","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203180-kbht7jd","updated":"20241015203180"},"Children":[{"ID":"20241015203181-gl3w4v7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203181-gl3w4v7","updated":"20241015203181"},"Children":[{"ID":"20241015203182-ulgshnq","Type":"NodeParagraph","Properties":{"id":"20241015203182-ulgshnq","updated":"20241015203182"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"模型"},{"Type":"NodeText","Data":"（Model）负责处理应用的数据逻辑。"}]}]},{"ID":"20241015203183-j7w9a2j","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203183-j7w9a2j","updated":"20241015203183"},"Children":[{"ID":"20241015203184-tstwzi2","Type":"NodeParagraph","Properties":{"id":"20241015203184-tstwzi2","updated":"20241015203184"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"视图"},{"Type":"NodeText","Data":"（View）负责展示用户界面。"}]}]},{"ID":"20241015203185-3v6jn84","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203185-3v6jn84","updated":"20241015203185"},"Children":[{"ID":"20241015203186-4du4v34","Type":"NodeParagraph","Properties":{"id":"20241015203186-4du4v34","updated":"20241015203186"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"控制器"},{"Type":"NodeText","Data":"（Controller）处理用户输入，协调模型和视图之间的交互。"}]}]}]},{"ID":"20241015203187-8b9vsjn","Type":"NodeParagraph","Properties":{"id":"20241015203187-8b9vsjn","updated":"20241015203187"},"Children":[{"Type":"NodeText","Data":"Spring MVC提供了许多功能，例如请求映射、数据绑定、验证、视图解析等，使得Web应用的开发更加高效和灵活。如果你有兴趣深入了解某个具体方面，随时可以问我！"}]},{"ID":"20241015203188-fo17qjy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203188-fo17qjy","updated":"20241015203188"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"MVC，前后端分离"}]},{"ID":"20241015203189-bwrjkkd","Type":"NodeParagraph","Properties":{"id":"20241015203189-bwrjkkd","updated":"20241015203189"},"Children":[{"Type":"NodeText","Data":"MVC是“模型-视图-控制器”（Model-View-Controller）的缩写，是一种设计模式，主要用于构建用户界面。它将应用程序分为三个核心部分，以实现关注点分离，提高代码的可维护性和可扩展性。"}]},{"ID":"20241015203190-zu95750","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203190-zu95750","updated":"20241015203190"},"Children":[{"ID":"20241015203191-nx5cykf","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203191-nx5cykf","updated":"20241015203191"},"Children":[{"ID":"20241015203192-alooeux","Type":"NodeParagraph","Properties":{"id":"20241015203192-alooeux","updated":"20241015203192"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"模型（Model）"},{"Type":"NodeText","Data":"：负责业务逻辑和数据处理，代表应用程序的核心数据和规则。它与数据库交互，处理数据的存储和检索。"}]}]},{"ID":"20241015203193-p1py8gj","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203193-p1py8gj","updated":"20241015203193"},"Children":[{"ID":"20241015203194-6j8otod","Type":"NodeParagraph","Properties":{"id":"20241015203194-6j8otod","updated":"20241015203194"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"视图（View）"},{"Type":"NodeText","Data":"：负责显示数据（模型）给用户，处理用户界面的展现和用户的输入。视图通常会根据模型的状态来更新显示。"}]}]},{"ID":"20241015203195-izmu3cz","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203195-izmu3cz","updated":"20241015203195"},"Children":[{"ID":"20241015203196-aupfoe2","Type":"NodeParagraph","Properties":{"id":"20241015203196-aupfoe2","updated":"20241015203196"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"控制器（Controller）"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"作为模型和视图之间的中介"},{"Type":"NodeText","Data":"，处理用户输入并调用相应的模型和视图进行响应。控制器接收用户的操作，更新模型，并根据需要选择相应的视图进行展示。"}]}]}]},{"ID":"20241015203197-7voddbd","Type":"NodeParagraph","Properties":{"id":"20241015203197-7voddbd","updated":"20241015203197"},"Children":[{"Type":"NodeText","Data":"Controller、Service 和 Mapper 的关系："}]},{"ID":"20241015203198-8t1ows2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203198-8t1ows2","updated":"20241015203198"},"Children":[{"ID":"20241015203199-2m186tl","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203199-2m186tl","updated":"20241015203199"},"Children":[{"ID":"20241015203200-bq7t5me","Type":"NodeParagraph","Properties":{"id":"20241015203200-bq7t5me","updated":"20241015203200"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Controller"},{"Type":"NodeText","Data":"：在MVC中，控制器处理用户请求，负责与用户交互，调用相应的服务。"}]}]},{"ID":"20241015203201-sde788i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203201-sde788i","updated":"20241015203201"},"Children":[{"ID":"20241015203202-orusqww","Type":"NodeParagraph","Properties":{"id":"20241015203202-orusqww","updated":"20241015203202"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Service"},{"Type":"NodeText","Data":"：通常用于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"封装业务逻辑，处理更复杂的业务操作"},{"Type":"NodeText","Data":"。服务层通常"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"会调用一个或多个Mapper"},{"Type":"NodeText","Data":"（数据访问对象）来执行数据库操作。"}]}]},{"ID":"20241015203203-lqu3x6p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203203-lqu3x6p","updated":"20241015203203"},"Children":[{"ID":"20241015203204-fae9yog","Type":"NodeParagraph","Properties":{"id":"20241015203204-fae9yog","updated":"20241015203204"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Mapper"},{"Type":"NodeText","Data":"：主要负责与数据库的直接交互，执行SQL语句，进行数据的增删改查。Mapper通常不包含业务逻辑，专注于数据的持久化。"}]}]}]},{"ID":"20241015203205-1tiabop","Type":"NodeParagraph","Properties":{"id":"20241015203205-1tiabop","updated":"20241015203205"},"Children":[{"Type":"NodeText","Data":"总结来说，MVC模式将应用程序的不同职责分开，控制器处理请求，服务封装业务逻辑，而Mapper负责与数据库交互，这样可以使代码结构更加清晰、可维护。"}]},{"ID":"20241015203206-yob2r59","Type":"NodeBlockquote","Properties":{"id":"20241015203206-yob2r59","updated":"20241015203206"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015203207-mnycbyq","Type":"NodeParagraph","Properties":{"id":"20241015203207-mnycbyq","updated":"20241015203207"},"Children":[{"Type":"NodeText","Data":"Controller跟Service之间的关系"}]}]},{"ID":"20241015203208-qz2gig0","Type":"NodeParagraph","Properties":{"id":"20241015203208-qz2gig0","updated":"20241015203208"},"Children":[{"Type":"NodeText","Data":"在软件开发中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Controller"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Service"},{"Type":"NodeText","Data":" 之间的关系通常是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"多对多"},{"Type":"NodeText","Data":"，但这取决于具体的应用场景和设计方式。"}]},{"ID":"20241015203209-q740zec","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203209-q740zec","updated":"20241015203209"},"Children":[{"ID":"20241015203210-n0zrhhx","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203210-n0zrhhx","updated":"20241015203210"},"Children":[{"ID":"20241015203211-5g3fujc","Type":"NodeParagraph","Properties":{"id":"20241015203211-5g3fujc","updated":"20241015203211"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Controller"},{"Type":"NodeText","Data":"：负责处理用户请求（例如 HTTP 请求），从而决定应用程序的业务流程。"}]}]},{"ID":"20241015203212-sch1blw","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203212-sch1blw","updated":"20241015203212"},"Children":[{"ID":"20241015203213-1x1oaf7","Type":"NodeParagraph","Properties":{"id":"20241015203213-1x1oaf7","updated":"20241015203213"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Service"},{"Type":"NodeText","Data":"：封装了具体的业务逻辑，是处理业务需求的核心。"}]}]}]},{"ID":"20241015203214-honaesg","Type":"NodeParagraph","Properties":{"id":"20241015203214-honaesg","updated":"20241015203214"},"Children":[{"Type":"NodeText","Data":"通常情况下："}]},{"ID":"20241015203215-8kgi174","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203215-8kgi174","updated":"20241015203215"},"Children":[{"ID":"20241015203216-01xorsy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203216-01xorsy","updated":"20241015203216"},"Children":[{"ID":"20241015203217-v9b4gk9","Type":"NodeParagraph","Properties":{"id":"20241015203217-v9b4gk9","updated":"20241015203217"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一个 Controller 可以调用多个 Service"},{"Type":"NodeText","Data":"：因为一个 Controller 可能需要多个业务逻辑来完成复杂的操作。例如，处理用户登录请求时，可能需要调用认证服务、用户服务等。"}]}]},{"ID":"20241015203218-l2q9lwf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203218-l2q9lwf","updated":"20241015203218"},"Children":[{"ID":"20241015203219-wc7wrhg","Type":"NodeParagraph","Properties":{"id":"20241015203219-wc7wrhg","updated":"20241015203219"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"一个 Service 也可以被多个 Controller 调用"},{"Type":"NodeText","Data":"：因为某个业务逻辑可能是多个请求的通用部分。例如，用户服务可能在用户管理、订单管理等多个控制器中被调用。"}]}]}]},{"ID":"20241015203220-oqsc94m","Type":"NodeParagraph","Properties":{"id":"20241015203220-oqsc94m","updated":"20241015203220"},"Children":[{"Type":"NodeText","Data":"因此，Controller 和 Service 之间可以表现为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"多对多"},{"Type":"NodeText","Data":" 的关系。"}]},{"ID":"20241015203221-kt6m1ko","Type":"NodeParagraph","Properties":{"id":"20241015203221-kt6m1ko","updated":"20241015203221"},"Children":[{"Type":"NodeText","Data":"不过，具体的设计可以根据项目需求和架构风格不同而有所调整，比如采用单一职责原则（SRP），可以尽量减少控制器和服务之间复杂的依赖关系。"}]},{"ID":"20241015203222-o0x0jzb","Type":"NodeBlockquote","Properties":{"id":"20241015203222-o0x0jzb","updated":"20241015203222"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015203223-2c3m804","Type":"NodeParagraph","Properties":{"id":"20241015203223-2c3m804","updated":"20241015203223"},"Children":[{"Type":"NodeText","Data":"前后端分离的架构 \u0026 MVC"}]}]},{"ID":"20241015203224-2guhh5j","Type":"NodeParagraph","Properties":{"id":"20241015203224-2guhh5j","updated":"20241015203224"},"Children":[{"Type":"NodeText","Data":"前后端分离的架构与MVC有着密切的关系，但它们在设计和实现上有一些不同的侧重点。"}]},{"ID":"20241015203225-t192ac1","Type":"NodeParagraph","Properties":{"id":"20241015203225-t192ac1","updated":"20241015203225"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"前后端分离架构"}]},{"ID":"20241015203226-ak9dw49","Type":"NodeParagraph","Properties":{"id":"20241015203226-ak9dw49","updated":"20241015203226"},"Children":[{"Type":"NodeText","Data":"前后端分离是指将前端和后端的开发工作分开，前端负责用户界面的展示和用户交互，后端则专注于业务逻辑和数据处理。通常，前端通过API（如RESTful或GraphQL）与后端进行数据交互。"}]},{"ID":"20241015203227-xkt3yfm","Type":"NodeParagraph","Properties":{"id":"20241015203227-xkt3yfm","updated":"20241015203227"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"MVC与前后端分离的关系"}]},{"ID":"20241015203228-uiebh1b","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203228-uiebh1b","updated":"20241015203228"},"Children":[{"ID":"20241015203229-v1crk3b","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203229-v1crk3b","updated":"20241015203229"},"Children":[{"ID":"20241015203230-qmblb83","Type":"NodeParagraph","Properties":{"id":"20241015203230-qmblb83","updated":"20241015203230"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"前端MVC"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203231-wfu3t9e","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203231-wfu3t9e","updated":"20241015203231"},"Children":[{"ID":"20241015203232-dui2eyj","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203232-dui2eyj","updated":"20241015203232"},"Children":[{"ID":"20241015203233-7qe2ia8","Type":"NodeParagraph","Properties":{"id":"20241015203233-7qe2ia8","updated":"20241015203233"},"Children":[{"Type":"NodeText","Data":"在前端，常用的框架（如React、Vue、Angular等）往往也实现了类似MVC的概念，尽管具体实现方式不同。"}]}]},{"ID":"20241015203234-dwqgamv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203234-dwqgamv","updated":"20241015203234"},"Children":[{"ID":"20241015203235-0l1ormf","Type":"NodeParagraph","Properties":{"id":"20241015203235-0l1ormf","updated":"20241015203235"},"Children":[{"Type":"NodeText","Data":"前端代码会负责视图（View）部分，同时通过控制器（Controller）处理用户输入。"}]}]}]}]},{"ID":"20241015203236-r4moqp7","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203236-r4moqp7","updated":"20241015203236"},"Children":[{"ID":"20241015203237-zecv6dy","Type":"NodeParagraph","Properties":{"id":"20241015203237-zecv6dy","updated":"20241015203237"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"后端MVC"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203238-tyuqb8m","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203238-tyuqb8m","updated":"20241015203238"},"Children":[{"ID":"20241015203239-kmg0ovq","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203239-kmg0ovq","updated":"20241015203239"},"Children":[{"ID":"20241015203240-1nabh3t","Type":"NodeParagraph","Properties":{"id":"20241015203240-1nabh3t","updated":"20241015203240"},"Children":[{"Type":"NodeText","Data":"后端仍然可以使用MVC模式来组织代码，控制器处理API请求，模型进行数据操作，视图可以在某些情况下用于返回数据格式（如JSON），但这里的视图可能并不涉及用户界面的渲染。"}]}]}]}]}]},{"ID":"20241015203241-fx1ogy2","Type":"NodeParagraph","Properties":{"id":"20241015203241-fx1ogy2","updated":"20241015203241"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"总结"}]},{"ID":"20241015203242-pyt6w4l","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203242-pyt6w4l","updated":"20241015203242"},"Children":[{"ID":"20241015203243-1p837sz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203243-1p837sz","updated":"20241015203243"},"Children":[{"ID":"20241015203244-xsyzixp","Type":"NodeParagraph","Properties":{"id":"20241015203244-xsyzixp","updated":"20241015203244"},"Children":[{"Type":"NodeText","Data":"前后端分离强调了前端和后端的职责分离，允许独立开发和部署。"}]}]},{"ID":"20241015203245-6nptohg","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203245-6nptohg","updated":"20241015203245"},"Children":[{"ID":"20241015203246-rw1sor7","Type":"NodeParagraph","Properties":{"id":"20241015203246-rw1sor7","updated":"20241015203246"},"Children":[{"Type":"NodeText","Data":"MVC模式则是一种组织代码的方式，可以在前后端分离的架构中应用。"}]}]},{"ID":"20241015203247-9h2b4lf","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203247-9h2b4lf","updated":"20241015203247"},"Children":[{"ID":"20241015203248-p2cmrdb","Type":"NodeParagraph","Properties":{"id":"20241015203248-p2cmrdb","updated":"20241015203248"},"Children":[{"Type":"NodeText","Data":"在前后端分离的应用中，前端通常会使用某种MVC模式来处理用户界面，而后端则可能仍然使用MVC来处理业务逻辑和数据。"}]}]}]},{"ID":"20241015203249-r5dys01","Type":"NodeParagraph","Properties":{"id":"20241015203249-r5dys01","updated":"20241015203249"},"Children":[{"Type":"NodeText","Data":"通过前后端分离，团队可以更灵活地进行开发，提高了应用的可维护性和扩展性。"}]},{"ID":"20241015203250-3rrfz6b","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203250-3rrfz6b","updated":"20241015203250"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"IOC"}]},{"ID":"20241015203251-fjtxo9v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203251-fjtxo9v","updated":"20241015203251"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"IOC与DI"}]},{"ID":"20241015203252-r7mzow8","Type":"NodeParagraph","Properties":{"id":"20241015203252-r7mzow8","updated":"20241015203252"},"Children":[{"Type":"NodeText","Data":"https://mp.weixin.qq.com/s/mqaBDLzbVhpP_vqylx_i5A"}]},{"ID":"20241015203253-gqpkmkd","Type":"NodeParagraph","Properties":{"id":"20241015203253-gqpkmkd","updated":"20241015203253"},"Children":[{"Type":"NodeText","Data":"IOC：控制反转"}]},{"ID":"20241015203254-ad28fcm","Type":"NodeParagraph","Properties":{"id":"20241015203254-ad28fcm","updated":"20241015203254"},"Children":[{"Type":"NodeText","Data":"DI：依赖注入，是IOC的实现方式"}]},{"ID":"20241015203255-mbp39b5","Type":"NodeParagraph","Properties":{"id":"20241015203255-mbp39b5","updated":"20241015203255"},"Children":[{"Type":"NodeText","Data":"IoC（Inverse of Control:控制反转）是一种设计思想或者说是某种模式。这个设计思想就是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"将原本在程序中手动创建对象的控制权交给第三方比如 IoC 容器。"},{"Type":"NodeText","Data":" 对于我们常用的 Spring 框架来说， IoC 容器实际上就是个 Map（key，value）,Map 中存放的是各种对象。不过，IoC 在其他语言中也有应用，并非 Spring 特有。"}]},{"ID":"20241015203256-0sxnj7j","Type":"NodeParagraph","Properties":{"id":"20241015203256-0sxnj7j","updated":"20241015203256"},"Children":[{"Type":"NodeText","Data":"IoC 最常见以及最合理的实现方式叫做依赖注入（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"Dependency Injection"},{"Type":"NodeText","Data":"，简称 DI）。"}]},{"ID":"20241015203257-dw6czif","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203257-dw6czif","updated":"20241015203257"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"什么是IOC"}]},{"ID":"20241015203258-1qx2nvz","Type":"NodeParagraph","Properties":{"id":"20241015203258-1qx2nvz","updated":"20241015203258"},"Children":[{"Type":"NodeText","Data":"IoC （Inversion of Control ）即控制反转/反转控制。它是一种思想不是一个技术实现。描述的是：Java 开发领域对象的创建以及管理的问题。"}]},{"ID":"20241015203259-3o6d77l","Type":"NodeParagraph","Properties":{"id":"20241015203259-3o6d77l","updated":"20241015203259"},"Children":[{"Type":"NodeText","Data":"例如：现有类 A 依赖于类 B"}]},{"ID":"20241015203260-j8mwcq4","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203260-j8mwcq4","updated":"20241015203260"},"Children":[{"ID":"20241015203261-tatbdt1","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203261-tatbdt1","updated":"20241015203261"},"Children":[{"ID":"20241015203262-jag4l3n","Type":"NodeParagraph","Properties":{"id":"20241015203262-jag4l3n","updated":"20241015203262"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"传统的开发方式"},{"Type":"NodeText","Data":" ：往往是在类 A 中手动通过 new 关键字来 new 一个 B 的对象出来"}]}]},{"ID":"20241015203263-qxswaup","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203263-qxswaup","updated":"20241015203263"},"Children":[{"ID":"20241015203264-3n3y4uw","Type":"NodeParagraph","Properties":{"id":"20241015203264-3n3y4uw","updated":"20241015203264"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"使用 IoC 思想的开发方式"},{"Type":"NodeText","Data":" ：不通过 new 关键字来创建对象，而是通过 IoC 容器(Spring 框架) 来帮助我们实例化对象。我们需要哪个对象，直接从 IoC 容器里面去取即可。"}]}]}]},{"ID":"20241015203265-eq61m9r","Type":"NodeParagraph","Properties":{"id":"20241015203265-eq61m9r","updated":"20241015203265"},"Children":[{"Type":"NodeText","Data":"从以上两种开发方式的对比来看：我们 “丧失了一个权力” (创建、管理对象的权力)，从而也得到了一个好处（不用再考虑对象的创建、管理等一系列的事情）"}]},{"ID":"20241015203266-d0d2rpn","Type":"NodeParagraph","Properties":{"id":"20241015203266-d0d2rpn","updated":"20241015203266"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"为什么叫控制反转?"}]},{"ID":"20241015203267-11b1ln3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203267-11b1ln3","updated":"20241015203267"},"Children":[{"ID":"20241015203268-54msi4m","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203268-54msi4m","updated":"20241015203268"},"Children":[{"ID":"20241015203269-d4ierx0","Type":"NodeParagraph","Properties":{"id":"20241015203269-d4ierx0","updated":"20241015203269"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"控制"},{"Type":"NodeText","Data":" ：指的是对象创建（实例化、管理）的权力"}]}]},{"ID":"20241015203270-yvuv3sx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203270-yvuv3sx","updated":"20241015203270"},"Children":[{"ID":"20241015203271-dhobm7l","Type":"NodeParagraph","Properties":{"id":"20241015203271-dhobm7l","updated":"20241015203271"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"反转"},{"Type":"NodeText","Data":" ：控制权交给外部环境（IoC 容器）"}]}]}]},{"ID":"20241015203272-kz8gt5c","Type":"NodeParagraph","Properties":{"id":"20241015203272-kz8gt5c","updated":"20241015203272"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"IoC 图解","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/frc-365faceb5697f04f31399937c059c162-17269072586707-20241015204346-yg09vei.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015203273-y7c9llx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203273-y7c9llx","updated":"20241015203273"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"IOC解决了什么问题"}]},{"ID":"20241015203274-f7kxl8a","Type":"NodeParagraph","Properties":{"id":"20241015203274-f7kxl8a","updated":"20241015203274"},"Children":[{"Type":"NodeText","Data":"IoC 的思想就是两方之间不互相依赖，由第三方容器来管理相关资源。这样有什么好处呢？"}]},{"ID":"20241015203275-z1jdf79","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203275-z1jdf79","updated":"20241015203275"},"Children":[{"ID":"20241015203276-ho35qjy","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203276-ho35qjy","updated":"20241015203276"},"Children":[{"ID":"20241015203277-t981i2a","Type":"NodeParagraph","Properties":{"id":"20241015203277-t981i2a","updated":"20241015203277"},"Children":[{"Type":"NodeText","Data":"对象之间的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"耦合度或者说依赖程度降低"},{"Type":"NodeText","Data":"；"}]}]},{"ID":"20241015203278-wo5bawi","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203278-wo5bawi","updated":"20241015203278"},"Children":[{"ID":"20241015203279-ghfb5yk","Type":"NodeParagraph","Properties":{"id":"20241015203279-ghfb5yk","updated":"20241015203279"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"资源变的容易管理"},{"Type":"NodeText","Data":"；比如你用 Spring 容器提供的话很容易就可以实现一个单例。"}]}]}]},{"ID":"20241015203280-bmzu6as","Type":"NodeParagraph","Properties":{"id":"20241015203280-bmzu6as","updated":"20241015203280"},"Children":[{"Type":"NodeText","Data":"例如：现有一个针对 User 的操作，利用 Service 和 Dao 两层结构进行开发"}]},{"ID":"20241015203281-ntc10sb","Type":"NodeParagraph","Properties":{"id":"20241015203281-ntc10sb","updated":"20241015203281"},"Children":[{"Type":"NodeText","Data":"在没有使用 IoC 思想的情况下，Service 层想要使用 Dao 层的具体实现的话，需要通过 new 关键字在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl"},{"Type":"NodeText","Data":" 中手动 new 出 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":" 的具体实现类 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserDaoImpl"},{"Type":"NodeText","Data":"（不能直接 new 接口类）。"}]},{"ID":"20241015203282-dqh6wsz","Type":"NodeParagraph","Properties":{"id":"20241015203282-dqh6wsz","updated":"20241015203282"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/ioc-kfji3-20241015204346-q4u6is1.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015203283-tyd3qbr","Type":"NodeParagraph","Properties":{"id":"20241015203283-tyd3qbr","updated":"20241015203283"},"Children":[{"Type":"NodeText","Data":"很完美，这种方式也是可以实现的，但是我们想象一下如下场景："}]},{"ID":"20241015203284-0qsb7gg","Type":"NodeParagraph","Properties":{"id":"20241015203284-0qsb7gg","updated":"20241015203284"},"Children":[{"Type":"NodeText","Data":"开发过程中突然接到一个新的需求，针对"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":" 接口开发出另一个具体实现类。因为 Server 层依赖了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":"的（之前那个）具体实现，所以我们需要修改"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl"},{"Type":"NodeText","Data":"中 new 的对象。如果只有一个类引用了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":"的具体实现，可能觉得还好，修改起来也不是很费力气，但是如果有许许多多的地方都引用了"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":"的具体实现的话，一旦需要更换"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"IUserDao"},{"Type":"NodeText","Data":" 的实现方式，那修改起来将会非常的头疼。"}]},{"ID":"20241015203285-ja4qgjj","Type":"NodeParagraph","Properties":{"id":"20241015203285-ja4qgjj","updated":"20241015203285"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/why-ioc-20241015204346-k9nskgu.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015203286-hvzbwmc","Type":"NodeParagraph","Properties":{"id":"20241015203286-hvzbwmc","updated":"20241015203286"},"Children":[{"Type":"NodeText","Data":"使用 IoC 的思想，我们将对象的控制权（创建、管理）交由 IoC 容器去管理，我们在使用的时候直接向 IoC 容器 “要” 就可以了。（具体用哪个实现类，找IOC容器要就行了）"}]},{"ID":"20241015203287-mmofcce","Type":"NodeParagraph","Properties":{"id":"20241015203287-mmofcce","updated":"20241015203287"},"Children":[{"Type":"NodeImage","Properties":{"id":""},"Children":[{"Type":"NodeBang","Data":"!","Properties":{"id":""}},{"Type":"NodeOpenBracket","Data":"[","Properties":{"id":""}},{"Type":"NodeLinkText","Data":"img","Properties":{"id":""}},{"Type":"NodeCloseBracket","Data":"]","Properties":{"id":""}},{"Type":"NodeOpenParen","Data":"(","Properties":{"id":""}},{"Type":"NodeLinkDest","Data":"assets/why-ioc-2-20241015204346-luj31zp.png","Properties":{"id":""}},{"Type":"NodeCloseParen","Data":")","Properties":{"id":""}}]}]},{"ID":"20241015203288-vjsdgfy","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203288-vjsdgfy","updated":"20241015203288"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"Beans"}]},{"ID":"20241015203289-o9o1lys","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203289-o9o1lys","updated":"20241015203289"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#什么是-spring-bean","TextMarkTextContent":"什么是 Spring Bean？"}]},{"ID":"20241015203290-zsw93vb","Type":"NodeParagraph","Properties":{"id":"20241015203290-zsw93vb","updated":"20241015203290"},"Children":[{"Type":"NodeText","Data":"简单来说，Bean 代指的就是那些被 IoC 容器所管理的对象。"}]},{"ID":"20241015203291-v7adv47","Type":"NodeParagraph","Properties":{"id":"20241015203291-v7adv47","updated":"20241015203291"},"Children":[{"Type":"NodeText","Data":"我们需要告诉 IoC 容器帮助我们管理哪些对象，这个是通过配置元数据来定义的。配置元数据可以是 XML 文件、注解或者 Java 配置类。"}]},{"ID":"20241015203292-56qy197","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203292-56qy197","updated":"20241015203292"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#将一个类声明为-bean-的注解有哪些","TextMarkTextContent":"将一个类声明为 Bean 的注解有哪些?"}]},{"ID":"20241015203293-s5z4e4f","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203293-s5z4e4f","updated":"20241015203293"},"Children":[{"ID":"20241015203294-burs6ra","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203294-burs6ra","updated":"20241015203294"},"Children":[{"ID":"20241015203295-seltp3g","Type":"NodeParagraph","Properties":{"id":"20241015203295-seltp3g","updated":"20241015203295"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":"：通用的注解，可标注任意类为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":" 组件。如果一个 Bean 不知道属于哪个层，可以使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 注解标注。"}]}]},{"ID":"20241015203296-7nww2wm","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203296-7nww2wm","updated":"20241015203296"},"Children":[{"ID":"20241015203297-6o49rrl","Type":"NodeParagraph","Properties":{"id":"20241015203297-6o49rrl","updated":"20241015203297"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Repository"},{"Type":"NodeText","Data":" : 对应持久层即 Dao 层，主要用于数据库相关操作。"}]}]},{"ID":"20241015203298-d962q63","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203298-d962q63","updated":"20241015203298"},"Children":[{"ID":"20241015203299-q037yis","Type":"NodeParagraph","Properties":{"id":"20241015203299-q037yis","updated":"20241015203299"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Service"},{"Type":"NodeText","Data":" : 对应服务层，主要涉及一些复杂的逻辑，需要用到 Dao 层。"}]}]},{"ID":"20241015203300-0ougb1g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203300-0ougb1g","updated":"20241015203300"},"Children":[{"ID":"20241015203301-wr028he","Type":"NodeParagraph","Properties":{"id":"20241015203301-wr028he","updated":"20241015203301"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Controller"},{"Type":"NodeText","Data":" : 对应 Spring MVC 控制层，主要用于接受用户请求并调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Service"},{"Type":"NodeText","Data":" 层返回数据给前端页面。"}]}]}]},{"ID":"20241015203302-c5ju41x","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203302-c5ju41x","updated":"20241015203302"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#component-和-bean-的区别是什么","TextMarkTextContent":"@Component 和 @Bean 的区别是什么？"}]},{"ID":"20241015203303-71kw9gv","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203303-71kw9gv","updated":"20241015203303"},"Children":[{"ID":"20241015203304-fktrl0j","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203304-fktrl0j","updated":"20241015203304"},"Children":[{"ID":"20241015203305-u054cs6","Type":"NodeParagraph","Properties":{"id":"20241015203305-u054cs6","updated":"20241015203305"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 注解作用于类，而"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":"注解作用于方法。"}]}]},{"ID":"20241015203306-z4t872k","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203306-z4t872k","updated":"20241015203306"},"Children":[{"ID":"20241015203307-3mm3bu6","Type":"NodeParagraph","Properties":{"id":"20241015203307-3mm3bu6","updated":"20241015203307"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":"通常是通过类路径扫描来自动侦测以及自动装配到 Spring 容器中（我们可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@ComponentScan"},{"Type":"NodeText","Data":" 注解定义要扫描的路径从中找出标识了需要装配的类自动装配到 Spring 的 bean 容器中）。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":" 注解通常是我们在标有该注解的方法中定义产生这个 bean,"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":"告诉了 Spring 这是某个类的实例，当我需要用它的时候还给我。"}]}]},{"ID":"20241015203308-awqp6b7","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203308-awqp6b7","updated":"20241015203308"},"Children":[{"ID":"20241015203309-ml414lz","Type":"NodeParagraph","Properties":{"id":"20241015203309-ml414lz","updated":"20241015203309"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":" 注解比 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 注解的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"自定义性更强"},{"Type":"NodeText","Data":"，而且很多地方我们只能通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":" 注解来注册 bean。比如当我们引用第三方库中的类需要装配到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Spring"},{"Type":"NodeText","Data":"容器时，则只能通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":"来实现。"}]}]}]},{"ID":"20241015203310-7tmhxz7","Type":"NodeParagraph","Properties":{"id":"20241015203310-7tmhxz7","updated":"20241015203310"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Bean"},{"Type":"NodeText","Data":"注解使用示例："}]},{"ID":"20241015203311-5mfci4j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203311-5mfci4j","updated":"20241015203311"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Configuration\npublic class AppConfig {\n    @Bean\n    public TransferService transferService() {\n        return new TransferServiceImpl();\n    }\n\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203312-dzcstmo","Type":"NodeParagraph","Properties":{"id":"20241015203312-dzcstmo","updated":"20241015203312"},"Children":[{"Type":"NodeText","Data":"上面的代码相当于下面的 xml 配置"}]},{"ID":"20241015203313-vamrkcl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203313-vamrkcl","updated":"20241015203313"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cbeans\u003e\n    \u003cbean id=\"transferService\" class=\"com.acme.TransferServiceImpl\"/\u003e\n\u003c/beans\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203314-ivnj77y","Type":"NodeParagraph","Properties":{"id":"20241015203314-ivnj77y","updated":"20241015203314"},"Children":[{"Type":"NodeText","Data":"下面这个例子是通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 无法实现的。"}]},{"ID":"20241015203315-15bdsl6","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203315-15bdsl6","updated":"20241015203315"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Bean\npublic OneService getService(status) {\n    case (status)  {\n        when 1:\n                return new serviceImpl1();\n        when 2:\n                return new serviceImpl2();\n        when 3:\n                return new serviceImpl3();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203316-b7jvkzm","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203316-b7jvkzm","updated":"20241015203316"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#注入-bean-的注解有哪些","TextMarkTextContent":"注入 Bean 的注解有哪些？"}]},{"ID":"20241015203317-y0np4jn","Type":"NodeParagraph","Properties":{"id":"20241015203317-y0np4jn","updated":"20241015203317"},"Children":[{"Type":"NodeText","Data":"Spring 内置的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 以及 JDK 内置的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Inject"},{"Type":"NodeText","Data":" 都可以用于注入 Bean。"}]},{"ID":"20241015203318-0aybp2l","Type":"NodeTable","Data":"| Annotation   | Package                            | Source       |\n| ------------ | ---------------------------------- | ------------ |\n| `@Autowired` | `org.springframework.bean.factory` | Spring 2.5+  |\n| `@Resource`  | `javax.annotation`                 | Java JSR-250 |\n| `@Inject`    | `javax.inject`                     | Java JSR-330 |","TableAligns":[0,0,0],"Properties":{"id":"20241015203318-0aybp2l","updated":"20241015203318"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Annotation"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Package"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Source"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"org.springframework.bean.factory"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Spring 2.5+"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"javax.annotation"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Java JSR-250"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Inject"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"javax.inject"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Java JSR-330"}]}]}]},{"ID":"20241015203319-jvkzw88","Type":"NodeParagraph","Properties":{"id":"20241015203319-jvkzw88","updated":"20241015203319"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"使用的比较多一些。"}]},{"ID":"20241015203320-820hewd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203320-820hewd","updated":"20241015203385"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#autowired-和-resource-的区别是什么","TextMarkTextContent":"@Autowired 和 @Resource 的区别是什么？"}]},{"ID":"20241015203321-uwijizb","Type":"NodeParagraph","Properties":{"id":"20241015203321-uwijizb","updated":"20241015203321"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Autowired"},{"Type":"NodeText","Data":" 属于 Spring 内置的注解，默认的注入方式为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"（根据类型进行匹配），也就是说会优先根据接口类型去匹配并注入 Bean （接口的实现类）。"}]},{"ID":"20241015203322-1cbww8l","Type":"NodeParagraph","Properties":{"id":"20241015203322-1cbww8l","updated":"20241015203322"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"这会有什么问题呢？"},{"Type":"NodeText","Data":" 当一个接口存在多个实现类的话，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"这种方式就无法正确注入对象了，因为这个时候 Spring 会同时找到多个满足条件的选择，默认情况下它自己不知道选择哪一个。"}]},{"ID":"20241015203323-c5965m0","Type":"NodeParagraph","Properties":{"id":"20241015203323-c5965m0","updated":"20241015203323"},"Children":[{"Type":"NodeText","Data":"这种情况下，注入方式会变为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byName"},{"Type":"NodeText","Data":"（根据名称进行匹配），这个名称通常就是类名（首字母小写）。就比如说下面代码中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"smsService"},{"Type":"NodeText","Data":" 就是我这里所说的名称，这样应该比较好理解了吧。"}]},{"ID":"20241015203324-mc1ul3o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203324-mc1ul3o","updated":"20241015203324"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// smsService 就是我们上面所说的名称\n@Autowired\nprivate SmsService smsService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203325-hchp8do","Type":"NodeParagraph","Properties":{"id":"20241015203325-hchp8do","updated":"20241015203325"},"Children":[{"Type":"NodeText","Data":"举个例子，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SmsService"},{"Type":"NodeText","Data":" 接口有两个实现类: "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SmsServiceImpl1"},{"Type":"NodeText","Data":"和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"SmsServiceImpl2"},{"Type":"NodeText","Data":"，且它们都已经被 Spring 容器所管理。"}]},{"ID":"20241015203326-9s2gs38","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203326-9s2gs38","updated":"20241015203326"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 报错，byName 和 byType 都无法匹配到 bean\n@Autowired\nprivate SmsService smsService;\n// 正确注入 SmsServiceImpl1 对象对应的 bean\n@Autowired\nprivate SmsService smsServiceImpl1;\n// 正确注入  SmsServiceImpl1 对象对应的 bean\n// smsServiceImpl1 就是我们上面所说的名称\n@Autowired\n@Qualifier(value = \"smsServiceImpl1\")\nprivate SmsService smsService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203327-wk0mzkm","Type":"NodeParagraph","Properties":{"id":"20241015203327-wk0mzkm","updated":"20241015203327"},"Children":[{"Type":"NodeText","Data":"我们还是建议通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 注解来显式指定名称而不是依赖变量的名称。"}]},{"ID":"20241015203328-fov6edx","Type":"NodeParagraph","Properties":{"id":"20241015203328-fov6edx","updated":"20241015203328"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"属于 JDK 提供的注解，默认注入方式为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byName"},{"Type":"NodeText","Data":"。如果无法通过名称匹配到对应的 Bean 的话，注入方式会变为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203329-y5ikfm7","Type":"NodeParagraph","Properties":{"id":"20241015203329-y5ikfm7","updated":"20241015203329"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 有两个比较重要且日常开发常用的属性："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"（名称）、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"（类型）。"}]},{"ID":"20241015203330-91nc08q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203330-91nc08q","updated":"20241015203330"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"public @interface Resource {\n    String name() default \"\";\n    Class\u003c?\u003e type() default Object.class;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203331-tcy1xlk","Type":"NodeParagraph","Properties":{"id":"20241015203331-tcy1xlk","updated":"20241015203331"},"Children":[{"Type":"NodeText","Data":"如果仅指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 属性则注入方式为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byName"},{"Type":"NodeText","Data":"，如果仅指定"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"属性则注入方式为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"，如果同时指定"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"属性（不建议这么做）则注入方式为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"+"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byName"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203332-74uc122","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203332-74uc122","updated":"20241015203332"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"// 报错，byName 和 byType 都无法匹配到 bean\n@Resource\nprivate SmsService smsService;\n// 正确注入 SmsServiceImpl1 对象对应的 bean\n@Resource\nprivate SmsService smsServiceImpl1;\n// 正确注入 SmsServiceImpl1 对象对应的 bean（比较推荐这种方式）\n@Resource(name = \"smsServiceImpl1\")\nprivate SmsService smsService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203333-jdmp36i","Type":"NodeParagraph","Properties":{"id":"20241015203333-jdmp36i","updated":"20241015203333"},"Children":[{"Type":"NodeText","Data":"简单总结一下："}]},{"ID":"20241015203334-lwfkvip","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203334-lwfkvip","updated":"20241015203334"},"Children":[{"ID":"20241015203335-agt03di","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203335-agt03di","updated":"20241015203335"},"Children":[{"ID":"20241015203336-pd30il3","Type":"NodeParagraph","Properties":{"id":"20241015203336-pd30il3","updated":"20241015203336"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 是 Spring 提供的注解，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 是 JDK 提供的注解。"}]}]},{"ID":"20241015203337-uuwf8bd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203337-uuwf8bd","updated":"20241015203337"},"Children":[{"ID":"20241015203338-9nin0f6","Type":"NodeParagraph","Properties":{"id":"20241015203338-9nin0f6","updated":"20241015203338"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Autowired"},{"Type":"NodeText","Data":" 默认的注入方式为"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byType"},{"Type":"NodeText","Data":"（根据类型进行匹配），"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"默认注入方式为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"byName"},{"Type":"NodeText","Data":"（根据名称进行匹配）。"}]}]},{"ID":"20241015203339-dupjpnw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203339-dupjpnw","updated":"20241015203339"},"Children":[{"ID":"20241015203340-c1tcrih","Type":"NodeParagraph","Properties":{"id":"20241015203340-c1tcrih","updated":"20241015203340"},"Children":[{"Type":"NodeText","Data":"当一个接口存在多个实现类的情况下，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"都需要通过名称才能正确匹配到对应的 Bean。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Autowired"},{"Type":"NodeText","Data":" 可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 注解来显式指定名称，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 属性来显式指定名称。"}]}]},{"ID":"20241015203341-5j5cwef","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203341-5j5cwef","updated":"20241015203341"},"Children":[{"ID":"20241015203342-3v0x46u","Type":"NodeParagraph","Properties":{"id":"20241015203342-3v0x46u","updated":"20241015203342"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 支持在构造函数、方法、字段和参数上使用。"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 主要用于字段和方法上的注入，不支持在构造函数或参数上使用。"}]}]}]},{"ID":"20241015203343-2e2ob36","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203343-2e2ob36","updated":"20241015203385"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"解释"}]},{"ID":"20241015203344-qiudizn","Type":"NodeParagraph","Properties":{"id":"20241015203344-qiudizn","updated":"20241015203344"},"Children":[{"Type":"NodeText","Data":"😄看不懂？请看这个："}]},{"ID":"20241015203345-2dnucby","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203345-2dnucby","updated":"20241015203385"},"Children":[{"ID":"20241015203346-zpz0m35","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203346-zpz0m35","updated":"20241015203385"},"Children":[{"ID":"20241015203347-2j85ha8","Type":"NodeParagraph","Properties":{"id":"20241015203347-2j85ha8","updated":"20241015203347"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 都是用于依赖注入的注解，但它们在使用方式和一些特性上有一定的区别。下面我们详细对比它们，并解释两者的异同。"}]},{"ID":"20241015203348-m3okwbg","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203348-m3okwbg","updated":"20241015203348"},"Children":[{"Type":"NodeText","Data":"1. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"来源和标准"}]},{"ID":"20241015203349-d4eaawu","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203349-d4eaawu","updated":"20241015203349"},"Children":[{"ID":"20241015203350-49fxyex","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203350-49fxyex","updated":"20241015203350"},"Children":[{"ID":"20241015203351-nonsfq4","Type":"NodeParagraph","Properties":{"id":"20241015203351-nonsfq4","updated":"20241015203351"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"：来自 Spring 框架，是 Spring 特有的注解。"}]}]},{"ID":"20241015203352-rhy71gr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203352-rhy71gr","updated":"20241015203352"},"Children":[{"ID":"20241015203353-234e1ep","Type":"NodeParagraph","Properties":{"id":"20241015203353-234e1ep","updated":"20241015203353"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"：来自 Java 自带的 JSR-250 标准，属于 Java EE 的标准注解，Spring 也支持它。"}]}]}]},{"ID":"20241015203354-3x2rmg0","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203354-3x2rmg0","updated":"20241015203354"},"Children":[{"Type":"NodeText","Data":"2. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"自动注入的方式"}]},{"ID":"20241015203355-op75x3x","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203355-op75x3x","updated":"20241015203355"},"Children":[{"ID":"20241015203356-m4lcv89","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203356-m4lcv89","updated":"20241015203356"},"Children":[{"ID":"20241015203357-1c89s58","Type":"NodeParagraph","Properties":{"id":"20241015203357-1c89s58","updated":"20241015203357"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"：默认按照"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"类型（byType）"},{"Type":"NodeText","Data":"进行注入。也就是说，Spring 会根据匹配的类型查找对应的 Bean。如果有多个相同类型的 Bean，可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 指定要注入的 Bean 名称。"}]}]},{"ID":"20241015203358-yccc7zy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203358-yccc7zy","updated":"20241015203358"},"Children":[{"ID":"20241015203359-69ktx1b","Type":"NodeParagraph","Properties":{"id":"20241015203359-69ktx1b","updated":"20241015203359"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"：默认按照"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"名称（byName）"},{"Type":"NodeText","Data":"进行注入。它会先根据 Bean 名称进行查找，如果没有找到对应的名称，再根据类型进行匹配。"}]}]}]},{"ID":"20241015203360-cctallo","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203360-cctallo","updated":"20241015203360"},"Children":[{"Type":"NodeText","Data":"3. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用方式"}]},{"ID":"20241015203361-bfmvcxs","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203361-bfmvcxs","updated":"20241015203361"},"Children":[{"ID":"20241015203362-mpu4luu","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203362-mpu4luu","updated":"20241015203362"},"Children":[{"ID":"20241015203363-woh3q2o","Type":"NodeParagraph","Properties":{"id":"20241015203363-woh3q2o","updated":"20241015203363"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"：通常与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 一起使用，以明确指定注入哪个 Bean。例如："}]},{"ID":"20241015203364-g4piogj","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203364-g4piogj","updated":"20241015203364"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\n@Qualifier(\"userService\")\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015203365-l93309g","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203365-l93309g","updated":"20241015203365"},"Children":[{"ID":"20241015203366-i1bbqmf","Type":"NodeParagraph","Properties":{"id":"20241015203366-i1bbqmf","updated":"20241015203366"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"：可以直接指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 属性。比如："}]},{"ID":"20241015203367-lp87crx","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203367-lp87crx","updated":"20241015203367"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(name = \"userService\")\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203368-1w83w5o","Type":"NodeParagraph","Properties":{"id":"20241015203368-1w83w5o","updated":"20241015203368"},"Children":[{"Type":"NodeText","Data":"如果没有指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"，它会根据字段名称进行注入。"}]}]}]},{"ID":"20241015203369-geqvqru","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203369-geqvqru","updated":"20241015203369"},"Children":[{"Type":"NodeText","Data":"4. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"强制性"}]},{"ID":"20241015203370-d5f2uch","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203370-d5f2uch","updated":"20241015203370"},"Children":[{"ID":"20241015203371-q5sznbj","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203371-q5sznbj","updated":"20241015203371"},"Children":[{"ID":"20241015203372-du9fsd3","Type":"NodeParagraph","Properties":{"id":"20241015203372-du9fsd3","updated":"20241015203372"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"：默认是必须的，意味着必须找到相应的 Bean 才能完成注入，否则会抛出异常。如果允许该 Bean 为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"null"},{"Type":"NodeText","Data":"，可以将 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"required"},{"Type":"NodeText","Data":" 设置为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"false"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203373-qxidyui","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203373-qxidyui","updated":"20241015203373"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired(required = false)\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015203374-olv28fr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203374-olv28fr","updated":"20241015203374"},"Children":[{"ID":"20241015203375-8ga57fi","Type":"NodeParagraph","Properties":{"id":"20241015203375-8ga57fi","updated":"20241015203375"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"：没有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"required"},{"Type":"NodeText","Data":" 属性，它默认会尝试注入，如果找不到匹配的 Bean，则不会注入。"}]}]}]},{"ID":"20241015203376-92n3rhv","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203376-92n3rhv","updated":"20241015203376"},"Children":[{"Type":"NodeText","Data":"5. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注入位置"}]},{"ID":"20241015203377-v3s81gj","Type":"NodeParagraph","Properties":{"id":"20241015203377-v3s81gj","updated":"20241015203377"},"Children":[{"Type":"NodeText","Data":"两者都可以用于字段、setter 方法和构造函数，但 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 更常用于构造函数和 setter 方法注入，而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 通常用于字段和 setter 方法注入。"}]},{"ID":"20241015203378-tead3i9","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203378-tead3i9","updated":"20241015203379"},"Children":[{"Type":"NodeText","Data":"详细的例子"}]},{"ID":"20241015203379-951s50s","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203379-951s50s","updated":"20241015203379"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"​ 的示例"}]},{"ID":"20241015203380-bean2vz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203380-bean2vz","updated":"20241015203380"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class UserService {\n\n    private DatabaseService databaseService;\n\n    @Autowired\n    public UserService(DatabaseService databaseService) {\n        this.databaseService = databaseService;\n    }\n\n    public void saveUser(String user) {\n        databaseService.save(user);\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203381-1twu54f","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203381-1twu54f","updated":"20241015203381"},"Children":[{"Type":"NodeText","Data":"使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ 的示例"}]},{"ID":"20241015203382-exyhi1j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203382-exyhi1j","updated":"20241015203382"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import javax.annotation.Resource;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class UserService {\n\n    @Resource(name = \"databaseService\")\n    private DatabaseService databaseService;\n\n    public void saveUser(String user) {\n        databaseService.save(user);\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203383-s5mzvv1","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203383-s5mzvv1","updated":"20241015203383"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20241015203384-dd4boed","Type":"NodeTable","Data":"| 特性         | `@Autowired`                             | `@Resource`                        |\n| ------------ | ---------------------------------------- | ---------------------------------- |\n| 来源         | Spring 框架                              | JSR-250 标准（Java EE）            |\n| 默认注入方式 | 按类型（byType）                         | 按名称（byName）                   |\n| 是否必须     | 默认 `required = true`，可设置为 `false` | 默认不是强制的                     |\n| 额外注解配置 | 可以搭配 `@Qualifier` 使用               | 可以通过 `name` 或 `type` 属性指定 |","TableAligns":[0,0,0],"Properties":{"id":"20241015203384-dd4boed","updated":"20241015203384"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"特性"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"来源"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Spring 框架"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"JSR-250 标准（Java EE）"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认注入方式"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"按类型（byType）"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"按名称（byName）"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"required = true"},{"Type":"NodeText","Data":"，可设置为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"false"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认不是强制的"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"额外注解配置"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可以搭配 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 使用"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 属性指定"}]}]}]},{"ID":"20241015203385-wxgcgjb","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203385-wxgcgjb","updated":"20241015203385"},"Children":[{"Type":"NodeText","Data":"选择建议"}]},{"ID":"20241015203386-cxxtz12","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203386-cxxtz12","updated":"20241015203386"},"Children":[{"ID":"20241015203387-6a5r2dx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203387-6a5r2dx","updated":"20241015203387"},"Children":[{"ID":"20241015203388-kwshuz5","Type":"NodeParagraph","Properties":{"id":"20241015203388-kwshuz5","updated":"20241015203388"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"：如果你是纯 Spring 开发，且习惯使用按类型注入，那么 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 是更常用的选择。"}]}]},{"ID":"20241015203389-e9qo1c5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203389-e9qo1c5","updated":"20241015203389"},"Children":[{"ID":"20241015203390-drmygbv","Type":"NodeParagraph","Properties":{"id":"20241015203390-drmygbv","updated":"20241015203390"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"：如果你希望更标准化，或更习惯使用 Java EE 风格，或者需要按名称注入时，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"。"}]}]}]},{"ID":"20241015203391-qzadrgi","Type":"NodeParagraph","Properties":{"id":"20241015203391-qzadrgi","updated":"20241015203391"},"Children":[{"Type":"NodeText","Data":"两者在 Spring 中都能实现依赖注入的功能，选择哪个主要取决于你项目的规范和个人喜好。希望这些信息能帮助你更好地理解 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 的区别！"}]}]}]},{"ID":"20241015203392-xynxxj0","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203392-xynxxj0","updated":"20241015203428"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Autowired"}]},{"ID":"20241015203393-2b00cpc","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203393-2b00cpc","updated":"20241015203428"},"Children":[{"ID":"20241015203394-gj8q9jj","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203394-gj8q9jj","updated":"20241015203428"},"Children":[{"ID":"20241015203395-jzxu801","Type":"NodeParagraph","Properties":{"id":"20241015203395-jzxu801","updated":"20241015203395"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 注解通常与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 一起使用，主要用于解决 Spring 自动装配时的"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"歧义问题"},{"Type":"NodeText","Data":"。当一个类型有多个实现时，Spring 不知道该选择哪一个 Bean 进行注入，这时可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 来指定明确的 Bean 名称，从而避免歧义。"}]},{"ID":"20241015203396-b321i38","Type":"NodeParagraph","Properties":{"id":"20241015203396-b321i38","updated":"20241015203396"},"Children":[{"Type":"NodeText","Data":"下面我会详细解释 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 的作用，并通过例子说明如何与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 一起使用。"}]},{"ID":"20241015203397-rkz24ur","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203397-rkz24ur","updated":"20241015203397"},"Children":[{"Type":"NodeText","Data":"1. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"为什么需要"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":"​"},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"？"}]},{"ID":"20241015203398-sbto74h","Type":"NodeParagraph","Properties":{"id":"20241015203398-sbto74h","updated":"20241015203398"},"Children":[{"Type":"NodeText","Data":"Spring 的自动装配机制（通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 实现）默认是按"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"类型"},{"Type":"NodeText","Data":"匹配的，但当应用程序中有多个相同类型的 Bean 时，Spring 无法确定注入哪一个。例如，假设有两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 实现："}]},{"ID":"20241015203399-eucmz6o","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203399-eucmz6o","updated":"20241015203399"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.stereotype.Service;\n\n@Service\npublic class UserServiceImpl1 implements UserService {\n    // 实现细节\n}\n\n@Service\npublic class UserServiceImpl2 implements UserService {\n    // 实现细节\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203400-oxwx3mu","Type":"NodeParagraph","Properties":{"id":"20241015203400-oxwx3mu","updated":"20241015203400"},"Children":[{"Type":"NodeText","Data":"这时，如果你在其他类中使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 注入 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":"，Spring 会报错，因为它找到了两个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 的实现，却不知道该注入哪一个。"}]},{"ID":"20241015203401-zysh92q","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203401-zysh92q","updated":"20241015203401"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\nprivate UserService userService;  // 这里会抛出 NoUniqueBeanDefinitionException\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203402-dsgfm4l","Type":"NodeParagraph","Properties":{"id":"20241015203402-dsgfm4l","updated":"20241015203402"},"Children":[{"Type":"NodeText","Data":"为了避免这种情况，我们可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 来明确指定要注入的具体 Bean。"}]},{"ID":"20241015203403-p6z7gka","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203403-p6z7gka","updated":"20241015203405"},"Children":[{"Type":"NodeText","Data":"2. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"如何与"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"配合使用"}]},{"ID":"20241015203404-ypesugh","Type":"NodeParagraph","Properties":{"id":"20241015203404-ypesugh","updated":"20241015203404"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 可以用来指定注入的 Bean 名称。每个 Bean 在注册到 Spring 容器时都有一个默认名称，通常是类名首字母小写的形式。例如，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl1"},{"Type":"NodeText","Data":" 的默认 Bean 名称是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl1"},{"Type":"NodeText","Data":"，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl2"},{"Type":"NodeText","Data":" 的默认 Bean 名称是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl2"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203405-7jqjhcg","Type":"NodeParagraph","Properties":{"id":"20241015203405-7jqjhcg","updated":"20241015203405"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20241015203406-veulb5p","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203406-veulb5p","updated":"20241015203406"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.stereotype.Controller;\n\n@Controller\npublic class UserController {\n\n    private final UserService userService;\n\n    @Autowired\n    public UserController(@Qualifier(\"userServiceImpl1\") UserService userService) {\n        this.userService = userService;\n    }\n\n    public void performAction() {\n        userService.doSomething();\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203407-83t605q","Type":"NodeParagraph","Properties":{"id":"20241015203407-83t605q","updated":"20241015203407"},"Children":[{"Type":"NodeText","Data":"在这个例子中，我们通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier(\u0026quot;userServiceImpl1\u0026quot;)"},{"Type":"NodeText","Data":" 明确告诉 Spring 注入 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl1"},{"Type":"NodeText","Data":" 这个具体的实现，而不是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl2"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203408-p3e07yx","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203408-p3e07yx","updated":"20241015203410"},"Children":[{"Type":"NodeText","Data":"3. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"其他注入方式"}]},{"ID":"20241015203409-e8hh5vs","Type":"NodeParagraph","Properties":{"id":"20241015203409-e8hh5vs","updated":"20241015203409"},"Children":[{"Type":"NodeText","Data":"除了在构造函数参数上使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":"，还可以在字段和 setter 方法上使用。"}]},{"ID":"20241015203410-pi3ce42","Type":"NodeHeading","HeadingLevel":6,"Properties":{"id":"20241015203410-pi3ce42","updated":"20241015203410"},"Children":[{"Type":"NodeText","Data":"字段注入："}]},{"ID":"20241015203411-ku08715","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203411-ku08715","updated":"20241015203411"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\n@Qualifier(\"userServiceImpl1\")\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203412-xdwxsa1","Type":"NodeHeading","HeadingLevel":6,"Properties":{"id":"20241015203412-xdwxsa1","updated":"20241015203412"},"Children":[{"Type":"NodeText","Data":"Setter 方法注入："}]},{"ID":"20241015203413-xsuwmih","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203413-xsuwmih","updated":"20241015203413"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\npublic void setUserService(@Qualifier(\"userServiceImpl1\") UserService userService) {\n    this.userService = userService;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203414-etfw01d","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203414-etfw01d","updated":"20241015203414"},"Children":[{"Type":"NodeText","Data":"4. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"自定义 Bean 名称"}]},{"ID":"20241015203415-ays6u6r","Type":"NodeParagraph","Properties":{"id":"20241015203415-ays6u6r","updated":"20241015203415"},"Children":[{"Type":"NodeText","Data":"有时候，你可能会为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Service"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 等 Bean 自定义名称，而不是使用默认的类名。你可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Service"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":" 注解中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 属性来指定一个自定义的名称。"}]},{"ID":"20241015203416-4dx0ffq","Type":"NodeParagraph","Properties":{"id":"20241015203416-4dx0ffq","updated":"20241015203416"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20241015203417-ng0b02b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203417-ng0b02b","updated":"20241015203417"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Service(\"primaryUserService\")\npublic class UserServiceImpl1 implements UserService {\n    // 实现细节\n}\n\n@Service(\"secondaryUserService\")\npublic class UserServiceImpl2 implements UserService {\n    // 实现细节\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203418-expkwxn","Type":"NodeParagraph","Properties":{"id":"20241015203418-expkwxn","updated":"20241015203418"},"Children":[{"Type":"NodeText","Data":"然后在需要注入的地方使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 来指定："}]},{"ID":"20241015203419-vxhfa4j","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203419-vxhfa4j","updated":"20241015203419"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\n@Qualifier(\"primaryUserService\")\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203420-d85rtfh","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203420-d85rtfh","updated":"20241015203420"},"Children":[{"Type":"NodeText","Data":"5. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Primary"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的使用"}]},{"ID":"20241015203421-0okpyh6","Type":"NodeParagraph","Properties":{"id":"20241015203421-0okpyh6","updated":"20241015203421"},"Children":[{"Type":"NodeText","Data":"如果你不想每次都用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 明确指定 Bean，可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Primary"},{"Type":"NodeText","Data":" 来标记某个 Bean 是默认的。当类型冲突时，Spring 会自动选择 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Primary"},{"Type":"NodeText","Data":" 标记的 Bean。"}]},{"ID":"20241015203422-ccfj3rl","Type":"NodeParagraph","Properties":{"id":"20241015203422-ccfj3rl","updated":"20241015203422"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20241015203423-6jd2hfy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203423-6jd2hfy","updated":"20241015203423"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Service\n@Primary\npublic class UserServiceImpl1 implements UserService {\n    // 实现细节\n}\n\n@Service\npublic class UserServiceImpl2 implements UserService {\n    // 实现细节\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203424-j2uezj4","Type":"NodeParagraph","Properties":{"id":"20241015203424-j2uezj4","updated":"20241015203424"},"Children":[{"Type":"NodeText","Data":"这时，如果你使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 注入 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":"，Spring 会默认选择 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl1"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203425-kq3fbkm","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203425-kq3fbkm","updated":"20241015203425"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\nprivate UserService userService;  // 自动注入 UserServiceImpl1\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203426-1j155gp","Type":"NodeParagraph","Properties":{"id":"20241015203426-1j155gp","updated":"20241015203426"},"Children":[{"Type":"NodeText","Data":"如果你想在某些地方注入另一个实现（比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl2"},{"Type":"NodeText","Data":"），你依然可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 来明确指定："}]},{"ID":"20241015203427-4fa62au","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203427-4fa62au","updated":"20241015203427"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Autowired\n@Qualifier(\"userServiceImpl2\")\nprivate UserService userService;  // 明确指定注入 UserServiceImpl2\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203428-9sd8m56","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203428-9sd8m56","updated":"20241015203428"},"Children":[{"Type":"NodeText","Data":"6. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"总结"}]},{"ID":"20241015203429-4fwuh4z","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203429-4fwuh4z","updated":"20241015203429"},"Children":[{"ID":"20241015203430-zec7nd6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203430-zec7nd6","updated":"20241015203430"},"Children":[{"ID":"20241015203431-ihw2qc3","Type":"NodeParagraph","Properties":{"id":"20241015203431-ihw2qc3","updated":"20241015203431"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 的主要作用"},{"Type":"NodeText","Data":"：在自动装配中明确指定要注入的具体 Bean，解决多个相同类型 Bean 之间的冲突。"}]}]},{"ID":"20241015203432-vb32gf8","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203432-vb32gf8","updated":"20241015203432"},"Children":[{"ID":"20241015203433-6p1jkb9","Type":"NodeParagraph","Properties":{"id":"20241015203433-6p1jkb9","updated":"20241015203433"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 搭配使用"},{"Type":"NodeText","Data":"：可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 指定 Bean 名称，确保注入特定的 Bean 实现。"}]}]},{"ID":"20241015203434-ib4v7du","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203434-ib4v7du","updated":"20241015203434"},"Children":[{"ID":"20241015203435-pu42omi","Type":"NodeParagraph","Properties":{"id":"20241015203435-pu42omi","updated":"20241015203435"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Primary"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 的作用"},{"Type":"NodeText","Data":"：标记一个 Bean 为默认实现，避免每次都使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":"。"}]}]}]},{"ID":"20241015203436-c1g44pq","Type":"NodeParagraph","Properties":{"id":"20241015203436-c1g44pq","updated":"20241015203436"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 非常适合解决多实例注入的场景，为开发提供了更高的灵活性。如果你需要在复杂项目中使用多个实现，合理使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Primary"},{"Type":"NodeText","Data":" 将会使你的代码更易于管理。"}]}]}]},{"ID":"20241015203437-yex8axv","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203437-yex8axv","updated":"20241015203513"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Resource"}]},{"ID":"20241015203438-7syja4c","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203438-7syja4c","updated":"20241015203513"},"Children":[{"ID":"20241015203439-ca4jle3","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203439-ca4jle3","updated":"20241015203513"},"Children":[{"ID":"20241015203440-ajjm5vt","Type":"NodeParagraph","Properties":{"id":"20241015203440-ajjm5vt","updated":"20241015203440"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 是 Java 的 JSR-250 标准注解，Spring 框架也支持它。相比于 Spring 特有的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 注解，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 的注入规则有一些不同。主要区别在于注入的方式："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 更倾向于按"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"名称"},{"Type":"NodeText","Data":"注入，而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 默认是按"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"类型"},{"Type":"NodeText","Data":"注入。"}]},{"ID":"20241015203441-6p81cih","Type":"NodeParagraph","Properties":{"id":"20241015203441-6p81cih","updated":"20241015203441"},"Children":[{"Type":"NodeText","Data":"接下来我会详细讲解 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 的具体注入规则，包括按名称和按类型注入的优先级，以及如何在实际开发中使用它。"}]},{"ID":"20241015203442-2221jxk","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203442-2221jxk","updated":"20241015203442"},"Children":[{"Type":"NodeText","Data":"1. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的基本使用"}]},{"ID":"20241015203443-q7f697z","Type":"NodeParagraph","Properties":{"id":"20241015203443-q7f697z","updated":"20241015203443"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 注解通常用于字段或 setter 方法上，它提供了两个重要属性："}]},{"ID":"20241015203444-5j9vfgz","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203444-5j9vfgz","updated":"20241015203444"},"Children":[{"ID":"20241015203445-egrbfh4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203445-egrbfh4","updated":"20241015203445"},"Children":[{"ID":"20241015203446-inwxh7t","Type":"NodeParagraph","Properties":{"id":"20241015203446-inwxh7t","updated":"20241015203446"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"：明确指定要注入的 Bean 名称。"}]}]},{"ID":"20241015203447-okqbl0i","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203447-okqbl0i","updated":"20241015203447"},"Children":[{"ID":"20241015203448-qt054n8","Type":"NodeParagraph","Properties":{"id":"20241015203448-qt054n8","updated":"20241015203448"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"：指定要注入的 Bean 类型。"}]}]}]},{"ID":"20241015203449-pcecfqg","Type":"NodeParagraph","Properties":{"id":"20241015203449-pcecfqg","updated":"20241015203449"},"Children":[{"Type":"NodeText","Data":"常用的语法："}]},{"ID":"20241015203450-8ogg17f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203450-8ogg17f","updated":"20241015203450"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(name = \"beanName\")\nprivate BeanType bean;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203451-s2q42lg","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203451-s2q42lg","updated":"20241015203451"},"Children":[{"Type":"NodeText","Data":"2. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的注入规则"}]},{"ID":"20241015203452-710ctqp","Type":"NodeParagraph","Properties":{"id":"20241015203452-710ctqp","updated":"20241015203452"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 的注入规则是："}]},{"ID":"20241015203453-vawomcs","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203453-vawomcs","updated":"20241015203453"},"Children":[{"ID":"20241015203454-8bb3het","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203454-8bb3het","updated":"20241015203454"},"Children":[{"ID":"20241015203455-jmkbtmu","Type":"NodeParagraph","Properties":{"id":"20241015203455-jmkbtmu","updated":"20241015203455"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"优先按照名称（byName）进行匹配"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 会首先尝试根据属性的名称或指定的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 来寻找对应的 Bean。"}]},{"ID":"20241015203456-4iw9l5n","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203456-4iw9l5n","updated":"20241015203456"},"Children":[{"ID":"20241015203457-z6923uz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203457-z6923uz","updated":"20241015203457"},"Children":[{"ID":"20241015203458-t2vx0oj","Type":"NodeParagraph","Properties":{"id":"20241015203458-t2vx0oj","updated":"20241015203458"},"Children":[{"Type":"NodeText","Data":"如果指定了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"，Spring 会直接按该名称查找 Bean。"}]}]},{"ID":"20241015203459-ctoamb5","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203459-ctoamb5","updated":"20241015203459"},"Children":[{"ID":"20241015203460-o8oqmbx","Type":"NodeParagraph","Properties":{"id":"20241015203460-o8oqmbx","updated":"20241015203460"},"Children":[{"Type":"NodeText","Data":"如果没有指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"，它会使用字段名或 setter 方法参数名作为要查找的名称。"}]}]}]}]},{"ID":"20241015203461-elup05r","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203461-elup05r","updated":"20241015203461"},"Children":[{"ID":"20241015203462-nfq86uq","Type":"NodeParagraph","Properties":{"id":"20241015203462-nfq86uq","updated":"20241015203462"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"如果按名称找不到 Bean，则按类型（byType）进行匹配"},{"Type":"NodeText","Data":"：如果没有匹配到名称，Spring 会尝试根据字段或参数的类型来查找合适的 Bean。"}]}]}]},{"ID":"20241015203463-wcc11lx","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203463-wcc11lx","updated":"20241015203463"},"Children":[{"Type":"NodeText","Data":"3. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"具体的注入顺序"}]},{"ID":"20241015203464-24bllkq","Type":"NodeParagraph","Properties":{"id":"20241015203464-24bllkq","updated":"20241015203464"},"Children":[{"Type":"NodeText","Data":"假设有以下场景："}]},{"ID":"20241015203465-13vukvl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203465-13vukvl","updated":"20241015203465"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203466-vdlc0rz","Type":"NodeParagraph","Properties":{"id":"20241015203466-vdlc0rz","updated":"20241015203466"},"Children":[{"Type":"NodeText","Data":"Spring 处理 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 注解的顺序如下："}]},{"ID":"20241015203467-plluccq","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203467-plluccq","updated":"20241015203467"},"Children":[{"ID":"20241015203468-6z74mo3","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203468-6z74mo3","updated":"20241015203468"},"Children":[{"ID":"20241015203469-n10edb2","Type":"NodeParagraph","Properties":{"id":"20241015203469-n10edb2","updated":"20241015203469"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"按名称查找 Bean"},{"Type":"NodeText","Data":"：Spring 首先尝试根据字段名称 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userService"},{"Type":"NodeText","Data":" 在容器中查找名称为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userService"},{"Type":"NodeText","Data":" 的 Bean。"}]},{"ID":"20241015203470-unh4yvm","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203470-unh4yvm","updated":"20241015203470"},"Children":[{"ID":"20241015203471-qci7kic","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203471-qci7kic","updated":"20241015203471"},"Children":[{"ID":"20241015203472-ssn9ldw","Type":"NodeParagraph","Properties":{"id":"20241015203472-ssn9ldw","updated":"20241015203472"},"Children":[{"Type":"NodeText","Data":"如果找到名称为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userService"},{"Type":"NodeText","Data":" 的 Bean，直接注入。"}]}]},{"ID":"20241015203473-lb92fpa","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203473-lb92fpa","updated":"20241015203473"},"Children":[{"ID":"20241015203474-1cdmsck","Type":"NodeParagraph","Properties":{"id":"20241015203474-1cdmsck","updated":"20241015203474"},"Children":[{"Type":"NodeText","Data":"如果找不到，则进行下一步。"}]}]}]}]},{"ID":"20241015203475-uo0af95","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203475-uo0af95","updated":"20241015203475"},"Children":[{"ID":"20241015203476-u94rm1s","Type":"NodeParagraph","Properties":{"id":"20241015203476-u94rm1s","updated":"20241015203476"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"按类型查找 Bean"},{"Type":"NodeText","Data":"：如果没有找到名称为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userService"},{"Type":"NodeText","Data":" 的 Bean，Spring 接着会根据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 类型来查找匹配的 Bean。"}]},{"ID":"20241015203477-kh50bl2","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203477-kh50bl2","updated":"20241015203477"},"Children":[{"ID":"20241015203478-tel6917","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203478-tel6917","updated":"20241015203478"},"Children":[{"ID":"20241015203479-om7wv4a","Type":"NodeParagraph","Properties":{"id":"20241015203479-om7wv4a","updated":"20241015203479"},"Children":[{"Type":"NodeText","Data":"如果有且只有一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 类型的 Bean，注入该 Bean。"}]}]},{"ID":"20241015203480-dgahvp6","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203480-dgahvp6","updated":"20241015203480"},"Children":[{"ID":"20241015203481-hy2a96q","Type":"NodeParagraph","Properties":{"id":"20241015203481-hy2a96q","updated":"20241015203481"},"Children":[{"Type":"NodeText","Data":"如果有多个同类型的 Bean，Spring 会抛出异常，因为它不知道应该注入哪一个。"}]}]}]}]}]},{"ID":"20241015203482-dsddhpt","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203482-dsddhpt","updated":"20241015203483"},"Children":[{"Type":"NodeText","Data":"4. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"和"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"属性的使用"}]},{"ID":"20241015203483-dqy4uxp","Type":"NodeParagraph","Properties":{"id":"20241015203483-dqy4uxp","updated":"20241015203483"},"Children":[{"Type":"NodeText","Data":"1）按名称注入"}]},{"ID":"20241015203484-3p1cw05","Type":"NodeParagraph","Properties":{"id":"20241015203484-3p1cw05","updated":"20241015203484"},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 属性明确指定要注入的 Bean 名称。如果指定了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"，Spring 会只根据名称来查找对应的 Bean，不会进行类型匹配。"}]},{"ID":"20241015203485-hha8osu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203485-hha8osu","updated":"20241015203485"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(name = \"userServiceImpl1\")\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203486-rdwogu6","Type":"NodeParagraph","Properties":{"id":"20241015203486-rdwogu6","updated":"20241015203486"},"Children":[{"Type":"NodeText","Data":"在这个例子中，Spring 只会查找名称为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl1"},{"Type":"NodeText","Data":" 的 Bean，并将其注入到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userService"},{"Type":"NodeText","Data":" 字段中。"}]},{"ID":"20241015203487-dxth4tc","Type":"NodeParagraph","Properties":{"id":"20241015203487-dxth4tc","updated":"20241015203487"},"Children":[{"Type":"NodeText","Data":"2）按类型注入"}]},{"ID":"20241015203488-7zekbay","Type":"NodeParagraph","Properties":{"id":"20241015203488-7zekbay","updated":"20241015203488"},"Children":[{"Type":"NodeText","Data":"如果你想确保 Spring 按类型匹配而不是按名称匹配，你可以使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 属性："}]},{"ID":"20241015203489-e9tbs2b","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203489-e9tbs2b","updated":"20241015203489"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(type = UserServiceImpl.class)\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203490-i0xeiaw","Type":"NodeParagraph","Properties":{"id":"20241015203490-i0xeiaw","updated":"20241015203490"},"Children":[{"Type":"NodeText","Data":"这里，Spring 会查找类型为 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserServiceImpl"},{"Type":"NodeText","Data":" 的 Bean 并注入。"}]},{"ID":"20241015203491-r0ljg4y","Type":"NodeParagraph","Properties":{"id":"20241015203491-r0ljg4y","updated":"20241015203491"},"Children":[{"Type":"NodeText","Data":"3）同时使用 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":"​ 和 "},{"Type":"NodeTextMark","TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"​"}]},{"ID":"20241015203492-cjjqtew","Type":"NodeParagraph","Properties":{"id":"20241015203492-cjjqtew","updated":"20241015203492"},"Children":[{"Type":"NodeText","Data":"你也可以同时指定 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"，这样 Spring 会首先按 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 查找，如果找到，则忽略 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":"。如果找不到 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 对应的 Bean，则会抛出异常，不会根据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 再进行查找。"}]},{"ID":"20241015203493-83cydcn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203493-83cydcn","updated":"20241015203493"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(name = \"userServiceImpl1\", type = UserServiceImpl.class)\nprivate UserService userService;\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203494-iirnah4","Type":"NodeParagraph","Properties":{"id":"20241015203494-iirnah4","updated":"20241015203494"},"Children":[{"Type":"NodeText","Data":"在这个例子中，Spring 会先按 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 查找 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"userServiceImpl1"},{"Type":"NodeText","Data":"，如果找不到该名称的 Bean，直接抛出异常。"}]},{"ID":"20241015203495-p8tyoal","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203495-p8tyoal","updated":"20241015203497"},"Children":[{"Type":"NodeText","Data":"5. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"注解在 setter 方法上的使用"}]},{"ID":"20241015203496-ndl42p7","Type":"NodeParagraph","Properties":{"id":"20241015203496-ndl42p7","updated":"20241015203496"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 也可以用在 setter 方法上，Spring 会根据 setter 方法的参数类型或名称进行注入。"}]},{"ID":"20241015203497-nkgsse3","Type":"NodeParagraph","Properties":{"id":"20241015203497-nkgsse3","updated":"20241015203497"},"Children":[{"Type":"NodeText","Data":"示例："}]},{"ID":"20241015203498-2812xfo","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203498-2812xfo","updated":"20241015203498"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Resource(name = \"userServiceImpl1\")\npublic void setUserService(UserService userService) {\n    this.userService = userService;\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203499-awnrtew","Type":"NodeParagraph","Properties":{"id":"20241015203499-awnrtew","updated":"20241015203499"},"Children":[{"Type":"NodeText","Data":"在这个例子中，Spring 会根据 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name = \u0026quot;userServiceImpl1\u0026quot;"},{"Type":"NodeText","Data":" 来注入对应的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 实现。"}]},{"ID":"20241015203500-y7mdo9r","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203500-y7mdo9r","updated":"20241015203500"},"Children":[{"Type":"NodeText","Data":"6. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"与 Spring 容器的兼容性"}]},{"ID":"20241015203501-shhz9bu","Type":"NodeParagraph","Properties":{"id":"20241015203501-shhz9bu","updated":"20241015203501"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 是 JSR-250 的标准注解，通常用于 Java EE 应用中，但它也可以很好地在 Spring 容器中工作。Spring 通过支持 JSR-250 注解来提供与 Java EE 规范的兼容性。"}]},{"ID":"20241015203502-v8cyiwh","Type":"NodeParagraph","Properties":{"id":"20241015203502-v8cyiwh","updated":"20241015203502"},"Children":[{"Type":"NodeText","Data":"在 Spring 中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 可以与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Component"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Service"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Controller"},{"Type":"NodeText","Data":" 等注解一起使用。Spring 会扫描这些注解创建的 Bean 并自动处理 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 注入。"}]},{"ID":"20241015203503-5uhr1yd","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203503-5uhr1yd","updated":"20241015203505"},"Children":[{"Type":"NodeText","Data":"7. "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"和"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"​ "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"的对比"}]},{"ID":"20241015203504-8lln20o","Type":"NodeTable","Data":"| 特性         | `@Resource`                                | `@Autowired`                      |\n| ------------ | ------------------------------------------ | --------------------------------- |\n| 默认注入方式 | 按名称（byName）优先                       | 按类型（byType）                  |\n| 能否指定名称 | 可以通过 `name` 属性指定                   | 可以通过 `@Qualifier` 指定        |\n| 能否指定类型 | 可以通过 `type` 属性指定                   | 默认按类型注入                    |\n| 强制性       | 没有 `required` 属性，不会自动检查是否必须 | 默认是强制注入，`required = true` |\n| 适用标准     | JSR-250 标准（Java EE）                    | Spring 特有                       |","TableAligns":[0,0,0],"Properties":{"id":"20241015203504-8lln20o","updated":"20241015203504"},"Children":[{"Type":"NodeTableHead","Properties":{"id":""},"Children":[{"Type":"NodeTableRow","Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"特性"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"}]}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认注入方式"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"按名称（byName）优先"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"按类型（byType）"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能否指定名称"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"name"},{"Type":"NodeText","Data":" 属性指定"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 指定"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"能否指定类型"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"可以通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"type"},{"Type":"NodeText","Data":" 属性指定"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认按类型注入"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"强制性"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"没有 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"required"},{"Type":"NodeText","Data":" 属性，不会自动检查是否必须"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"默认是强制注入，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"required = true"}]}]},{"Type":"NodeTableRow","TableAligns":[0,0,0],"Properties":{"id":""},"Children":[{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"适用标准"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"JSR-250 标准（Java EE）"}]},{"Type":"NodeTableCell","Properties":{"id":""},"Children":[{"Type":"NodeText","Data":"Spring 特有"}]}]}]},{"ID":"20241015203505-qn7gucm","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203505-qn7gucm","updated":"20241015203505"},"Children":[{"Type":"NodeText","Data":"8. "},{"Type":"NodeTextMark","TextMarkType":"strong","TextMarkTextContent":"使用场景建议"}]},{"ID":"20241015203506-drm51g4","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203506-drm51g4","updated":"20241015203506"},"Children":[{"ID":"20241015203507-ixrqtvy","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203507-ixrqtvy","updated":"20241015203507"},"Children":[{"ID":"20241015203508-ex41aek","Type":"NodeParagraph","Properties":{"id":"20241015203508-ex41aek","updated":"20241015203508"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"按名称注入"},{"Type":"NodeText","Data":"：如果你更习惯按名称进行注入，或你希望代码更加符合 JSR-250 标准，那么可以选择使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":"。"}]}]},{"ID":"20241015203509-gwrm9sw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203509-gwrm9sw","updated":"20241015203509"},"Children":[{"ID":"20241015203510-9l6spr5","Type":"NodeParagraph","Properties":{"id":"20241015203510-9l6spr5","updated":"20241015203510"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"兼容 Java EE"},{"Type":"NodeText","Data":"：如果你正在开发的项目需要与 Java EE 兼容（如与 JPA、EJB 结合），使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 会更符合标准。"}]}]},{"ID":"20241015203511-dccyg4c","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203511-dccyg4c","updated":"20241015203511"},"Children":[{"ID":"20241015203512-fgbdsh0","Type":"NodeParagraph","Properties":{"id":"20241015203512-fgbdsh0","updated":"20241015203512"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring 特性"},{"Type":"NodeText","Data":"：如果你正在开发一个纯 Spring 的项目，且习惯按类型注入并享受 Spring 的特有功能（如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Qualifier"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Primary"},{"Type":"NodeText","Data":"），那么 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 可能会更符合需求。"}]}]}]},{"ID":"20241015203513-toos7mp","Type":"NodeHeading","HeadingLevel":5,"Properties":{"id":"20241015203513-toos7mp","updated":"20241015203513"},"Children":[{"Type":"NodeText","Data":"总结"}]},{"ID":"20241015203514-blsa0oo","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203514-blsa0oo","updated":"20241015203514"},"Children":[{"ID":"20241015203515-xoh2jvd","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203515-xoh2jvd","updated":"20241015203515"},"Children":[{"ID":"20241015203516-6hcv1rm","Type":"NodeParagraph","Properties":{"id":"20241015203516-6hcv1rm","updated":"20241015203516"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"默认按名称注入"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 首先根据名称查找 Bean，如果没有匹配的名称再根据类型查找。"}]}]},{"ID":"20241015203517-bbf96qe","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203517-bbf96qe","updated":"20241015203517"},"Children":[{"ID":"20241015203518-qf4e5qc","Type":"NodeParagraph","Properties":{"id":"20241015203518-qf4e5qc","updated":"20241015203518"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"灵活使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"name"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"type"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 属性"},{"Type":"NodeText","Data":"：可以明确指定要注入的 Bean 名称或类型。"}]}]},{"ID":"20241015203519-m8xnt11","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203519-m8xnt11","updated":"20241015203519"},"Children":[{"ID":"20241015203520-8nss8us","Type":"NodeParagraph","Properties":{"id":"20241015203520-8nss8us","updated":"20241015203520"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"与 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Autowired"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 的对比"},{"Type":"NodeText","Data":"："},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 更加标准化，按名称注入优先，适合与 Java EE 一起使用，而 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":" 更适合按类型注入的 Spring 项目。"}]}]}]},{"ID":"20241015203521-8dbghlu","Type":"NodeParagraph","Properties":{"id":"20241015203521-8dbghlu","updated":"20241015203521"},"Children":[{"Type":"NodeText","Data":"通过这些规则，开发者可以在项目中灵活选择 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Resource"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Autowired"},{"Type":"NodeText","Data":"，以达到最佳的依赖注入效果。"}]}]}]},{"ID":"20241015203522-oztg2zh","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203522-oztg2zh","updated":"20241015203522"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP"}]},{"ID":"20241015203523-9kc7toq","Type":"NodeParagraph","Properties":{"id":"20241015203523-9kc7toq","updated":"20241015203523"},"Children":[{"Type":"NodeText","Data":"https://mp.weixin.qq.com/s/mqaBDLzbVhpP_vqylx_i5A"}]},{"ID":"20241015203524-4wbwqqd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203524-4wbwqqd","updated":"20241015203524"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP简介"}]},{"ID":"20241015203525-wmcjjd6","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203525-wmcjjd6","updated":"20241015203525"},"Children":[{"ID":"20241015203526-nn42e9l","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203526-nn42e9l","updated":"20241015203526"},"Children":[{"ID":"20241015203527-xcp6vme","Type":"NodeParagraph","Properties":{"id":"20241015203527-xcp6vme","updated":"20241015203527"},"Children":[{"Type":"NodeText","Data":"在Spring Boot中，AOP（Aspect-Oriented Programming，面向切面编程）是一种编程范式，旨在通过将横切关注点（cross-cutting concerns）从业务逻辑中分离出来，使代码更加简洁、模块化、可维护。典型的横切关注点包括日志记录、安全性、事务管理、异常处理等，它们通常散布在多个模块中，而AOP可以将这些关注点封装在独立的模块（切面）中。"}]},{"ID":"20241015203528-s1czzvj","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203528-s1czzvj","updated":"20241015203528"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP的核心概念"}]},{"ID":"20241015203529-r77h96a","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203529-r77h96a","updated":"20241015203529"},"Children":[{"ID":"20241015203530-ww1w5z7","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203530-ww1w5z7","updated":"20241015203530"},"Children":[{"ID":"20241015203531-s55cyij","Type":"NodeParagraph","Properties":{"id":"20241015203531-s55cyij","updated":"20241015203531"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"切面（Aspect）"},{"Type":"NodeText","Data":"：切面是横切关注点的模块化封装。它可以包含一组与业务无关的功能，比如日志记录、事务管理。通过切面，可以将这些功能独立出来，以便应用到不同的目标对象上。"}]}]},{"ID":"20241015203532-qkh670g","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203532-qkh670g","updated":"20241015203532"},"Children":[{"ID":"20241015203533-56ykawe","Type":"NodeParagraph","Properties":{"id":"20241015203533-56ykawe","updated":"20241015203533"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"连接点（Join Point）"},{"Type":"NodeText","Data":"：程序执行中的一个点，通常是方法调用。这些点是AOP的潜在拦截点。Spring AOP主要支持方法级别的连接点。"}]}]},{"ID":"20241015203534-mq54x6l","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203534-mq54x6l","updated":"20241015203534"},"Children":[{"ID":"20241015203535-dpwhg5q","Type":"NodeParagraph","Properties":{"id":"20241015203535-dpwhg5q","updated":"20241015203535"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"通知（Advice）"},{"Type":"NodeText","Data":"：切面中的具体动作，它定义了在特定连接点执行的行为。通知有以下几种类型："}]},{"ID":"20241015203536-831oycy","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203536-831oycy","updated":"20241015203536"},"Children":[{"ID":"20241015203537-9f8z3xx","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203537-9f8z3xx","updated":"20241015203537"},"Children":[{"ID":"20241015203538-r6w20ro","Type":"NodeParagraph","Properties":{"id":"20241015203538-r6w20ro","updated":"20241015203538"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"前置通知（Before Advice）"},{"Type":"NodeText","Data":"：在目标方法执行之前执行的通知。"}]}]},{"ID":"20241015203539-pq6u3vr","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203539-pq6u3vr","updated":"20241015203539"},"Children":[{"ID":"20241015203540-vvt2rab","Type":"NodeParagraph","Properties":{"id":"20241015203540-vvt2rab","updated":"20241015203540"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"后置通知（After Advice）"},{"Type":"NodeText","Data":"：在目标方法执行之后执行的通知。"}]}]},{"ID":"20241015203541-wi0215t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203541-wi0215t","updated":"20241015203541"},"Children":[{"ID":"20241015203542-wchj28l","Type":"NodeParagraph","Properties":{"id":"20241015203542-wchj28l","updated":"20241015203542"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"返回通知（After Returning Advice）"},{"Type":"NodeText","Data":"：在目标方法成功返回结果后执行的通知。"}]}]},{"ID":"20241015203543-a0xzf51","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203543-a0xzf51","updated":"20241015203543"},"Children":[{"ID":"20241015203544-6vh0jwf","Type":"NodeParagraph","Properties":{"id":"20241015203544-6vh0jwf","updated":"20241015203544"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异常通知（After Throwing Advice）"},{"Type":"NodeText","Data":"：在目标方法抛出异常后执行的通知。"}]}]},{"ID":"20241015203545-yfczay4","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203545-yfczay4","updated":"20241015203545"},"Children":[{"ID":"20241015203546-cx3s59x","Type":"NodeParagraph","Properties":{"id":"20241015203546-cx3s59x","updated":"20241015203546"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"环绕通知（Around Advice）"},{"Type":"NodeText","Data":"：在目标方法执行的前后都能执行的通知，可以控制方法的执行。"}]}]}]},{"ID":"20241015203547-segjxyv","Type":"NodeHTMLBlock","Data":"\u003cdiv\u003e\n\u003cimg src=\"assets/640.jpeg\" alt=\"图片\" style=\"zoom:50%;\" /\u003e\n\u003c/div\u003e","HtmlBlockType":7,"Properties":{"id":"20241015203547-segjxyv","updated":"20241015203547"}}]},{"ID":"20241015203548-gsyh7lh","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015203548-gsyh7lh","updated":"20241015203548"},"Children":[{"ID":"20241015203549-qjid5un","Type":"NodeParagraph","Properties":{"id":"20241015203549-qjid5un","updated":"20241015203549"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"切点（Pointcut）"},{"Type":"NodeText","Data":"：定义拦截的规则，指明在哪些连接点上应用通知。切点通常是通过表达式来指定的，比如通过方法签名匹配特定的包或类。"}]},{"ID":"20241015203550-v43ajw7","Type":"NodeParagraph","Properties":{"id":"20241015203550-v43ajw7","updated":"20241015203550"},"Children":[{"Type":"NodeText","Data":"一个切点是一个表达式，它用来匹配哪些连接点需要被切面所增强。切点可以通过注解、正则表达式、逻辑运算等方式来定义。比如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution(* com.xyz.service..*(..))"},{"Type":"NodeText","Data":"匹配 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"com.xyz.service"},{"Type":"NodeText","Data":" 包及其子包下的类或接口。"}]}]},{"ID":"20241015203551-xs23ppt","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20241015203551-xs23ppt","updated":"20241015203551"},"Children":[{"ID":"20241015203552-e9zuyo9","Type":"NodeParagraph","Properties":{"id":"20241015203552-e9zuyo9","updated":"20241015203552"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"目标对象（Target Object）"},{"Type":"NodeText","Data":"：切面所应用的对象，即包含横切关注点的对象。它是AOP操作的主要对象。"}]}]},{"ID":"20241015203553-m3zr6kz","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20241015203553-m3zr6kz","updated":"20241015203553"},"Children":[{"ID":"20241015203554-98j5f8j","Type":"NodeParagraph","Properties":{"id":"20241015203554-98j5f8j","updated":"20241015203554"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"织入（Weaving）"},{"Type":"NodeText","Data":"：将切面应用到目标对象并创建代理对象的过程。Spring AOP通过动态代理或CGLIB在运行时织入切面。"}]}]}]},{"ID":"20241015203555-kc4qbld","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203555-kc4qbld","updated":"20241015203555"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Spring AOP的实现方式"}]},{"ID":"20241015203556-hvzbea8","Type":"NodeParagraph","Properties":{"id":"20241015203556-hvzbea8","updated":"20241015203556"},"Children":[{"Type":"NodeText","Data":"在Spring Boot中，AOP主要通过动态代理实现："}]},{"ID":"20241015203557-y9szyne","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203557-y9szyne","updated":"20241015203557"},"Children":[{"ID":"20241015203558-ul8bvjz","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203558-ul8bvjz","updated":"20241015203558"},"Children":[{"ID":"20241015203559-lm4cb6t","Type":"NodeParagraph","Properties":{"id":"20241015203559-lm4cb6t","updated":"20241015203559"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"JDK动态代理"},{"Type":"NodeText","Data":"：当目标对象实现了接口时，Spring AOP会使用JDK动态代理为目标对象创建代理。"}]}]},{"ID":"20241015203560-8lwcicw","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203560-8lwcicw","updated":"20241015203560"},"Children":[{"ID":"20241015203561-scbzt0c","Type":"NodeParagraph","Properties":{"id":"20241015203561-scbzt0c","updated":"20241015203561"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"CGLIB代理"},{"Type":"NodeText","Data":"：当目标对象没有实现接口时，Spring AOP会使用CGLIB库创建子类代理。这是一种基于继承的代理机制。"}]}]}]},{"ID":"20241015203562-gkh6p85","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203562-gkh6p85","updated":"20241015203562"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP的使用示例"}]},{"ID":"20241015203563-zd3o80k","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203563-zd3o80k","updated":"20241015203563"},"Children":[{"ID":"20241015203564-rcebbcb","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203564-rcebbcb","updated":"20241015203564"},"Children":[{"ID":"20241015203565-zjjtb3y","Type":"NodeParagraph","Properties":{"id":"20241015203565-zjjtb3y","updated":"20241015203565"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"引入依赖"},{"Type":"NodeHardBreak","Data":"\n","Properties":{"id":""}},{"Type":"NodeText","Data":"Spring Boot自动包含了AOP相关的依赖，如果没有手动排除，默认情况下是可用的。"}]},{"ID":"20241015203566-aeahwpk","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203566-aeahwpk","updated":"20241015203566"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cdependency\u003e\n    \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e\n    \u003cartifactId\u003espring-boot-starter-aop\u003c/artifactId\u003e\n\u003c/dependency\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]}]},{"ID":"20241015203567-9oxeb3n","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203567-9oxeb3n","updated":"20241015203567"},"Children":[{"ID":"20241015203568-z76uqas","Type":"NodeParagraph","Properties":{"id":"20241015203568-z76uqas","updated":"20241015203568"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"定义切面类"}]},{"ID":"20241015203569-008b4j4","Type":"NodeParagraph","Properties":{"id":"20241015203569-008b4j4","updated":"20241015203569"},"Children":[{"Type":"NodeText","Data":"创建一个切面类，使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Aspect"},{"Type":"NodeText","Data":"注解来声明这是一个切面。"}]},{"ID":"20241015203570-wzp0esy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203570-wzp0esy","updated":"20241015203570"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\npublic class LoggingAspect {\n\n    @Before(\"execution(* com.example.service.*.*(..))\")\n    public void logBeforeMethod() {\n        System.out.println(\"Executing method in service layer\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203571-xmkxj83","Type":"NodeParagraph","Properties":{"id":"20241015203571-xmkxj83","updated":"20241015203571"},"Children":[{"Type":"NodeText","Data":"在这个例子中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Before"},{"Type":"NodeText","Data":"注解声明了一个前置通知，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution(* com.example.service.*.*(..))"},{"Type":"NodeText","Data":"是一个切点表达式，表示匹配"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"com.example.service"},{"Type":"NodeText","Data":"包中的所有方法。"}]}]},{"ID":"20241015203572-5kdjuth","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203572-5kdjuth","updated":"20241015203572"},"Children":[{"ID":"20241015203573-o5r59ao","Type":"NodeParagraph","Properties":{"id":"20241015203573-o5r59ao","updated":"20241015203573"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切点表达式详解"}]},{"ID":"20241015203574-xcrhz2g","Type":"NodeParagraph","Properties":{"id":"20241015203574-xcrhz2g","updated":"20241015203574"},"Children":[{"Type":"NodeText","Data":"切点表达式的语法非常灵活，可以根据需要指定具体的类、包、方法等。常见的表达式形式包括："}]},{"ID":"20241015203575-sd3o3xy","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203575-sd3o3xy","updated":"20241015203575"},"Children":[{"ID":"20241015203576-8grs4mn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203576-8grs4mn","updated":"20241015203576"},"Children":[{"ID":"20241015203577-ur4j28e","Type":"NodeParagraph","Properties":{"id":"20241015203577-ur4j28e","updated":"20241015203577"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution(* com.example.service.*.*(..))"},{"Type":"NodeText","Data":"：匹配"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"com.example.service"},{"Type":"NodeText","Data":"包中的所有方法。"}]}]},{"ID":"20241015203578-gzs58dh","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203578-gzs58dh","updated":"20241015203578"},"Children":[{"ID":"20241015203579-4rsmu95","Type":"NodeParagraph","Properties":{"id":"20241015203579-4rsmu95","updated":"20241015203579"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"within(com.example.controller..*)"},{"Type":"NodeText","Data":"：匹配"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"com.example.controller"},{"Type":"NodeText","Data":"包及其子包中的所有类。"}]}]},{"ID":"20241015203580-e63kut2","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203580-e63kut2","updated":"20241015203580"},"Children":[{"ID":"20241015203581-dpxrcok","Type":"NodeParagraph","Properties":{"id":"20241015203581-dpxrcok","updated":"20241015203581"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@annotation(org.springframework.transaction.annotation.Transactional)"},{"Type":"NodeText","Data":"：匹配被"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Transactional"},{"Type":"NodeText","Data":"注解标记的方法。"}]}]}]}]},{"ID":"20241015203582-u5rfrj5","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015203582-u5rfrj5","updated":"20241015203582"},"Children":[{"ID":"20241015203583-iq9fxpq","Type":"NodeParagraph","Properties":{"id":"20241015203583-iq9fxpq","updated":"20241015203583"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"环绕通知的使用"}]},{"ID":"20241015203584-kdb4472","Type":"NodeParagraph","Properties":{"id":"20241015203584-kdb4472","updated":"20241015203584"},"Children":[{"Type":"NodeText","Data":"环绕通知可以让你在方法执行的前后都执行一些操作。它的典型使用场景包括性能监控、事务管理等。"}]},{"ID":"20241015203585-4qrx0q0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203585-4qrx0q0","updated":"20241015203585"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\npublic class PerformanceAspect {\n\n    @Around(\"execution(* com.example.service.*.*(..))\")\n    public Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        Object proceed = joinPoint.proceed(); // 执行目标方法\n        long executionTime = System.currentTimeMillis() - startTime;\n        System.out.println(joinPoint.getSignature() + \" executed in \" + executionTime + \"ms\");\n        return proceed;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203586-lb0okm9","Type":"NodeParagraph","Properties":{"id":"20241015203586-lb0okm9","updated":"20241015203586"},"Children":[{"Type":"NodeText","Data":"在这个例子中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"logExecutionTime"},{"Type":"NodeText","Data":"方法是一个环绕通知，它在目标方法执行的前后计算并打印方法的执行时间。"}]}]}]},{"ID":"20241015203587-twsx44o","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203587-twsx44o","updated":"20241015203587"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP的优势"}]},{"ID":"20241015203588-xoif6vl","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203588-xoif6vl","updated":"20241015203588"},"Children":[{"ID":"20241015203589-x8rwr88","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203589-x8rwr88","updated":"20241015203589"},"Children":[{"ID":"20241015203590-4qust3l","Type":"NodeParagraph","Properties":{"id":"20241015203590-4qust3l","updated":"20241015203590"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"模块化横切关注点"},{"Type":"NodeText","Data":"：通过AOP，横切关注点（如日志、安全性、事务管理）可以独立于业务逻辑进行管理，从而提高代码的可读性和可维护性。"}]}]},{"ID":"20241015203591-62r0t52","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203591-62r0t52","updated":"20241015203591"},"Children":[{"ID":"20241015203592-k9jainx","Type":"NodeParagraph","Properties":{"id":"20241015203592-k9jainx","updated":"20241015203592"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"减少代码重复"},{"Type":"NodeText","Data":"：避免将重复的逻辑散布在多个模块中，代码更加简洁、可复用。"}]}]},{"ID":"20241015203593-1jqbqg6","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203593-1jqbqg6","updated":"20241015203593"},"Children":[{"ID":"20241015203594-1t4bzp1","Type":"NodeParagraph","Properties":{"id":"20241015203594-1t4bzp1","updated":"20241015203594"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"动态代理支持"},{"Type":"NodeText","Data":"：Spring AOP基于动态代理或CGLIB，不需要修改原有代码就能灵活织入切面逻辑。"}]}]}]},{"ID":"20241015203595-s3zvpxa","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203595-s3zvpxa","updated":"20241015203595"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Spring AOP的局限"}]},{"ID":"20241015203596-v28ykm5","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203596-v28ykm5","updated":"20241015203596"},"Children":[{"ID":"20241015203597-63os721","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203597-63os721","updated":"20241015203597"},"Children":[{"ID":"20241015203598-4bq6er0","Type":"NodeParagraph","Properties":{"id":"20241015203598-4bq6er0","updated":"20241015203598"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"仅支持方法级别的AOP"},{"Type":"NodeText","Data":"：Spring AOP的切点只能作用于方法，而无法作用于构造器、字段等其他连接点。"}]}]},{"ID":"20241015203599-95fz8wb","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203599-95fz8wb","updated":"20241015203599"},"Children":[{"ID":"20241015203600-mapcp13","Type":"NodeParagraph","Properties":{"id":"20241015203600-mapcp13","updated":"20241015203600"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"基于代理的实现"},{"Type":"NodeText","Data":"：Spring AOP依赖于动态代理或CGLIB，因此只能对Spring管理的Bean进行AOP操作，不能对普通的对象应用AOP。"}]}]}]},{"ID":"20241015203601-f0n13cj","Type":"NodeParagraph","Properties":{"id":"20241015203601-f0n13cj","updated":"20241015203601"},"Children":[{"Type":"NodeText","Data":"总结来说，Spring Boot中的AOP提供了一种强大且灵活的方式来处理横切关注点。通过切面编程，你可以在不改变业务代码的情况下，实现日志、安全性、事务等功能，使应用程序更加模块化和清晰。"}]}]}]},{"ID":"20241015203602-m6tqcds","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203602-m6tqcds","updated":"20241015203602"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"例子1"}]},{"ID":"20241015203603-aem83ts","Type":"NodeParagraph","Properties":{"id":"20241015203603-aem83ts","updated":"20241015203603"},"Children":[{"Type":"NodeText","Data":"例子1：只在切面类中写，其他地方直接不改。切点指定为包中所有方法。"}]},{"ID":"20241015203604-5ygqwkj","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203604-5ygqwkj","updated":"20241015203604"},"Children":[{"ID":"20241015203605-4imee2y","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203605-4imee2y","updated":"20241015203605"},"Children":[{"ID":"20241015203606-xhhmji1","Type":"NodeParagraph","Properties":{"id":"20241015203606-xhhmji1","updated":"20241015203606"},"Children":[{"Type":"NodeText","Data":"好的，让我们通过一个具体的例子来详细说明Spring Boot中的AOP。"}]},{"ID":"20241015203607-i6le88b","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203607-i6le88b","updated":"20241015203607"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"例子：用户服务中的日志记录"}]},{"ID":"20241015203608-hmwnoyt","Type":"NodeParagraph","Properties":{"id":"20241015203608-hmwnoyt","updated":"20241015203608"},"Children":[{"Type":"NodeText","Data":"假设我们有一个简单的用户管理系统，我们想在用户服务的每个方法调用前后记录日志。以下是如何使用AOP来实现这一功能的步骤。"}]},{"ID":"20241015203609-wmy61so","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203609-wmy61so","updated":"20241015203609"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. 创建Spring Boot项目"}]},{"ID":"20241015203610-zz3rgip","Type":"NodeParagraph","Properties":{"id":"20241015203610-zz3rgip","updated":"20241015203610"},"Children":[{"Type":"NodeText","Data":"首先，创建一个Spring Boot项目并引入AOP依赖。在"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"pom.xml"},{"Type":"NodeText","Data":"中添加以下依赖："}]},{"ID":"20241015203611-m7tzxf9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"eG1s","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203611-m7tzxf9","updated":"20241015203611"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"eG1s","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"\u003cdependency\u003e\n    \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e\n    \u003cartifactId\u003espring-boot-starter-web\u003c/artifactId\u003e\n\u003c/dependency\u003e\n\u003cdependency\u003e\n    \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e\n    \u003cartifactId\u003espring-boot-starter-aop\u003c/artifactId\u003e\n\u003c/dependency\u003e\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203612-ru086n2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203612-ru086n2","updated":"20241015203612"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. 创建用户服务"}]},{"ID":"20241015203613-74bga5y","Type":"NodeParagraph","Properties":{"id":"20241015203613-74bga5y","updated":"20241015203613"},"Children":[{"Type":"NodeText","Data":"我们创建一个简单的用户服务，用于管理用户信息："}]},{"ID":"20241015203614-7a4hog5","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203614-7a4hog5","updated":"20241015203614"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.stereotype.Service;\n\n@Service\npublic class UserService {\n\n    public String getUserById(Long id) {\n        // 模拟从数据库获取用户信息\n        return \"User with ID: \" + id;\n    }\n\n    public void createUser(String name) {\n        // 模拟创建用户\n        System.out.println(\"User \" + name + \" created.\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203615-a6wuu4k","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203615-a6wuu4k","updated":"20241015203615"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. 创建切面类"}]},{"ID":"20241015203616-7zkf2vg","Type":"NodeParagraph","Properties":{"id":"20241015203616-7zkf2vg","updated":"20241015203616"},"Children":[{"Type":"NodeText","Data":"接下来，我们创建一个切面类，用于记录日志。我们使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Aspect"},{"Type":"NodeText","Data":"注解定义切面，并使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Before"},{"Type":"NodeText","Data":"和"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@After"},{"Type":"NodeText","Data":"注解定义通知。"}]},{"ID":"20241015203617-n23a5bs","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203617-n23a5bs","updated":"20241015203617"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.aspectj.lang.JoinPoint;\nimport org.aspectj.lang.annotation.After;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\npublic class LoggingAspect {\n\n    @Before(\"execution(* com.example.service.UserService.*(..))\")\n    public void logBefore(JoinPoint joinPoint) {\n        System.out.println(\"Before method: \" + joinPoint.getSignature().getName());\n    }\n\n    @After(\"execution(* com.example.service.UserService.*(..))\")\n    public void logAfter(JoinPoint joinPoint) {\n        System.out.println(\"After method: \" + joinPoint.getSignature().getName());\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203618-zuxv35v","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203618-zuxv35v","updated":"20241015203618"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"4. 使用用户服务"}]},{"ID":"20241015203619-2jgbgpe","Type":"NodeParagraph","Properties":{"id":"20241015203619-2jgbgpe","updated":"20241015203619"},"Children":[{"Type":"NodeText","Data":"现在，我们在Spring Boot应用中使用"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":"，例如在一个控制器中："}]},{"ID":"20241015203620-igxth00","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203620-igxth00","updated":"20241015203620"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n    @GetMapping(\"/users/{id}\")\n    public String getUser(@PathVariable Long id) {\n        return userService.getUserById(id);\n    }\n\n    @PostMapping(\"/users\")\n    public void createUser(@RequestParam String name) {\n        userService.createUser(name);\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203621-60fs2nk","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203621-60fs2nk","updated":"20241015203621"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"5. 运行应用"}]},{"ID":"20241015203622-kxwat4j","Type":"NodeParagraph","Properties":{"id":"20241015203622-kxwat4j","updated":"20241015203622"},"Children":[{"Type":"NodeText","Data":"启动Spring Boot应用，并访问以下URL："}]},{"ID":"20241015203623-cr07sn7","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203623-cr07sn7","updated":"20241015203623"},"Children":[{"ID":"20241015203624-3w0ln8w","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203624-3w0ln8w","updated":"20241015203624"},"Children":[{"ID":"20241015203625-7466ehq","Type":"NodeParagraph","Properties":{"id":"20241015203625-7466ehq","updated":"20241015203625"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"GET /users/1"},{"Type":"NodeText","Data":"：查看用户信息。"}]}]},{"ID":"20241015203626-5x2zm5q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203626-5x2zm5q","updated":"20241015203626"},"Children":[{"ID":"20241015203627-xw0v8yt","Type":"NodeParagraph","Properties":{"id":"20241015203627-xw0v8yt","updated":"20241015203627"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"POST /users?name=John"},{"Type":"NodeText","Data":"：创建新用户。"}]}]}]},{"ID":"20241015203628-ogz7aub","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203628-ogz7aub","updated":"20241015203628"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"6. 观察日志输出"}]},{"ID":"20241015203629-rz374kc","Type":"NodeParagraph","Properties":{"id":"20241015203629-rz374kc","updated":"20241015203629"},"Children":[{"Type":"NodeText","Data":"在控制台中，你将看到类似以下的输出："}]},{"ID":"20241015203630-97dwkio","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203630-97dwkio","updated":"20241015203630"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"Before method: getUserById\nAfter method: getUserById\nBefore method: createUser\nAfter method: createUser\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203631-r09c4ri","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203631-r09c4ri","updated":"20241015203631"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20241015203632-k9rglja","Type":"NodeParagraph","Properties":{"id":"20241015203632-k9rglja","updated":"20241015203632"},"Children":[{"Type":"NodeText","Data":"通过这个例子，我们展示了如何在Spring Boot中使用AOP进行日志记录："}]},{"ID":"20241015203633-bbgr3nl","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203633-bbgr3nl","updated":"20241015203633"},"Children":[{"ID":"20241015203634-ec3jr4s","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203634-ec3jr4s","updated":"20241015203634"},"Children":[{"ID":"20241015203635-jam9s2e","Type":"NodeParagraph","Properties":{"id":"20241015203635-jam9s2e","updated":"20241015203635"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切面类"},{"Type":"NodeText","Data":" ("},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"LoggingAspect"},{"Type":"NodeText","Data":") 定义了前置和后置通知，分别在每个用户服务方法执行前后记录日志。"}]}]},{"ID":"20241015203636-f7zskob","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203636-f7zskob","updated":"20241015203636"},"Children":[{"ID":"20241015203637-er09rez","Type":"NodeParagraph","Properties":{"id":"20241015203637-er09rez","updated":"20241015203637"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切点表达式"},{"Type":"NodeText","Data":" "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution(* com.example.service.UserService.*(..))"},{"Type":"NodeText","Data":" 指定了我们想要拦截的所有用户服务方法。"}]}]}]},{"ID":"20241015203638-izbu8hq","Type":"NodeParagraph","Properties":{"id":"20241015203638-izbu8hq","updated":"20241015203638"},"Children":[{"Type":"NodeText","Data":"这样，通过AOP，我们成功将日志记录的功能与业务逻辑分离，使代码更加清晰、可维护。"}]}]}]},{"ID":"20241015203639-svt7oew","Type":"NodeBlockquote","Properties":{"id":"20241015203639-svt7oew","updated":"20241015203639"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015203640-5ykr9ri","Type":"NodeParagraph","Properties":{"id":"20241015203640-5ykr9ri","updated":"20241015203640"},"Children":[{"Type":"NodeText","Data":"也就是说在UserService 或者UserController 中都不需要再写日志相关的代码，只用在切面类中写日志相关的代码，然后UserService 和UserController 中就自动有了日志功能？"}]}]},{"ID":"20241015203641-w1eolna","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203641-w1eolna","updated":"20241015203641"},"Children":[{"ID":"20241015203642-lanjn1u","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203642-lanjn1u","updated":"20241015203642"},"Children":[{"ID":"20241015203643-uz0ruoj","Type":"NodeParagraph","Properties":{"id":"20241015203643-uz0ruoj","updated":"20241015203643"},"Children":[{"Type":"NodeText","Data":"是的，完全正确！通过使用AOP，日志记录的逻辑被从 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserController"},{"Type":"NodeText","Data":" 中分离出来，只需在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切面类"},{"Type":"NodeText","Data":" 中定义日志相关的代码。这意味着："}]},{"ID":"20241015203644-38arj3a","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203644-38arj3a","updated":"20241015203644"},"Children":[{"ID":"20241015203645-cijv8ad","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203645-cijv8ad","updated":"20241015203645"},"Children":[{"ID":"20241015203646-c8mq8mn","Type":"NodeParagraph","Properties":{"id":"20241015203646-c8mq8mn","updated":"20241015203646"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"UserService"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"UserController"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":" 中"},{"Type":"NodeText","Data":"：你不需要编写任何与日志相关的代码，这些类只专注于业务逻辑，比如用户的创建、查询等功能。"}]}]},{"ID":"20241015203647-44kprwv","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203647-44kprwv","updated":"20241015203647"},"Children":[{"ID":"20241015203648-dbhc3ee","Type":"NodeParagraph","Properties":{"id":"20241015203648-dbhc3ee","updated":"20241015203648"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"在切面类中"},{"Type":"NodeText","Data":"：日志功能被集中管理，并且自动应用于你指定的切点（如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 的所有方法）。"}]}]}]},{"ID":"20241015203649-nwy6bos","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203649-nwy6bos","updated":"20241015203649"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"这样做的好处："}]},{"ID":"20241015203650-w186ods","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203650-w186ods","updated":"20241015203650"},"Children":[{"ID":"20241015203651-vbhantr","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203651-vbhantr","updated":"20241015203651"},"Children":[{"ID":"20241015203652-h4dqf62","Type":"NodeParagraph","Properties":{"id":"20241015203652-h4dqf62","updated":"20241015203652"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"代码简洁"},{"Type":"NodeText","Data":"：业务逻辑和横切关注点（如日志记录）被分开管理，避免了代码中的冗余。"}]}]},{"ID":"20241015203653-oy7xfvj","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203653-oy7xfvj","updated":"20241015203653"},"Children":[{"ID":"20241015203654-ery48uy","Type":"NodeParagraph","Properties":{"id":"20241015203654-ery48uy","updated":"20241015203654"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"集中管理"},{"Type":"NodeText","Data":"：如果你想修改日志记录的逻辑，比如改变日志格式或记录的内容，只需要修改切面类中的代码，所有相关方法都会自动更新。"}]}]},{"ID":"20241015203655-kz0g11n","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203655-kz0g11n","updated":"20241015203655"},"Children":[{"ID":"20241015203656-14ykgyi","Type":"NodeParagraph","Properties":{"id":"20241015203656-14ykgyi","updated":"20241015203656"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"可复用性"},{"Type":"NodeText","Data":"：切面可以应用于多个类和方法，减少了重复代码。"}]}]}]},{"ID":"20241015203657-v1id897","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203657-v1id897","updated":"20241015203657"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"示例总结"}]},{"ID":"20241015203658-dm6pa0p","Type":"NodeParagraph","Properties":{"id":"20241015203658-dm6pa0p","updated":"20241015203658"},"Children":[{"Type":"NodeText","Data":"在你的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserController"},{"Type":"NodeText","Data":" 中，完全不需要直接写日志记录的代码，但当这些方法被调用时，由于AOP切面的作用，日志功能会自动应用。例如："}]},{"ID":"20241015203659-1pic5eb","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203659-1pic5eb","updated":"20241015203659"},"Children":[{"ID":"20241015203660-3vusxq3","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203660-3vusxq3","updated":"20241015203660"},"Children":[{"ID":"20241015203661-h4ljfmm","Type":"NodeParagraph","Properties":{"id":"20241015203661-h4ljfmm","updated":"20241015203661"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"UserService"},{"Type":"NodeText","Data":" 中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getUserById"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"createUser"},{"Type":"NodeText","Data":" 方法，在调用时，会被切面类中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"logBefore"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"logAfter"},{"Type":"NodeText","Data":" 方法拦截，自动记录日志。"}]}]}]},{"ID":"20241015203662-lmuawlu","Type":"NodeParagraph","Properties":{"id":"20241015203662-lmuawlu","updated":"20241015203662"},"Children":[{"Type":"NodeText","Data":"这样，你就通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"非侵入式"},{"Type":"NodeText","Data":" 的方式为业务逻辑增加了日志功能，而不需要修改业务代码。整个过程的核心在于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切面类"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切点表达式"},{"Type":"NodeText","Data":"，它们决定了日志功能的应用位置。"}]},{"ID":"20241015203663-0vvyg9t","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203663-0vvyg9t","updated":"20241015203663"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"进一步扩展"}]},{"ID":"20241015203664-2tyky4g","Type":"NodeParagraph","Properties":{"id":"20241015203664-2tyky4g","updated":"20241015203664"},"Children":[{"Type":"NodeText","Data":"不仅是日志记录，你还可以用相同的AOP机制实现其他的横切关注点，比如："}]},{"ID":"20241015203665-o80iago","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203665-o80iago","updated":"20241015203665"},"Children":[{"ID":"20241015203666-v90aj26","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203666-v90aj26","updated":"20241015203666"},"Children":[{"ID":"20241015203667-xrkqje6","Type":"NodeParagraph","Properties":{"id":"20241015203667-xrkqje6","updated":"20241015203667"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"事务管理"},{"Type":"NodeText","Data":"：自动管理方法的事务提交和回滚。"}]}]},{"ID":"20241015203668-fg6lv47","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203668-fg6lv47","updated":"20241015203668"},"Children":[{"ID":"20241015203669-rcumvq4","Type":"NodeParagraph","Properties":{"id":"20241015203669-rcumvq4","updated":"20241015203669"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"安全检查"},{"Type":"NodeText","Data":"：在执行敏感操作前进行权限验证。"}]}]},{"ID":"20241015203670-6mw80il","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203670-6mw80il","updated":"20241015203670"},"Children":[{"ID":"20241015203671-l41etu6","Type":"NodeParagraph","Properties":{"id":"20241015203671-l41etu6","updated":"20241015203671"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkTextContent":"性能监控"},{"Type":"NodeText","Data":"：记录方法执行时间，监控性能瓶颈。"}]}]}]},{"ID":"20241015203672-9fm8tzn","Type":"NodeParagraph","Properties":{"id":"20241015203672-9fm8tzn","updated":"20241015203672"},"Children":[{"Type":"NodeText","Data":"通过AOP，这些功能可以非常灵活地应用到你指定的代码区域，并且无需改变业务逻辑。"}]}]}]},{"ID":"20241015203673-57tcr4v","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203673-57tcr4v","updated":"20241015203673"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"例子2"}]},{"ID":"20241015203674-1ehknqt","Type":"NodeBlockquote","Properties":{"id":"20241015203674-1ehknqt","updated":"20241015203674"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015203675-3swubca","Type":"NodeParagraph","Properties":{"id":"20241015203675-3swubca","updated":"20241015203675"},"Children":[{"Type":"NodeText","Data":"但是我看实际项目中，经常"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a strong","TextMarkTextContent":"将切点指定为被注解标注的方法"}]}]},{"ID":"20241015203676-vtx76pf","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203676-vtx76pf","updated":"20241015203676"},"Children":[{"ID":"20241015203677-3xu4jti","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203677-3xu4jti","updated":"20241015203677"},"Children":[{"ID":"20241015203678-p2t3x4w","Type":"NodeParagraph","Properties":{"id":"20241015203678-p2t3x4w","updated":"20241015203678"},"Children":[{"Type":"NodeText","Data":"确实，在实际项目中，使用注解来指定切点是一种非常常见的做法。这种方式比直接通过方法签名（如 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution"},{"Type":"NodeText","Data":" 表达式）来定义切点更加灵活和可读，同时也使代码的职责更为明确。"}]},{"ID":"20241015203679-fy95wy8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203679-fy95wy8","updated":"20241015203679"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"为什么使用注解来指定切点？"}]},{"ID":"20241015203680-sjabyvt","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203680-sjabyvt","updated":"20241015203680"},"Children":[{"ID":"20241015203681-wstyuzn","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203681-wstyuzn","updated":"20241015203681"},"Children":[{"ID":"20241015203682-00wuv9b","Type":"NodeParagraph","Properties":{"id":"20241015203682-00wuv9b","updated":"20241015203682"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"更具可读性"},{"Type":"NodeText","Data":"：通过注解，开发人员可以清楚地知道哪些方法会被应用AOP逻辑，而不需要去理解复杂的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"execution"},{"Type":"NodeText","Data":" 表达式。"}]}]},{"ID":"20241015203683-hc04fg3","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203683-hc04fg3","updated":"20241015203683"},"Children":[{"ID":"20241015203684-6hgo04v","Type":"NodeParagraph","Properties":{"id":"20241015203684-6hgo04v","updated":"20241015203684"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"灵活性"},{"Type":"NodeText","Data":"：注解可以应用在类、方法等不同层次，适应更复杂的业务场景。只需为某些方法加上注解，就可以灵活地控制AOP的应用。"}]}]},{"ID":"20241015203685-9568z1i","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203685-9568z1i","updated":"20241015203685"},"Children":[{"ID":"20241015203686-ptjs88c","Type":"NodeParagraph","Properties":{"id":"20241015203686-ptjs88c","updated":"20241015203686"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"解耦"},{"Type":"NodeText","Data":"：将业务代码与AOP逻辑解耦，业务代码只需关注业务逻辑，AOP逻辑通过注解进行织入，提升代码维护性。"}]}]}]},{"ID":"20241015203687-8ud4xk5","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203687-8ud4xk5","updated":"20241015203687"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"使用注解来指定切点的实际例子"}]},{"ID":"20241015203688-13sol1o","Type":"NodeParagraph","Properties":{"id":"20241015203688-13sol1o","updated":"20241015203688"},"Children":[{"Type":"NodeText","Data":"接下来，我们通过一个例子来演示如何使用自定义注解和AOP实现。"}]},{"ID":"20241015203689-fhbp6dc","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203689-fhbp6dc","updated":"20241015203689"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. 创建自定义注解"}]},{"ID":"20241015203690-nabam4g","Type":"NodeParagraph","Properties":{"id":"20241015203690-nabam4g","updated":"20241015203690"},"Children":[{"Type":"NodeText","Data":"首先，我们定义一个自定义注解 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":"，用于标注需要记录方法执行时间的方法。"}]},{"ID":"20241015203691-4k00o0a","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203691-4k00o0a","updated":"20241015203691"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface LogExecutionTime {\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203692-02b54jr","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203692-02b54jr","updated":"20241015203692"},"Children":[{"ID":"20241015203693-1j7sz2u","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203693-1j7sz2u","updated":"20241015203693"},"Children":[{"ID":"20241015203694-v3fu2oz","Type":"NodeParagraph","Properties":{"id":"20241015203694-v3fu2oz","updated":"20241015203694"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Retention(RetentionPolicy.RUNTIME)"},{"Type":"NodeText","Data":"：该注解将在运行时可用。"}]}]},{"ID":"20241015203695-nxtoz0a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203695-nxtoz0a","updated":"20241015203695"},"Children":[{"ID":"20241015203696-zdab2zx","Type":"NodeParagraph","Properties":{"id":"20241015203696-zdab2zx","updated":"20241015203696"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Target(ElementType.METHOD)"},{"Type":"NodeText","Data":"：该注解只能用于方法上。"}]}]}]},{"ID":"20241015203697-n4cy5t2","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203697-n4cy5t2","updated":"20241015203697"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. 在切面类中使用注解作为切点"}]},{"ID":"20241015203698-1vmykbw","Type":"NodeParagraph","Properties":{"id":"20241015203698-1vmykbw","updated":"20241015203698"},"Children":[{"Type":"NodeText","Data":"接下来，我们在切面类中定义切点，并使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Around"},{"Type":"NodeText","Data":" 通知来环绕被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":" 注解标注的方法。"}]},{"ID":"20241015203699-u97mpoy","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203699-u97mpoy","updated":"20241015203699"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\npublic class LoggingAspect {\n\n    @Around(\"@annotation(com.example.annotations.LogExecutionTime)\")\n    public Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {\n        long startTime = System.currentTimeMillis();\n        Object proceed = joinPoint.proceed();  // 执行目标方法\n        long executionTime = System.currentTimeMillis() - startTime;\n\n        System.out.println(joinPoint.getSignature() + \" executed in \" + executionTime + \"ms\");\n        return proceed;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203700-jr2f3k3","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203700-jr2f3k3","updated":"20241015203700"},"Children":[{"ID":"20241015203701-guoh72q","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203701-guoh72q","updated":"20241015203701"},"Children":[{"ID":"20241015203702-nvg877j","Type":"NodeParagraph","Properties":{"id":"20241015203702-nvg877j","updated":"20241015203702"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Around(\u0026quot;@annotation(com.example.annotations.LogExecutionTime)\u0026quot;)"},{"Type":"NodeText","Data":"：这里的切点表达式表示，任何被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":" 注解标注的方法都会被这个通知拦截。"}]}]},{"ID":"20241015203703-szrm5ho","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203703-szrm5ho","updated":"20241015203703"},"Children":[{"ID":"20241015203704-y8bks5p","Type":"NodeParagraph","Properties":{"id":"20241015203704-y8bks5p","updated":"20241015203704"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ProceedingJoinPoint"},{"Type":"NodeText","Data":"：这是环绕通知专用的参数，允许我们控制目标方法的执行（包括决定是否执行）。"}]}]}]},{"ID":"20241015203705-ja9l4bw","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203705-ja9l4bw","updated":"20241015203705"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. 在业务方法中使用注解"}]},{"ID":"20241015203706-k86m3md","Type":"NodeParagraph","Properties":{"id":"20241015203706-k86m3md","updated":"20241015203706"},"Children":[{"Type":"NodeText","Data":"现在，我们可以在需要记录执行时间的业务方法上加上自定义注解 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":"。"}]},{"ID":"20241015203707-j0tslgd","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203707-j0tslgd","updated":"20241015203707"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"import org.springframework.stereotype.Service;\n\n@Service\npublic class UserService {\n\n    @LogExecutionTime\n    public String getUserById(Long id) {\n        // 模拟从数据库获取用户信息\n        return \"User with ID: \" + id;\n    }\n\n    @LogExecutionTime\n    public void createUser(String name) {\n        // 模拟创建用户\n        System.out.println(\"User \" + name + \" created.\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203708-cv2zl08","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203708-cv2zl08","updated":"20241015203708"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"4. 运行应用"}]},{"ID":"20241015203709-8nv3pkj","Type":"NodeParagraph","Properties":{"id":"20241015203709-8nv3pkj","updated":"20241015203709"},"Children":[{"Type":"NodeText","Data":"启动Spring Boot应用，并调用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getUserById"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"createUser"},{"Type":"NodeText","Data":" 方法。由于这些方法被 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":" 注解标注，AOP切面将自动记录它们的执行时间："}]},{"ID":"20241015203710-ch07r3t","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203710-ch07r3t","updated":"20241015203710"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"getUserById executed in 10ms\ncreateUser executed in 5ms\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203711-0qfmwxx","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203711-0qfmwxx","updated":"20241015203711"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"使用注解的优势"}]},{"ID":"20241015203712-hjd070y","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203712-hjd070y","updated":"20241015203712"},"Children":[{"ID":"20241015203713-939v3tw","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203713-939v3tw","updated":"20241015203713"},"Children":[{"ID":"20241015203714-aebib6g","Type":"NodeParagraph","Properties":{"id":"20241015203714-aebib6g","updated":"20241015203714"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"选择性应用"},{"Type":"NodeText","Data":"：注解使得你可以选择性地在特定方法上应用AOP逻辑。比如，你可以仅在需要记录执行时间的方法上加注解，而不是将AOP应用到整个服务。"}]}]},{"ID":"20241015203715-1resn75","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203715-1resn75","updated":"20241015203715"},"Children":[{"ID":"20241015203716-cv5e1tg","Type":"NodeParagraph","Properties":{"id":"20241015203716-cv5e1tg","updated":"20241015203716"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"高内聚、低耦合"},{"Type":"NodeText","Data":"：业务类仅关注业务逻辑，通过注解灵活地决定哪些方法需要额外的AOP功能。AOP切面和业务逻辑是完全解耦的。"}]}]},{"ID":"20241015203717-s4jbb23","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203717-s4jbb23","updated":"20241015203717"},"Children":[{"ID":"20241015203718-eh33497","Type":"NodeParagraph","Properties":{"id":"20241015203718-eh33497","updated":"20241015203718"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"简洁的配置"},{"Type":"NodeText","Data":"：通过注解，你只需要在方法上轻松添加 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@LogExecutionTime"},{"Type":"NodeText","Data":"，即可实现AOP功能，而不需要理解复杂的切点表达式。"}]}]}]},{"ID":"20241015203719-aq10zxb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203719-aq10zxb","updated":"20241015203719"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"其他常见注解切点"}]},{"ID":"20241015203720-29ms64q","Type":"NodeParagraph","Properties":{"id":"20241015203720-29ms64q","updated":"20241015203720"},"Children":[{"Type":"NodeText","Data":"除了自定义注解外，Spring AOP还常用于一些已有的注解，如："}]},{"ID":"20241015203721-9qd5uyr","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203721-9qd5uyr","updated":"20241015203721"},"Children":[{"ID":"20241015203722-ubjxz1h","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203722-ubjxz1h","updated":"20241015203722"},"Children":[{"ID":"20241015203723-wg6jioc","Type":"NodeParagraph","Properties":{"id":"20241015203723-wg6jioc","updated":"20241015203723"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Transactional"},{"Type":"NodeText","Data":"：在事务管理中常见，AOP会在标注了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Transactional"},{"Type":"NodeText","Data":" 的方法上处理事务逻辑。"}]}]},{"ID":"20241015203724-z4od4an","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203724-z4od4an","updated":"20241015203724"},"Children":[{"ID":"20241015203725-ruyfpqe","Type":"NodeParagraph","Properties":{"id":"20241015203725-ruyfpqe","updated":"20241015203725"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Cacheable"},{"Type":"NodeText","Data":"：在Spring Cache中常用，AOP负责在方法执行前检查缓存，并根据需要存储或返回缓存结果。"}]}]}]},{"ID":"20241015203726-8rrpzft","Type":"NodeParagraph","Properties":{"id":"20241015203726-8rrpzft","updated":"20241015203726"},"Children":[{"Type":"NodeText","Data":"通过这些注解，Spring可以在不改变业务逻辑的情况下，通过AOP动态地为方法添加如事务、缓存等功能。"}]}]}]},{"ID":"20241015203727-blrl93g","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203727-blrl93g","updated":"20241015203727"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP具体使用场景"}]},{"ID":"20241015203728-jc2jn5d","Type":"NodeParagraph","Properties":{"id":"20241015203728-jc2jn5d","updated":"20241015203728"},"Children":[{"Type":"NodeText","Data":"以我的项目为例，主要有下面这些地方用到了 AOP："}]},{"ID":"20241015203729-1z4hm5l","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203729-1z4hm5l","updated":"20241015203729"},"Children":[{"ID":"20241015203730-ui1ueao","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203730-ui1ueao","updated":"20241015203730"},"Children":[{"ID":"20241015203731-gj0f41g","Type":"NodeParagraph","Properties":{"id":"20241015203731-gj0f41g","updated":"20241015203731"},"Children":[{"Type":"NodeText","Data":"基于 AOP 实现统一的日志管理。"}]}]},{"ID":"20241015203732-b5ltjl8","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203732-b5ltjl8","updated":"20241015203732"},"Children":[{"ID":"20241015203733-80d6vyt","Type":"NodeParagraph","Properties":{"id":"20241015203733-80d6vyt","updated":"20241015203733"},"Children":[{"Type":"NodeText","Data":"基于 Redisson + AOP 实现了接口防刷，一个注解即可限制接口指定时间内单个用户可以请求的次数。"}]}]},{"ID":"20241015203734-ytba14s","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203734-ytba14s","updated":"20241015203734"},"Children":[{"ID":"20241015203735-6gkg7cz","Type":"NodeParagraph","Properties":{"id":"20241015203735-6gkg7cz","updated":"20241015203735"},"Children":[{"Type":"NodeText","Data":"基于 Spring Security 提供的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@PreAuthorize"},{"Type":"NodeText","Data":" 实现权限控制，其底层也是基于 AOP。"}]}]}]},{"ID":"20241015203736-cgecogt","Type":"NodeParagraph","Properties":{"id":"20241015203736-cgecogt","updated":"20241015203736"},"Children":[{"Type":"NodeText","Data":"实际面试中，你可以根据自己的项目去介绍，我这里只是列举了几个最常见的例子。"}]},{"ID":"20241015203737-0802jdd","Type":"NodeParagraph","Properties":{"id":"20241015203737-0802jdd","updated":"20241015203737"},"Children":[{"Type":"NodeText","Data":"https://mp.weixin.qq.com/s/NvWZAusbSaXYlT4MEWh7zQ"}]},{"ID":"20241015203738-iqllmws","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203738-iqllmws","updated":"20241015203738"},"Children":[{"ID":"20241015203739-m87rce7","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203739-m87rce7","updated":"20241015203739"},"Children":[{"ID":"20241015203740-exuih6n","Type":"NodeParagraph","Properties":{"id":"20241015203740-exuih6n","updated":"20241015203740"},"Children":[{"Type":"NodeText","Data":"AOP（面向切面编程）不仅限于日志功能，它可以用于处理许多"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"横切关注点"},{"Type":"NodeText","Data":"，即那些跨越多个模块或类的通用功能。以下是AOP常见的使用场景和具体的例子："}]},{"ID":"20241015203741-r6esbho","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203741-r6esbho","updated":"20241015203741"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"1. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"事务管理：@Transactional"}]},{"ID":"20241015203742-jlydipi","Type":"NodeParagraph","Properties":{"id":"20241015203742-jlydipi","updated":"20241015203742"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：在某些业务操作中，需要确保多个数据库操作作为一个原子操作执行，即要么全部成功，要么全部失败。"}]},{"ID":"20241015203743-mjhog6g","Type":"NodeParagraph","Properties":{"id":"20241015203743-mjhog6g","updated":"20241015203743"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 通过Spring的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Transactional"},{"Type":"NodeText","Data":" 注解，AOP自动管理方法的事务逻辑，在方法执行之前开启事务，在方法执行之后提交事务。如果方法抛出异常，AOP会自动回滚事务。"}]},{"ID":"20241015203744-sdnlif9","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203744-sdnlif9","updated":"20241015203744"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Transactional\npublic void transferMoney(Long fromAccountId, Long toAccountId, BigDecimal amount) {\n    // 执行转账逻辑\n    accountService.debit(fromAccountId, amount);\n    accountService.credit(toAccountId, amount);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203745-xonszu8","Type":"NodeParagraph","Properties":{"id":"20241015203745-xonszu8","updated":"20241015203745"},"Children":[{"Type":"NodeText","Data":"在这个例子中，Spring AOP在转账方法开始时开启事务，在结束时提交，如果出现异常，会自动回滚。"}]},{"ID":"20241015203746-ri5d3ae","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203746-ri5d3ae","updated":"20241015203746"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"2. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"安全检查（权限验证）"}]},{"ID":"20241015203747-xtpgfoj","Type":"NodeParagraph","Properties":{"id":"20241015203747-xtpgfoj","updated":"20241015203747"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：在执行某些敏感操作之前，需要验证用户是否具备相应的权限。"}]},{"ID":"20241015203748-kc1giwb","Type":"NodeParagraph","Properties":{"id":"20241015203748-kc1giwb","updated":"20241015203748"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 使用AOP可以在方法执行前进行权限验证。如果用户没有权限，可以抛出异常或阻止操作。"}]},{"ID":"20241015203749-cinibtu","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203749-cinibtu","updated":"20241015203749"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Aspect\n@Component\npublic class SecurityAspect {\n\n    @Before(\"@annotation(com.example.annotations.RequiresAdmin)\")\n    public void checkAdminRole(JoinPoint joinPoint) {\n        // 检查当前用户是否具有管理员权限\n        if (!currentUser.isAdmin()) {\n            throw new SecurityException(\"Unauthorized access - Admin role required.\");\n        }\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203750-lvmlg5g","Type":"NodeParagraph","Properties":{"id":"20241015203750-lvmlg5g","updated":"20241015203750"},"Children":[{"Type":"NodeText","Data":"然后在需要验证权限的方法上使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@RequiresAdmin"},{"Type":"NodeText","Data":" 注解："}]},{"ID":"20241015203751-6u2atuw","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203751-6u2atuw","updated":"20241015203751"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@RequiresAdmin\npublic void deleteUser(Long userId) {\n    // 删除用户逻辑\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203752-0b91ifv","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203752-0b91ifv","updated":"20241015203752"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"3. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"性能监控"}]},{"ID":"20241015203753-0ekr8ae","Type":"NodeParagraph","Properties":{"id":"20241015203753-0ekr8ae","updated":"20241015203753"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：在一些关键的业务操作中，可能需要监控方法执行的性能，分析系统的瓶颈。"}]},{"ID":"20241015203754-bnndkss","Type":"NodeParagraph","Properties":{"id":"20241015203754-bnndkss","updated":"20241015203754"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 可以通过AOP记录方法的执行时间，生成性能日志，帮助开发人员分析系统性能。"}]},{"ID":"20241015203755-onqpfrz","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203755-onqpfrz","updated":"20241015203755"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Aspect\n@Component\npublic class PerformanceMonitorAspect {\n\n    @Around(\"@annotation(com.example.annotations.MonitorPerformance)\")\n    public Object monitorPerformance(ProceedingJoinPoint joinPoint) throws Throwable {\n        long start = System.currentTimeMillis();\n        Object result = joinPoint.proceed(); // 执行目标方法\n        long executionTime = System.currentTimeMillis() - start;\n\n        System.out.println(joinPoint.getSignature() + \" executed in \" + executionTime + \"ms\");\n        return result;\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203756-sh57lff","Type":"NodeParagraph","Properties":{"id":"20241015203756-sh57lff","updated":"20241015203756"},"Children":[{"Type":"NodeText","Data":"在需要监控性能的方法上加 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@MonitorPerformance"},{"Type":"NodeText","Data":" 注解："}]},{"ID":"20241015203757-hgtbvli","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203757-hgtbvli","updated":"20241015203757"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@MonitorPerformance\npublic void processLargeDataset() {\n    // 处理大数据集的逻辑\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203758-2alkwwh","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203758-2alkwwh","updated":"20241015203758"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"4. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存处理"}]},{"ID":"20241015203759-u7mh0f3","Type":"NodeParagraph","Properties":{"id":"20241015203759-u7mh0f3","updated":"20241015203759"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：对于某些重复调用的查询操作，可以使用缓存避免频繁的数据库访问，提升性能。"}]},{"ID":"20241015203760-9ta0v6v","Type":"NodeParagraph","Properties":{"id":"20241015203760-9ta0v6v","updated":"20241015203760"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： Spring提供了 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"@Cacheable"},{"Type":"NodeText","Data":" 注解来通过AOP实现方法级别的缓存。如果方法已经执行过并且结果存在缓存中，AOP会直接返回缓存结果，而不执行实际方法。"}]},{"ID":"20241015203761-h1wtzv0","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203761-h1wtzv0","updated":"20241015203761"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Cacheable(\"users\")\npublic User getUserById(Long id) {\n    // 模拟从数据库获取用户信息\n    return userRepository.findById(id);\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203762-y08lyac","Type":"NodeParagraph","Properties":{"id":"20241015203762-y08lyac","updated":"20241015203762"},"Children":[{"Type":"NodeText","Data":"在这个例子中，AOP会在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"getUserById"},{"Type":"NodeText","Data":" 方法执行前检查缓存，如果有缓存则返回缓存数据；否则执行方法并将结果缓存。"}]},{"ID":"20241015203763-nil9ajb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203763-nil9ajb","updated":"20241015203763"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"5. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异常处理"}]},{"ID":"20241015203764-roozym6","Type":"NodeParagraph","Properties":{"id":"20241015203764-roozym6","updated":"20241015203764"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：统一处理不同方法中可能出现的异常，例如将异常转换成标准化的错误响应或日志记录。"}]},{"ID":"20241015203765-r0u0mly","Type":"NodeParagraph","Properties":{"id":"20241015203765-r0u0mly","updated":"20241015203765"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 通过AOP可以捕获业务逻辑中的异常，并在统一的切面中处理这些异常，避免在每个方法中都进行重复的异常处理代码。"}]},{"ID":"20241015203766-awta8mq","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203766-awta8mq","updated":"20241015203766"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Aspect\n@Component\npublic class ExceptionHandlerAspect {\n\n    @AfterThrowing(pointcut = \"execution(* com.example.service.*.*(..))\", throwing = \"exception\")\n    public void handleException(JoinPoint joinPoint, Throwable exception) {\n        // 统一异常处理逻辑，比如记录日志或转换为自定义异常\n        System.out.println(\"Exception in method: \" + joinPoint.getSignature().getName());\n        System.out.println(\"Exception message: \" + exception.getMessage());\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203767-kdr57rb","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203767-kdr57rb","updated":"20241015203767"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"6. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"审计日志"}]},{"ID":"20241015203768-0np70vc","Type":"NodeParagraph","Properties":{"id":"20241015203768-0np70vc","updated":"20241015203768"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：在一些需要审计的场景下，记录用户对系统的关键操作，例如数据修改或删除操作。"}]},{"ID":"20241015203769-x23ugh7","Type":"NodeParagraph","Properties":{"id":"20241015203769-x23ugh7","updated":"20241015203769"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 通过AOP可以在数据修改、删除操作前后记录用户操作的详细信息，生成审计日志。"}]},{"ID":"20241015203770-7dmleyn","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203770-7dmleyn","updated":"20241015203770"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Aspect\n@Component\npublic class AuditAspect {\n\n    @AfterReturning(pointcut = \"execution(* com.example.service.*.update*(..)) || execution(* com.example.service.*.delete*(..))\", returning = \"result\")\n    public void auditOperation(JoinPoint joinPoint, Object result) {\n        // 审计日志逻辑\n        System.out.println(\"Audit log: User performed \" + joinPoint.getSignature().getName());\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203771-x0c3kl4","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203771-x0c3kl4","updated":"20241015203771"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"7. "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据加解密"}]},{"ID":"20241015203772-lziyket","Type":"NodeParagraph","Properties":{"id":"20241015203772-lziyket","updated":"20241015203772"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"场景"},{"Type":"NodeText","Data":"：在某些敏感数据的处理场景中，需要在保存之前加密数据，或在读取数据后解密。"}]},{"ID":"20241015203773-orap43s","Type":"NodeParagraph","Properties":{"id":"20241015203773-orap43s","updated":"20241015203773"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"例子"},{"Type":"NodeText","Data":"： 通过AOP实现统一的数据加解密操作，减少在业务代码中重复编写加解密逻辑。"}]},{"ID":"20241015203774-prnqj48","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"amF2YQ==","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203774-prnqj48","updated":"20241015203774"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"amF2YQ==","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"@Aspect\n@Component\npublic class EncryptionAspect {\n\n    @Before(\"execution(* com.example.service.*.save*(..))\")\n    public void encryptData(JoinPoint joinPoint) {\n        Object[] args = joinPoint.getArgs();\n        // 对传入参数进行加密处理\n        for (int i = 0; i \u003c args.length; i++) {\n            if (args[i] instanceof String) {\n                args[i] = encrypt((String) args[i]);\n            }\n        }\n    }\n\n    @AfterReturning(pointcut = \"execution(* com.example.service.*.get*(..))\", returning = \"result\")\n    public void decryptData(JoinPoint joinPoint, Object result) {\n        if (result instanceof String) {\n            // 解密返回值\n            result = decrypt((String) result);\n        }\n    }\n\n    private String encrypt(String data) {\n        // 简单加密逻辑\n        return \"encrypted_\" + data;\n    }\n\n    private String decrypt(String data) {\n        // 简单解密逻辑\n        return data.replace(\"encrypted_\", \"\");\n    }\n}\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203775-ab5jjl1","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203775-ab5jjl1","updated":"20241015203775"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20241015203776-hodmmre","Type":"NodeParagraph","Properties":{"id":"20241015203776-hodmmre","updated":"20241015203776"},"Children":[{"Type":"NodeText","Data":"AOP在处理"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"横切关注点"},{"Type":"NodeText","Data":"方面非常强大，常见的使用场景包括："}]},{"ID":"20241015203777-zqdg86j","Type":"NodeList","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203777-zqdg86j","updated":"20241015203777"},"Children":[{"ID":"20241015203778-tf2itk0","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Tight":true,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203778-tf2itk0","updated":"20241015203778"},"Children":[{"ID":"20241015203779-vto8fyw","Type":"NodeParagraph","Properties":{"id":"20241015203779-vto8fyw","updated":"20241015203779"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"日志记录"}]}]},{"ID":"20241015203780-4pj1cjy","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203780-4pj1cjy","updated":"20241015203780"},"Children":[{"ID":"20241015203781-4mr8n26","Type":"NodeParagraph","Properties":{"id":"20241015203781-4mr8n26","updated":"20241015203781"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"事务管理"}]}]},{"ID":"20241015203782-6d7fhwz","Type":"NodeListItem","Data":"3","ListData":{"Typ":1,"Tight":true,"Start":3,"Delimiter":46,"Padding":3,"Marker":"Mw==","Num":3},"Properties":{"id":"20241015203782-6d7fhwz","updated":"20241015203782"},"Children":[{"ID":"20241015203783-8vgal8j","Type":"NodeParagraph","Properties":{"id":"20241015203783-8vgal8j","updated":"20241015203783"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"权限验证"}]}]},{"ID":"20241015203784-zcjcrmu","Type":"NodeListItem","Data":"4","ListData":{"Typ":1,"Tight":true,"Start":4,"Delimiter":46,"Padding":3,"Marker":"NA==","Num":4},"Properties":{"id":"20241015203784-zcjcrmu","updated":"20241015203784"},"Children":[{"ID":"20241015203785-j7ff5ae","Type":"NodeParagraph","Properties":{"id":"20241015203785-j7ff5ae","updated":"20241015203785"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"性能监控"}]}]},{"ID":"20241015203786-vmlb3xh","Type":"NodeListItem","Data":"5","ListData":{"Typ":1,"Tight":true,"Start":5,"Delimiter":46,"Padding":3,"Marker":"NQ==","Num":5},"Properties":{"id":"20241015203786-vmlb3xh","updated":"20241015203786"},"Children":[{"ID":"20241015203787-syb6bjb","Type":"NodeParagraph","Properties":{"id":"20241015203787-syb6bjb","updated":"20241015203787"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"缓存处理"}]}]},{"ID":"20241015203788-q5kr76g","Type":"NodeListItem","Data":"6","ListData":{"Typ":1,"Tight":true,"Start":6,"Delimiter":46,"Padding":3,"Marker":"Ng==","Num":6},"Properties":{"id":"20241015203788-q5kr76g","updated":"20241015203788"},"Children":[{"ID":"20241015203789-8tzi5om","Type":"NodeParagraph","Properties":{"id":"20241015203789-8tzi5om","updated":"20241015203789"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"异常处理"}]}]},{"ID":"20241015203790-36xi8ib","Type":"NodeListItem","Data":"7","ListData":{"Typ":1,"Tight":true,"Start":7,"Delimiter":46,"Padding":3,"Marker":"Nw==","Num":7},"Properties":{"id":"20241015203790-36xi8ib","updated":"20241015203790"},"Children":[{"ID":"20241015203791-12sdxpw","Type":"NodeParagraph","Properties":{"id":"20241015203791-12sdxpw","updated":"20241015203791"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"审计日志"}]}]},{"ID":"20241015203792-06vtulc","Type":"NodeListItem","Data":"8","ListData":{"Typ":1,"Tight":true,"Start":8,"Delimiter":46,"Padding":3,"Marker":"OA==","Num":8},"Properties":{"id":"20241015203792-06vtulc","updated":"20241015203792"},"Children":[{"ID":"20241015203793-ofh531y","Type":"NodeParagraph","Properties":{"id":"20241015203793-ofh531y","updated":"20241015203793"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"数据加解密"}]}]}]},{"ID":"20241015203794-8licia0","Type":"NodeParagraph","Properties":{"id":"20241015203794-8licia0","updated":"20241015203794"},"Children":[{"Type":"NodeText","Data":"通过AOP，可以将这些逻辑从业务代码中解耦，使得代码更简洁、可维护，同时确保这些通用功能的一致性。"}]}]}]},{"ID":"20241015203795-1nhd0d8","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203795-1nhd0d8","updated":"20241015203795"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"AOP和Interceptor一样吗"}]},{"ID":"20241015203796-399m5n6","Type":"NodeParagraph","Properties":{"id":"20241015203796-399m5n6","updated":"20241015203796"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring Boot"},{"Type":"NodeText","Data":" 中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Interceptor"},{"Type":"NodeText","Data":"（拦截器）并不是使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AOP（面向切面编程）"},{"Type":"NodeText","Data":" 实现的，虽然两者都有拦截功能，但它们的机制和使用场景不同。"}]},{"ID":"20241015203797-s73ufme","Type":"NodeList","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203797-s73ufme","updated":"20241015203797"},"Children":[{"ID":"20241015203798-0z8knmc","Type":"NodeListItem","Data":"1","ListData":{"Typ":1,"Start":1,"Delimiter":46,"Padding":3,"Marker":"MQ==","Num":1},"Properties":{"id":"20241015203798-0z8knmc","updated":"20241015203798"},"Children":[{"ID":"20241015203799-dz8rj64","Type":"NodeParagraph","Properties":{"id":"20241015203799-dz8rj64","updated":"20241015203799"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Interceptor（拦截器）"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203800-hn5dlvk","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203800-hn5dlvk","updated":"20241015203800"},"Children":[{"ID":"20241015203801-zoax529","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203801-zoax529","updated":"20241015203801"},"Children":[{"ID":"20241015203802-r1e6lmc","Type":"NodeParagraph","Properties":{"id":"20241015203802-r1e6lmc","updated":"20241015203802"},"Children":[{"Type":"NodeText","Data":"拦截器主要用于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"HTTP 请求的拦截"},{"Type":"NodeText","Data":"，通常用于处理 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Web 请求"},{"Type":"NodeText","Data":"，比如在请求处理之前或之后执行一些逻辑（如权限校验、日志记录等）。"}]}]},{"ID":"20241015203803-n8wzk51","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203803-n8wzk51","updated":"20241015203803"},"Children":[{"ID":"20241015203804-1hcsvp6","Type":"NodeParagraph","Properties":{"id":"20241015203804-1hcsvp6","updated":"20241015203804"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Interceptor"},{"Type":"NodeText","Data":" 主要通过实现 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"HandlerInterceptor"},{"Type":"NodeText","Data":" 接口来实现，其方法包括："}]},{"ID":"20241015203805-jqnammm","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203805-jqnammm","updated":"20241015203805"},"Children":[{"ID":"20241015203806-c3hsoja","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203806-c3hsoja","updated":"20241015203806"},"Children":[{"ID":"20241015203807-dmm1wbt","Type":"NodeParagraph","Properties":{"id":"20241015203807-dmm1wbt","updated":"20241015203807"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"preHandle()"},{"Type":"NodeText","Data":"：在控制器方法执行之前调用。"}]}]},{"ID":"20241015203808-gynyd1p","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203808-gynyd1p","updated":"20241015203808"},"Children":[{"ID":"20241015203809-w1bc1kt","Type":"NodeParagraph","Properties":{"id":"20241015203809-w1bc1kt","updated":"20241015203809"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"postHandle()"},{"Type":"NodeText","Data":"：在控制器方法执行之后，但还未返回视图之前调用。"}]}]},{"ID":"20241015203810-u90i3re","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203810-u90i3re","updated":"20241015203810"},"Children":[{"ID":"20241015203811-0jdfybe","Type":"NodeParagraph","Properties":{"id":"20241015203811-0jdfybe","updated":"20241015203811"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"afterCompletion()"},{"Type":"NodeText","Data":"：请求结束后调用，通常用于资源清理。"}]}]}]}]},{"ID":"20241015203812-sxpm82a","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203812-sxpm82a","updated":"20241015203812"},"Children":[{"ID":"20241015203813-7mdcjlk","Type":"NodeParagraph","Properties":{"id":"20241015203813-7mdcjlk","updated":"20241015203813"},"Children":[{"Type":"NodeText","Data":"拦截器是 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"基于 Servlet 的"},{"Type":"NodeText","Data":"，处理 HTTP 请求和响应，属于 Spring MVC 的一部分。"}]}]}]}]},{"ID":"20241015203814-rm5dqbj","Type":"NodeListItem","Data":"2","ListData":{"Typ":1,"Tight":true,"Start":2,"Delimiter":46,"Padding":3,"Marker":"Mg==","Num":2},"Properties":{"id":"20241015203814-rm5dqbj","updated":"20241015203814"},"Children":[{"ID":"20241015203815-axqh5yj","Type":"NodeParagraph","Properties":{"id":"20241015203815-axqh5yj","updated":"20241015203815"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AOP（Aspect Oriented Programming，面向切面编程）"},{"Type":"NodeText","Data":"："}]},{"ID":"20241015203816-uyqck7r","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203816-uyqck7r","updated":"20241015203816"},"Children":[{"ID":"20241015203817-kz6yorp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203817-kz6yorp","updated":"20241015203817"},"Children":[{"ID":"20241015203818-mey01g8","Type":"NodeParagraph","Properties":{"id":"20241015203818-mey01g8","updated":"20241015203818"},"Children":[{"Type":"NodeText","Data":"AOP 用于"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"分离关注点"},{"Type":"NodeText","Data":"，可以在不修改原有业务逻辑的情况下为某些方法或类添加额外的功能（如日志记录、事务管理、权限检查等）。"}]}]},{"ID":"20241015203819-g8stbyp","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203819-g8stbyp","updated":"20241015203819"},"Children":[{"ID":"20241015203820-7itw775","Type":"NodeParagraph","Properties":{"id":"20241015203820-7itw775","updated":"20241015203820"},"Children":[{"Type":"NodeText","Data":"AOP 通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切面"},{"Type":"NodeText","Data":" 和 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"切入点"},{"Type":"NodeText","Data":" 的概念，在指定的程序执行点（如方法调用前、后、异常处理时等）动态地插入代码。"}]}]},{"ID":"20241015203821-8tfpf9l","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203821-8tfpf9l","updated":"20241015203821"},"Children":[{"ID":"20241015203822-y1udqaq","Type":"NodeParagraph","Properties":{"id":"20241015203822-y1udqaq","updated":"20241015203822"},"Children":[{"Type":"NodeText","Data":"AOP 通常使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong code","TextMarkTextContent":"@Aspect"},{"Type":"NodeText","Data":" 注解来定义，基于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Spring AOP"},{"Type":"NodeText","Data":" 或 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AspectJ"},{"Type":"NodeText","Data":" 实现。"}]}]}]}]}]},{"ID":"20241015203823-jvxirss","Type":"NodeParagraph","Properties":{"id":"20241015203823-jvxirss","updated":"20241015203823"},"Children":[{"Type":"NodeText","Data":"因此，Spring Boot 中的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Interceptor"},{"Type":"NodeText","Data":" 并没有使用 AOP 实现。它们虽然有一些相似性（如都可以在方法调用前后执行逻辑），但拦截器主要是用于处理 Web 请求，属于 Spring MVC 的一部分，而 AOP 是一种更广泛的编程范式，用于解决横切关注点的问题。"}]},{"ID":"20241015203824-ag5i9ju","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203824-ag5i9ju","updated":"20241015203824"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"Python中的装饰器"}]},{"ID":"20241015203825-mdye1av","Type":"NodeList","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203825-mdye1av","updated":"20241015203825"},"Children":[{"ID":"20241015203826-pfdbpnz","Type":"NodeListItem","Data":"-","ListData":{"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203826-pfdbpnz","updated":"20241015203826"},"Children":[{"ID":"20241015203827-ae831oc","Type":"NodeParagraph","Properties":{"id":"20241015203827-ae831oc","updated":"20241015203827"},"Children":[{"Type":"NodeText","Data":"在 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"FastAPI"},{"Type":"NodeText","Data":" 中，装饰器可以用于实现类似 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"AOP"},{"Type":"NodeText","Data":" 的功能，比如在请求处理之前或之后执行一些逻辑（如权限校验、日志记录、异常处理等）。FastAPI 由于其基于 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"Python 装饰器"},{"Type":"NodeText","Data":" 的特性，特别适合通过装饰器实现横切关注点（Cross-cutting concerns），即 AOP 的核心理念。"}]},{"ID":"20241015203828-cs16jdd","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203828-cs16jdd","updated":"20241015203828"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"如何在 FastAPI 中使用装饰器实现 AOP？"}]},{"ID":"20241015203829-spmdwb0","Type":"NodeParagraph","Properties":{"id":"20241015203829-spmdwb0","updated":"20241015203829"},"Children":[{"Type":"NodeText","Data":"你可以通过编写自定义的装饰器，在每次 API 请求之前或之后执行一些代码。装饰器可以作用于任何 FastAPI 路由函数中。"}]},{"ID":"20241015203830-pgzajnf","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203830-pgzajnf","updated":"20241015203830"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"示例：使用装饰器实现请求前后的日志记录"}]},{"ID":"20241015203831-ui4eaor","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203831-ui4eaor","updated":"20241015203831"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"from fastapi import FastAPI\nfrom functools import wraps\n\napp = FastAPI()\n\n# 定义装饰器，用于记录请求前后的日志\ndef log_decorator(func):\n    @wraps(func)\n    async def wrapper(*args, **kwargs):\n        print(\"Before handling request\")\n        result = await func(*args, **kwargs)\n        print(\"After handling request\")\n        return result\n    return wrapper\n\n@app.get(\"/items/{item_id}\")\n@log_decorator  # 使用装饰器\nasync def read_item(item_id: int):\n    return {\"item_id\": item_id, \"message\": \"Item fetched successfully\"}\n\n# 启动 FastAPI 服务\n# uvicorn main:app --reload\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203832-1y6q1y7","Type":"NodeParagraph","Properties":{"id":"20241015203832-1y6q1y7","updated":"20241015203832"},"Children":[{"Type":"NodeText","Data":"在这个示例中，我们定义了一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"log_decorator"},{"Type":"NodeText","Data":" 装饰器，记录请求处理前后的日志。每当访问 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/items/{item_id}"},{"Type":"NodeText","Data":" 路由时，装饰器会在实际逻辑（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"read_item"},{"Type":"NodeText","Data":" 函数）执行之前和之后插入额外的日志记录。"}]},{"ID":"20241015203833-jocs3x0","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203833-jocs3x0","updated":"20241015203833"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"示例：权限验证装饰器"}]},{"ID":"20241015203834-w92sp4q","Type":"NodeParagraph","Properties":{"id":"20241015203834-w92sp4q","updated":"20241015203834"},"Children":[{"Type":"NodeText","Data":"一个常见的 AOP 场景是在请求处理之前检查用户的权限或认证状态。你可以创建一个装饰器来实现权限校验。"}]},{"ID":"20241015203835-avhp75f","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203835-avhp75f","updated":"20241015203835"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"from fastapi import FastAPI, HTTPException, Depends\n\napp = FastAPI()\n\n# 模拟的权限校验函数\ndef check_permission(user: str):\n    if user != \"admin\":\n        raise HTTPException(status_code=403, detail=\"Permission denied\")\n\n# 定义装饰器，用于权限校验\ndef permission_required(func):\n    @wraps(func)\n    async def wrapper(*args, **kwargs):\n        # 假设在这里进行权限验证\n        user = kwargs.get(\"user\", None)\n        check_permission(user)\n        return await func(*args, **kwargs)\n    return wrapper\n\n@app.get(\"/secure-data\")\n@permission_required  # 使用装饰器\nasync def get_secure_data(user: str):\n    return {\"message\": \"This is secure data\", \"user\": user}\n\n# 启动 FastAPI 服务\n# uvicorn main:app --reload\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203836-lvldfez","Type":"NodeParagraph","Properties":{"id":"20241015203836-lvldfez","updated":"20241015203836"},"Children":[{"Type":"NodeText","Data":"在这个例子中，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"permission_required"},{"Type":"NodeText","Data":" 装饰器会在路由处理逻辑执行之前检查用户是否有权限访问该路由。如果权限检查失败，会抛出一个 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"403 Forbidden"},{"Type":"NodeText","Data":" 异常。"}]},{"ID":"20241015203837-sbewajw","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203837-sbewajw","updated":"20241015203837"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"示例：异常处理装饰器"}]},{"ID":"20241015203838-508cmwm","Type":"NodeParagraph","Properties":{"id":"20241015203838-508cmwm","updated":"20241015203838"},"Children":[{"Type":"NodeText","Data":"你可以使用装饰器来捕获和处理异常，以保持代码的简洁和可维护性。这在 FastAPI 中也是一个常见的 AOP 场景。"}]},{"ID":"20241015203839-wftim15","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203839-wftim15","updated":"20241015203839"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"from fastapi import FastAPI\n\napp = FastAPI()\n\n# 定义装饰器，用于异常处理\ndef exception_handler_decorator(func):\n    @wraps(func)\n    async def wrapper(*args, **kwargs):\n        try:\n            return await func(*args, **kwargs)\n        except Exception as e:\n            return {\"error\": str(e)}\n    return wrapper\n\n@app.get(\"/divide\")\n@exception_handler_decorator  # 使用装饰器\nasync def divide(a: int, b: int):\n    return {\"result\": a / b}\n\n# 启动 FastAPI 服务\n# uvicorn main:app --reload\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203840-qmoepjn","Type":"NodeParagraph","Properties":{"id":"20241015203840-qmoepjn","updated":"20241015203840"},"Children":[{"Type":"NodeText","Data":"在这里，"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"exception_handler_decorator"},{"Type":"NodeText","Data":" 装饰器捕获所有未处理的异常并返回一个带有错误信息的 JSON 响应。当用户请求 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"/divide"},{"Type":"NodeText","Data":" 路由时，如果出现除零错误，装饰器将捕获并处理该异常，而不会让应用程序崩溃。"}]},{"ID":"20241015203841-lkooj1p","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203841-lkooj1p","updated":"20241015203841"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"更加复杂的场景：结合依赖注入的装饰器"}]},{"ID":"20241015203842-4o1gqn9","Type":"NodeParagraph","Properties":{"id":"20241015203842-4o1gqn9","updated":"20241015203842"},"Children":[{"Type":"NodeText","Data":"FastAPI 的一个强大特性是依赖注入（"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Depends"},{"Type":"NodeText","Data":"）。你可以将装饰器与依赖注入结合起来，实现更加复杂的 AOP 逻辑。"}]},{"ID":"20241015203843-wvod1dt","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241015203843-wvod1dt","updated":"20241015203843"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"#### ","Properties":{"id":""}},{"Type":"NodeText","Data":"示例：带有依赖注入的装饰器"}]},{"ID":"20241015203844-js9luu2","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"CodeBlockFenceChar":96,"CodeBlockFenceLen":3,"CodeBlockOpenFence":"YGBg","CodeBlockInfo":"cHl0aG9u","CodeBlockCloseFence":"YGBg","Properties":{"id":"20241015203844-js9luu2","updated":"20241015203844"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"cHl0aG9u","Properties":{"id":""}},{"Type":"NodeCodeBlockCode","Data":"from fastapi import FastAPI, Depends\n\napp = FastAPI()\n\n# 定义依赖项，用于获取当前用户\ndef get_current_user():\n    return \"admin\"  # 模拟从数据库或其他服务获取用户信息\n\n# 定义装饰器，用于基于用户权限执行额外的逻辑\ndef admin_required(func):\n    @wraps(func)\n    async def wrapper(*args, **kwargs):\n        user = kwargs.get(\"user\", None)\n        if user != \"admin\":\n            return {\"error\": \"Only admin can access this route\"}\n        return await func(*args, **kwargs)\n    return wrapper\n\n@app.get(\"/admin\")\n@admin_required  # 使用装饰器\nasync def admin_route(user: str = Depends(get_current_user)):\n    return {\"message\": \"Welcome, admin!\"}\n\n# 启动 FastAPI 服务\n# uvicorn main:app --reload\n","Properties":{"id":""}},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```","CodeBlockFenceLen":3,"Properties":{"id":""}}]},{"ID":"20241015203845-4u3vvjo","Type":"NodeParagraph","Properties":{"id":"20241015203845-4u3vvjo","updated":"20241015203845"},"Children":[{"Type":"NodeText","Data":"在这个例子中，装饰器 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"admin_required"},{"Type":"NodeText","Data":" 用于检查用户是否为管理员。我们使用 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Depends"},{"Type":"NodeText","Data":" 依赖注入来获取当前用户信息，并将其传递给装饰器以进行权限验证。"}]},{"ID":"20241015203846-ptc6qas","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20241015203846-ptc6qas","updated":"20241015203846"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"### ","Properties":{"id":""}},{"Type":"NodeText","Data":"总结"}]},{"ID":"20241015203847-hp9vfph","Type":"NodeParagraph","Properties":{"id":"20241015203847-hp9vfph","updated":"20241015203847"},"Children":[{"Type":"NodeText","Data":"在 FastAPI 中，你可以通过装饰器实现类似 AOP 的功能，包括日志记录、权限验证、异常处理等。装饰器可以轻松应用到路由处理函数上，从而在不修改业务逻辑的情况下，插入额外的逻辑。"}]}]}]},{"ID":"20241015203848-y0hesp0","Type":"NodeHeading","HeadingLevel":2,"Properties":{"id":"20241015203848-y0hesp0","updated":"20241015203848"},"Children":[{"Type":"NodeHeadingC8hMarker","Data":"## ","Properties":{"id":""}},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-knowledge-and-questions-summary.html#spring-框架中用到了哪些设计模式","TextMarkTextContent":"Spring 框架中用到了哪些设计模式？"}]},{"ID":"20241015203849-90oz64m","Type":"NodeBlockquote","Properties":{"id":"20241015203849-90oz64m","updated":"20241015203849"},"Children":[{"Type":"NodeBlockquoteMarker","Data":"\u003e ","Properties":{"id":""}},{"ID":"20241015203850-riuo0t8","Type":"NodeParagraph","Properties":{"id":"20241015203850-riuo0t8","updated":"20241015203850"},"Children":[{"Type":"NodeText","Data":"关于下面这些设计模式的详细介绍，可以看我写的 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"a","TextMarkAHref":"https://javaguide.cn/system-design/framework/spring/spring-design-patterns-summary.html","TextMarkTextContent":"Spring 中的设计模式详解open in new window"},{"Type":"NodeText","Data":" 这篇文章。"}]}]},{"ID":"20241015203851-62ty5zh","Type":"NodeList","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203851-62ty5zh","updated":"20241015203851"},"Children":[{"ID":"20241015203852-8d5n82n","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203852-8d5n82n","updated":"20241015203852"},"Children":[{"ID":"20241015203853-ankpm2m","Type":"NodeParagraph","Properties":{"id":"20241015203853-ankpm2m","updated":"20241015203853"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"工厂设计模式"},{"Type":"NodeText","Data":" : Spring 使用工厂模式通过 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"BeanFactory"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"ApplicationContext"},{"Type":"NodeText","Data":" 创建 bean 对象。"}]}]},{"ID":"20241015203854-793y6px","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203854-793y6px","updated":"20241015203854"},"Children":[{"ID":"20241015203855-avwd3u0","Type":"NodeParagraph","Properties":{"id":"20241015203855-avwd3u0","updated":"20241015203855"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"代理设计模式"},{"Type":"NodeText","Data":" : Spring AOP 功能的实现。"}]}]},{"ID":"20241015203856-d0c6l4t","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203856-d0c6l4t","updated":"20241015203856"},"Children":[{"ID":"20241015203857-yp2of4e","Type":"NodeParagraph","Properties":{"id":"20241015203857-yp2of4e","updated":"20241015203857"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"单例设计模式"},{"Type":"NodeText","Data":" : Spring 中的 Bean 默认都是单例的。"}]}]},{"ID":"20241015203858-yh245ae","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203858-yh245ae","updated":"20241015203858"},"Children":[{"ID":"20241015203859-gn317ln","Type":"NodeParagraph","Properties":{"id":"20241015203859-gn317ln","updated":"20241015203859"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"模板方法模式"},{"Type":"NodeText","Data":" : Spring 中 "},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"jdbcTemplate"},{"Type":"NodeText","Data":"、"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"hibernateTemplate"},{"Type":"NodeText","Data":" 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。"}]}]},{"ID":"20241015203860-o9aixpi","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203860-o9aixpi","updated":"20241015203860"},"Children":[{"ID":"20241015203861-sx3npbr","Type":"NodeParagraph","Properties":{"id":"20241015203861-sx3npbr","updated":"20241015203861"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"包装器设计模式"},{"Type":"NodeText","Data":" : 我们的项目需要连接多个数据库，而且不同的客户在每次访问中根据需要会去访问不同的数据库。这种模式让我们可以根据客户的需求能够动态切换不同的数据源。"}]}]},{"ID":"20241015203862-f569yzn","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203862-f569yzn","updated":"20241015203862"},"Children":[{"ID":"20241015203863-d8hgtpr","Type":"NodeParagraph","Properties":{"id":"20241015203863-d8hgtpr","updated":"20241015203863"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"观察者模式:"},{"Type":"NodeText","Data":" Spring 事件驱动模型就是观察者模式很经典的一个应用。"}]}]},{"ID":"20241015203864-6kwar90","Type":"NodeListItem","Data":"-","ListData":{"Tight":true,"BulletChar":45,"Padding":2,"Marker":"LQ==","Num":-1},"Properties":{"id":"20241015203864-6kwar90","updated":"20241015203864"},"Children":[{"ID":"20241015203865-h4wmf9y","Type":"NodeParagraph","Properties":{"id":"20241015203865-h4wmf9y","updated":"20241015203865"},"Children":[{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"strong","TextMarkTextContent":"适配器模式"},{"Type":"NodeText","Data":" : Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配"},{"Type":"NodeTextMark","Properties":{"id":""},"TextMarkType":"code","TextMarkTextContent":"Controller"},{"Type":"NodeText","Data":"。"}]}]}]}]}